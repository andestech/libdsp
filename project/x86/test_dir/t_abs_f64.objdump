
t_abs_f64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 5a 2f 00 00    	push   0x2f5a(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 5b 2f 00 00 	bnd jmp *0x2f5b(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3f90 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fread@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3f98 <fread@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fclose@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fa0 <fclose@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <log10f@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fb0 <log10f@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__printf_chk@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <fopen@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <sqrt@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__sprintf_chk@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	55                   	push   %rbp
    1165:	48 89 e5             	mov    %rsp,%rbp
    1168:	41 56                	push   %r14
    116a:	41 55                	push   %r13
    116c:	41 54                	push   %r12
    116e:	53                   	push   %rbx
    116f:	48 83 ec 30          	sub    $0x30,%rsp
    1173:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117a:	00 00 
    117c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1180:	31 c0                	xor    %eax,%eax
    1182:	48 8d 84 24 00 e0 ff 	lea    -0x2000(%rsp),%rax
    1189:	ff 
    118a:	48 89 e3             	mov    %rsp,%rbx
    118d:	48 39 c4             	cmp    %rax,%rsp
    1190:	74 15                	je     11a7 <main+0x47>
    1192:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1199:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11a0:	00 00 
    11a2:	48 39 c4             	cmp    %rax,%rsp
    11a5:	75 eb                	jne    1192 <main+0x32>
    11a7:	48 81 ec 10 06 00 00 	sub    $0x610,%rsp
    11ae:	48 83 8c 24 08 06 00 	orq    $0x0,0x608(%rsp)
    11b5:	00 00 
    11b7:	49 89 e6             	mov    %rsp,%r14
    11ba:	48 8d 84 24 00 e0 ff 	lea    -0x2000(%rsp),%rax
    11c1:	ff 
    11c2:	48 39 c4             	cmp    %rax,%rsp
    11c5:	74 12                	je     11d9 <main+0x79>
    11c7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11ce:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11d5:	00 00 
    11d7:	eb e9                	jmp    11c2 <main+0x62>
    11d9:	48 81 ec 10 06 00 00 	sub    $0x610,%rsp
    11e0:	48 83 8c 24 08 06 00 	orq    $0x0,0x608(%rsp)
    11e7:	00 00 
    11e9:	49 89 e5             	mov    %rsp,%r13
    11ec:	48 8d 84 24 00 e0 ff 	lea    -0x2000(%rsp),%rax
    11f3:	ff 
    11f4:	48 39 c4             	cmp    %rax,%rsp
    11f7:	74 12                	je     120b <main+0xab>
    11f9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1200:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1207:	00 00 
    1209:	eb e9                	jmp    11f4 <main+0x94>
    120b:	48 81 ec 10 06 00 00 	sub    $0x610,%rsp
    1212:	48 83 8c 24 08 06 00 	orq    $0x0,0x608(%rsp)
    1219:	00 00 
    121b:	48 8d 3d 99 0e 00 00 	lea    0xe99(%rip),%rdi        # 20bb <_IO_stdin_used+0xbb>
    1222:	4c 89 f6             	mov    %r14,%rsi
    1225:	49 89 e4             	mov    %rsp,%r12
    1228:	e8 93 04 00 00       	call   16c0 <read_write_buffer.constprop.0>
    122d:	4c 89 e6             	mov    %r12,%rsi
    1230:	48 8d 3d 96 0e 00 00 	lea    0xe96(%rip),%rdi        # 20cd <_IO_stdin_used+0xcd>
    1237:	e8 84 04 00 00       	call   16c0 <read_write_buffer.constprop.0>
    123c:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1240:	31 c0                	xor    %eax,%eax
    1242:	66 0f 28 d7          	movapd %xmm7,%xmm2
    1246:	eb 24                	jmp    126c <main+0x10c>
    1248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    124f:	00 
    1250:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    1254:	66 0f 28 d8          	movapd %xmm0,%xmm3
    1258:	f2 0f 5f da          	maxsd  %xmm2,%xmm3
    125c:	48 83 c0 08          	add    $0x8,%rax
    1260:	66 0f 28 d3          	movapd %xmm3,%xmm2
    1264:	48 3d 08 26 00 00    	cmp    $0x2608,%rax
    126a:	74 24                	je     1290 <main+0x130>
    126c:	f2 41 0f 10 04 06    	movsd  (%r14,%rax,1),%xmm0
    1272:	f2 41 0f 10 0c 04    	movsd  (%r12,%rax,1),%xmm1
    1278:	66 0f 2f c1          	comisd %xmm1,%xmm0
    127c:	77 d2                	ja     1250 <main+0xf0>
    127e:	66 0f 28 d9          	movapd %xmm1,%xmm3
    1282:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    1286:	eb d0                	jmp    1258 <main+0xf8>
    1288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    128f:	00 
    1290:	66 0f 28 c3          	movapd %xmm3,%xmm0
    1294:	bf 01 00 00 00       	mov    $0x1,%edi
    1299:	b8 01 00 00 00       	mov    $0x1,%eax
    129e:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 20e0 <_IO_stdin_used+0xe0>
    12a5:	e8 76 fe ff ff       	call   1120 <__printf_chk@plt>
    12aa:	ba c1 04 00 00       	mov    $0x4c1,%edx
    12af:	4c 89 ee             	mov    %r13,%rsi
    12b2:	4c 89 f7             	mov    %r14,%rdi
    12b5:	e8 76 04 00 00       	call   1730 <riscv_dsp_abs_f64>
    12ba:	66 0f ef ed          	pxor   %xmm5,%xmm5
    12be:	66 0f ef ff          	pxor   %xmm7,%xmm7
    12c2:	31 c0                	xor    %eax,%eax
    12c4:	66 44 0f 28 c7       	movapd %xmm7,%xmm8
    12c9:	66 0f 28 f7          	movapd %xmm7,%xmm6
    12cd:	0f 28 dd             	movaps %xmm5,%xmm3
    12d0:	0f 28 c5             	movaps %xmm5,%xmm0
    12d3:	44 0f 28 cd          	movaps %xmm5,%xmm9
    12d7:	44 0f 28 d5          	movaps %xmm5,%xmm10
    12db:	eb 3e                	jmp    131b <main+0x1bb>
    12dd:	0f 1f 00             	nopl   (%rax)
    12e0:	f2 0f 5c e1          	subsd  %xmm1,%xmm4
    12e4:	66 0f ef d2          	pxor   %xmm2,%xmm2
    12e8:	f2 0f 5a d4          	cvtsd2ss %xmm4,%xmm2
    12ec:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    12f0:	0f 28 e2             	movaps %xmm2,%xmm4
    12f3:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    12f7:	48 83 c0 08          	add    $0x8,%rax
    12fb:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    12ff:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    1303:	0f 28 dc             	movaps %xmm4,%xmm3
    1306:	f2 44 0f 58 c1       	addsd  %xmm1,%xmm8
    130b:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    130f:	f2 0f 58 f2          	addsd  %xmm2,%xmm6
    1313:	48 3d 08 26 00 00    	cmp    $0x2608,%rax
    1319:	74 5d                	je     1378 <main+0x218>
    131b:	f2 41 0f 10 0c 04    	movsd  (%r12,%rax,1),%xmm1
    1321:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1325:	f2 41 0f 10 64 05 00 	movsd  0x0(%r13,%rax,1),%xmm4
    132c:	f3 41 0f 5a d2       	cvtss2sd %xmm10,%xmm2
    1331:	66 0f 2f ca          	comisd %xmm2,%xmm1
    1335:	76 0a                	jbe    1341 <main+0x1e1>
    1337:	66 45 0f ef d2       	pxor   %xmm10,%xmm10
    133c:	f2 44 0f 5a d1       	cvtsd2ss %xmm1,%xmm10
    1341:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1345:	f3 41 0f 5a d1       	cvtss2sd %xmm9,%xmm2
    134a:	66 0f 2f d1          	comisd %xmm1,%xmm2
    134e:	76 0a                	jbe    135a <main+0x1fa>
    1350:	66 45 0f ef c9       	pxor   %xmm9,%xmm9
    1355:	f2 44 0f 5a c9       	cvtsd2ss %xmm1,%xmm9
    135a:	66 0f 2f e1          	comisd %xmm1,%xmm4
    135e:	77 80                	ja     12e0 <main+0x180>
    1360:	66 0f 28 d1          	movapd %xmm1,%xmm2
    1364:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
    1368:	f2 0f 5a d2          	cvtsd2ss %xmm2,%xmm2
    136c:	e9 7b ff ff ff       	jmp    12ec <main+0x18c>
    1371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1378:	f3 0f 5e 05 b8 0d 00 	divss  0xdb8(%rip),%xmm0        # 2138 <_IO_stdin_used+0x138>
    137f:	00 
    1380:	66 41 0f 7e c6       	movd   %xmm0,%r14d
    1385:	66 0f 28 c6          	movapd %xmm6,%xmm0
    1389:	f2 0f 5e 05 af 0d 00 	divsd  0xdaf(%rip),%xmm0        # 2140 <_IO_stdin_used+0x140>
    1390:	00 
    1391:	66 0f 2e f8          	ucomisd %xmm0,%xmm7
    1395:	0f 87 3b 01 00 00    	ja     14d6 <main+0x376>
    139b:	f2 0f 51 c0          	sqrtsd %xmm0,%xmm0
    139f:	f3 45 0f 5c d1       	subss  %xmm9,%xmm10
    13a4:	66 0f 2e f7          	ucomisd %xmm7,%xmm6
    13a8:	66 0f ef c9          	pxor   %xmm1,%xmm1
    13ac:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    13b0:	0f 28 e1             	movaps %xmm1,%xmm4
    13b3:	f3 41 0f 5e e2       	divss  %xmm10,%xmm4
    13b8:	66 41 0f 7e e4       	movd   %xmm4,%r12d
    13bd:	0f 8a c1 00 00 00    	jp     1484 <main+0x324>
    13c3:	f3 0f 10 25 69 0d 00 	movss  0xd69(%rip),%xmm4        # 2134 <_IO_stdin_used+0x134>
    13ca:	00 
    13cb:	0f 85 b3 00 00 00    	jne    1484 <main+0x324>
    13d1:	48 8d 3d 1c 0d 00 00 	lea    0xd1c(%rip),%rdi        # 20f4 <_IO_stdin_used+0xf4>
    13d8:	f3 0f 11 5d bc       	movss  %xmm3,-0x44(%rbp)
    13dd:	f3 0f 11 65 c0       	movss  %xmm4,-0x40(%rbp)
    13e2:	f3 0f 11 4d c8       	movss  %xmm1,-0x38(%rbp)
    13e7:	e8 e4 fc ff ff       	call   10d0 <puts@plt>
    13ec:	f3 0f 10 65 c0       	movss  -0x40(%rbp),%xmm4
    13f1:	f3 0f 10 5d bc       	movss  -0x44(%rbp),%xmm3
    13f6:	66 41 0f 6e ee       	movd   %r14d,%xmm5
    13fb:	f3 0f 10 4d c8       	movss  -0x38(%rbp),%xmm1
    1400:	66 41 0f 6e fc       	movd   %r12d,%xmm7
    1405:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1409:	66 0f ef d2          	pxor   %xmm2,%xmm2
    140d:	f3 0f 5a c5          	cvtss2sd %xmm5,%xmm0
    1411:	f3 0f 5a d7          	cvtss2sd %xmm7,%xmm2
    1415:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    1419:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    141d:	48 8d 35 24 0c 00 00 	lea    0xc24(%rip),%rsi        # 2048 <_IO_stdin_used+0x48>
    1424:	bf 01 00 00 00       	mov    $0x1,%edi
    1429:	b8 05 00 00 00       	mov    $0x5,%eax
    142e:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1432:	e8 e9 fc ff ff       	call   1120 <__printf_chk@plt>
    1437:	66 41 0f 6e fc       	movd   %r12d,%xmm7
    143c:	66 0f ef ed          	pxor   %xmm5,%xmm5
    1440:	48 8d 15 c2 0c 00 00 	lea    0xcc2(%rip),%rdx        # 2109 <_IO_stdin_used+0x109>
    1447:	0f 2f fd             	comiss %xmm5,%xmm7
    144a:	77 6f                	ja     14bb <main+0x35b>
    144c:	48 8d 35 d3 0c 00 00 	lea    0xcd3(%rip),%rsi        # 2126 <_IO_stdin_used+0x126>
    1453:	bf 01 00 00 00       	mov    $0x1,%edi
    1458:	31 c0                	xor    %eax,%eax
    145a:	e8 c1 fc ff ff       	call   1120 <__printf_chk@plt>
    145f:	31 c0                	xor    %eax,%eax
    1461:	48 89 dc             	mov    %rbx,%rsp
    1464:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1468:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    146f:	00 00 
    1471:	0f 85 a5 00 00 00    	jne    151c <main+0x3bc>
    1477:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    147b:	5b                   	pop    %rbx
    147c:	41 5c                	pop    %r12
    147e:	41 5d                	pop    %r13
    1480:	41 5e                	pop    %r14
    1482:	5d                   	pop    %rbp
    1483:	c3                   	ret    
    1484:	f2 44 0f 5e c6       	divsd  %xmm6,%xmm8
    1489:	66 0f ef c0          	pxor   %xmm0,%xmm0
    148d:	f3 0f 11 5d c0       	movss  %xmm3,-0x40(%rbp)
    1492:	f3 0f 11 4d c8       	movss  %xmm1,-0x38(%rbp)
    1497:	f2 41 0f 5a c0       	cvtsd2ss %xmm8,%xmm0
    149c:	e8 6f fc ff ff       	call   1110 <log10f@plt>
    14a1:	f3 0f 10 5d c0       	movss  -0x40(%rbp),%xmm3
    14a6:	f3 0f 59 05 8e 0c 00 	mulss  0xc8e(%rip),%xmm0        # 213c <_IO_stdin_used+0x13c>
    14ad:	00 
    14ae:	f3 0f 10 4d c8       	movss  -0x38(%rbp),%xmm1
    14b3:	0f 28 e0             	movaps %xmm0,%xmm4
    14b6:	e9 16 ff ff ff       	jmp    13d1 <main+0x271>
    14bb:	48 8d 35 59 0c 00 00 	lea    0xc59(%rip),%rsi        # 211b <_IO_stdin_used+0x11b>
    14c2:	bf 01 00 00 00       	mov    $0x1,%edi
    14c7:	31 c0                	xor    %eax,%eax
    14c9:	e8 52 fc ff ff       	call   1120 <__printf_chk@plt>
    14ce:	83 c8 ff             	or     $0xffffffff,%eax
    14d1:	48 89 dc             	mov    %rbx,%rsp
    14d4:	eb 8e                	jmp    1464 <main+0x304>
    14d6:	f3 44 0f 11 4d b8    	movss  %xmm9,-0x48(%rbp)
    14dc:	f3 44 0f 11 55 bc    	movss  %xmm10,-0x44(%rbp)
    14e2:	f2 44 0f 11 45 c0    	movsd  %xmm8,-0x40(%rbp)
    14e8:	f2 0f 11 75 c8       	movsd  %xmm6,-0x38(%rbp)
    14ed:	f3 0f 11 65 b4       	movss  %xmm4,-0x4c(%rbp)
    14f2:	e8 49 fc ff ff       	call   1140 <sqrt@plt>
    14f7:	f3 0f 10 5d b4       	movss  -0x4c(%rbp),%xmm3
    14fc:	f2 0f 10 75 c8       	movsd  -0x38(%rbp),%xmm6
    1501:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1505:	f3 44 0f 10 4d b8    	movss  -0x48(%rbp),%xmm9
    150b:	f3 44 0f 10 55 bc    	movss  -0x44(%rbp),%xmm10
    1511:	f2 44 0f 10 45 c0    	movsd  -0x40(%rbp),%xmm8
    1517:	e9 83 fe ff ff       	jmp    139f <main+0x23f>
    151c:	e8 df fb ff ff       	call   1100 <__stack_chk_fail@plt>
    1521:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1528:	00 00 00 
    152b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001530 <_start>:
    1530:	f3 0f 1e fa          	endbr64 
    1534:	31 ed                	xor    %ebp,%ebp
    1536:	49 89 d1             	mov    %rdx,%r9
    1539:	5e                   	pop    %rsi
    153a:	48 89 e2             	mov    %rsp,%rdx
    153d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1541:	50                   	push   %rax
    1542:	54                   	push   %rsp
    1543:	45 31 c0             	xor    %r8d,%r8d
    1546:	31 c9                	xor    %ecx,%ecx
    1548:	48 8d 3d 11 fc ff ff 	lea    -0x3ef(%rip),%rdi        # 1160 <main>
    154f:	ff 15 83 2a 00 00    	call   *0x2a83(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1555:	f4                   	hlt    
    1556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    155d:	00 00 00 

0000000000001560 <deregister_tm_clones>:
    1560:	48 8d 3d a9 2a 00 00 	lea    0x2aa9(%rip),%rdi        # 4010 <__TMC_END__>
    1567:	48 8d 05 a2 2a 00 00 	lea    0x2aa2(%rip),%rax        # 4010 <__TMC_END__>
    156e:	48 39 f8             	cmp    %rdi,%rax
    1571:	74 15                	je     1588 <deregister_tm_clones+0x28>
    1573:	48 8b 05 66 2a 00 00 	mov    0x2a66(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    157a:	48 85 c0             	test   %rax,%rax
    157d:	74 09                	je     1588 <deregister_tm_clones+0x28>
    157f:	ff e0                	jmp    *%rax
    1581:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1588:	c3                   	ret    
    1589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001590 <register_tm_clones>:
    1590:	48 8d 3d 79 2a 00 00 	lea    0x2a79(%rip),%rdi        # 4010 <__TMC_END__>
    1597:	48 8d 35 72 2a 00 00 	lea    0x2a72(%rip),%rsi        # 4010 <__TMC_END__>
    159e:	48 29 fe             	sub    %rdi,%rsi
    15a1:	48 89 f0             	mov    %rsi,%rax
    15a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    15a8:	48 c1 f8 03          	sar    $0x3,%rax
    15ac:	48 01 c6             	add    %rax,%rsi
    15af:	48 d1 fe             	sar    %rsi
    15b2:	74 14                	je     15c8 <register_tm_clones+0x38>
    15b4:	48 8b 05 35 2a 00 00 	mov    0x2a35(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    15bb:	48 85 c0             	test   %rax,%rax
    15be:	74 08                	je     15c8 <register_tm_clones+0x38>
    15c0:	ff e0                	jmp    *%rax
    15c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15c8:	c3                   	ret    
    15c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015d0 <__do_global_dtors_aux>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	80 3d 35 2a 00 00 00 	cmpb   $0x0,0x2a35(%rip)        # 4010 <__TMC_END__>
    15db:	75 2b                	jne    1608 <__do_global_dtors_aux+0x38>
    15dd:	55                   	push   %rbp
    15de:	48 83 3d 12 2a 00 00 	cmpq   $0x0,0x2a12(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    15e5:	00 
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	74 0c                	je     15f7 <__do_global_dtors_aux+0x27>
    15eb:	48 8b 3d 16 2a 00 00 	mov    0x2a16(%rip),%rdi        # 4008 <__dso_handle>
    15f2:	e8 c9 fa ff ff       	call   10c0 <__cxa_finalize@plt>
    15f7:	e8 64 ff ff ff       	call   1560 <deregister_tm_clones>
    15fc:	c6 05 0d 2a 00 00 01 	movb   $0x1,0x2a0d(%rip)        # 4010 <__TMC_END__>
    1603:	5d                   	pop    %rbp
    1604:	c3                   	ret    
    1605:	0f 1f 00             	nopl   (%rax)
    1608:	c3                   	ret    
    1609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001610 <frame_dummy>:
    1610:	f3 0f 1e fa          	endbr64 
    1614:	e9 77 ff ff ff       	jmp    1590 <register_tm_clones>
    1619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001620 <test_Fopen.constprop.0.isra.0>:
    1620:	41 54                	push   %r12
    1622:	49 89 f9             	mov    %rdi,%r9
    1625:	49 89 fc             	mov    %rdi,%r12
    1628:	4c 8d 05 d9 09 00 00 	lea    0x9d9(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    162f:	55                   	push   %rbp
    1630:	48 8d 0d 62 0a 00 00 	lea    0xa62(%rip),%rcx        # 2099 <_IO_stdin_used+0x99>
    1637:	ba 00 04 00 00       	mov    $0x400,%edx
    163c:	53                   	push   %rbx
    163d:	48 89 f3             	mov    %rsi,%rbx
    1640:	be 01 00 00 00       	mov    $0x1,%esi
    1645:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    164c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1653:	00 00 
    1655:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    165c:	00 
    165d:	31 c0                	xor    %eax,%eax
    165f:	48 89 e5             	mov    %rsp,%rbp
    1662:	48 89 ef             	mov    %rbp,%rdi
    1665:	e8 e6 fa ff ff       	call   1150 <__sprintf_chk@plt>
    166a:	48 8d 35 2e 0a 00 00 	lea    0xa2e(%rip),%rsi        # 209f <_IO_stdin_used+0x9f>
    1671:	48 89 ef             	mov    %rbp,%rdi
    1674:	e8 b7 fa ff ff       	call   1130 <fopen@plt>
    1679:	48 89 03             	mov    %rax,(%rbx)
    167c:	48 85 c0             	test   %rax,%rax
    167f:	74 1f                	je     16a0 <test_Fopen.constprop.0.isra.0+0x80>
    1681:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1688:	00 
    1689:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1690:	00 00 
    1692:	75 22                	jne    16b6 <test_Fopen.constprop.0.isra.0+0x96>
    1694:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    169b:	5b                   	pop    %rbx
    169c:	5d                   	pop    %rbp
    169d:	41 5c                	pop    %r12
    169f:	c3                   	ret    
    16a0:	4c 89 e2             	mov    %r12,%rdx
    16a3:	48 8d 35 f8 09 00 00 	lea    0x9f8(%rip),%rsi        # 20a2 <_IO_stdin_used+0xa2>
    16aa:	bf 01 00 00 00       	mov    $0x1,%edi
    16af:	e8 6c fa ff ff       	call   1120 <__printf_chk@plt>
    16b4:	eb cb                	jmp    1681 <test_Fopen.constprop.0.isra.0+0x61>
    16b6:	e8 45 fa ff ff       	call   1100 <__stack_chk_fail@plt>
    16bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000016c0 <read_write_buffer.constprop.0>:
    16c0:	41 54                	push   %r12
    16c2:	55                   	push   %rbp
    16c3:	48 89 f5             	mov    %rsi,%rbp
    16c6:	48 83 ec 18          	sub    $0x18,%rsp
    16ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16d1:	00 00 
    16d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    16d8:	31 c0                	xor    %eax,%eax
    16da:	48 89 e6             	mov    %rsp,%rsi
    16dd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    16e4:	00 
    16e5:	e8 36 ff ff ff       	call   1620 <test_Fopen.constprop.0.isra.0>
    16ea:	4c 8b 24 24          	mov    (%rsp),%r12
    16ee:	ba c1 04 00 00       	mov    $0x4c1,%edx
    16f3:	48 89 ef             	mov    %rbp,%rdi
    16f6:	be 08 00 00 00       	mov    $0x8,%esi
    16fb:	4c 89 e1             	mov    %r12,%rcx
    16fe:	e8 dd f9 ff ff       	call   10e0 <fread@plt>
    1703:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1708:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    170f:	00 00 
    1711:	75 0f                	jne    1722 <read_write_buffer.constprop.0+0x62>
    1713:	48 83 c4 18          	add    $0x18,%rsp
    1717:	4c 89 e7             	mov    %r12,%rdi
    171a:	5d                   	pop    %rbp
    171b:	41 5c                	pop    %r12
    171d:	e9 ce f9 ff ff       	jmp    10f0 <fclose@plt>
    1722:	e8 d9 f9 ff ff       	call   1100 <__stack_chk_fail@plt>
    1727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    172e:	00 00 

0000000000001730 <riscv_dsp_abs_f64>:
    1730:	f3 0f 1e fa          	endbr64 
    1734:	85 d2                	test   %edx,%edx
    1736:	74 53                	je     178b <riscv_dsp_abs_f64+0x5b>
    1738:	83 fa 01             	cmp    $0x1,%edx
    173b:	74 3e                	je     177b <riscv_dsp_abs_f64+0x4b>
    173d:	89 d1                	mov    %edx,%ecx
    173f:	66 0f 28 0d 09 0a 00 	movapd 0xa09(%rip),%xmm1        # 2150 <_IO_stdin_used+0x150>
    1746:	00 
    1747:	31 c0                	xor    %eax,%eax
    1749:	d1 e9                	shr    %ecx
    174b:	48 c1 e1 04          	shl    $0x4,%rcx
    174f:	90                   	nop
    1750:	66 0f 10 04 07       	movupd (%rdi,%rax,1),%xmm0
    1755:	66 0f 54 c1          	andpd  %xmm1,%xmm0
    1759:	0f 11 04 06          	movups %xmm0,(%rsi,%rax,1)
    175d:	48 83 c0 10          	add    $0x10,%rax
    1761:	48 39 c1             	cmp    %rax,%rcx
    1764:	75 ea                	jne    1750 <riscv_dsp_abs_f64+0x20>
    1766:	89 d1                	mov    %edx,%ecx
    1768:	83 e1 fe             	and    $0xfffffffe,%ecx
    176b:	89 c8                	mov    %ecx,%eax
    176d:	48 c1 e0 03          	shl    $0x3,%rax
    1771:	48 01 c7             	add    %rax,%rdi
    1774:	48 01 c6             	add    %rax,%rsi
    1777:	39 ca                	cmp    %ecx,%edx
    1779:	74 10                	je     178b <riscv_dsp_abs_f64+0x5b>
    177b:	f2 0f 10 07          	movsd  (%rdi),%xmm0
    177f:	66 0f 54 05 d9 09 00 	andpd  0x9d9(%rip),%xmm0        # 2160 <_IO_stdin_used+0x160>
    1786:	00 
    1787:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
    178b:	c3                   	ret    

Disassembly of section .fini:

000000000000178c <_fini>:
    178c:	f3 0f 1e fa          	endbr64 
    1790:	48 83 ec 08          	sub    $0x8,%rsp
    1794:	48 83 c4 08          	add    $0x8,%rsp
    1798:	c3                   	ret    
