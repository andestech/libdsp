
t_absdiff_f64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 5a 2f 00 00    	push   0x2f5a(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 5b 2f 00 00 	bnd jmp *0x2f5b(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3f90 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fread@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3f98 <fread@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fclose@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fa0 <fclose@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <log10f@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fb0 <log10f@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__printf_chk@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <fopen@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <sqrt@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__sprintf_chk@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	55                   	push   %rbp
    1165:	48 89 e5             	mov    %rsp,%rbp
    1168:	41 57                	push   %r15
    116a:	41 56                	push   %r14
    116c:	41 55                	push   %r13
    116e:	41 54                	push   %r12
    1170:	53                   	push   %rbx
    1171:	48 83 ec 38          	sub    $0x38,%rsp
    1175:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117c:	00 00 
    117e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1182:	31 c0                	xor    %eax,%eax
    1184:	48 8d 84 24 00 00 fe 	lea    -0x20000(%rsp),%rax
    118b:	ff 
    118c:	48 89 e3             	mov    %rsp,%rbx
    118f:	48 39 c4             	cmp    %rax,%rsp
    1192:	74 15                	je     11a9 <main+0x49>
    1194:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    119b:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11a2:	00 00 
    11a4:	48 39 c4             	cmp    %rax,%rsp
    11a7:	75 eb                	jne    1194 <main+0x34>
    11a9:	49 89 e6             	mov    %rsp,%r14
    11ac:	48 8d 84 24 00 00 fe 	lea    -0x20000(%rsp),%rax
    11b3:	ff 
    11b4:	48 39 c4             	cmp    %rax,%rsp
    11b7:	74 12                	je     11cb <main+0x6b>
    11b9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11c0:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11c7:	00 00 
    11c9:	eb e9                	jmp    11b4 <main+0x54>
    11cb:	49 89 e7             	mov    %rsp,%r15
    11ce:	48 8d 84 24 00 00 fe 	lea    -0x20000(%rsp),%rax
    11d5:	ff 
    11d6:	48 39 c4             	cmp    %rax,%rsp
    11d9:	74 12                	je     11ed <main+0x8d>
    11db:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11e2:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11e9:	00 00 
    11eb:	eb e9                	jmp    11d6 <main+0x76>
    11ed:	49 89 e5             	mov    %rsp,%r13
    11f0:	48 8d 84 24 00 00 fe 	lea    -0x20000(%rsp),%rax
    11f7:	ff 
    11f8:	48 39 c4             	cmp    %rax,%rsp
    11fb:	74 12                	je     120f <main+0xaf>
    11fd:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1204:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    120b:	00 00 
    120d:	eb e9                	jmp    11f8 <main+0x98>
    120f:	48 8d 3d ad 0e 00 00 	lea    0xead(%rip),%rdi        # 20c3 <_IO_stdin_used+0xc3>
    1216:	4c 89 f6             	mov    %r14,%rsi
    1219:	49 89 e4             	mov    %rsp,%r12
    121c:	e8 9f 04 00 00       	call   16c0 <read_write_buffer.constprop.0>
    1221:	4c 89 fe             	mov    %r15,%rsi
    1224:	48 8d 3d a8 0e 00 00 	lea    0xea8(%rip),%rdi        # 20d3 <_IO_stdin_used+0xd3>
    122b:	e8 90 04 00 00       	call   16c0 <read_write_buffer.constprop.0>
    1230:	4c 89 e6             	mov    %r12,%rsi
    1233:	48 8d 3d a9 0e 00 00 	lea    0xea9(%rip),%rdi        # 20e3 <_IO_stdin_used+0xe3>
    123a:	e8 81 04 00 00       	call   16c0 <read_write_buffer.constprop.0>
    123f:	b9 ff 3f 00 00       	mov    $0x3fff,%ecx
    1244:	4c 89 ea             	mov    %r13,%rdx
    1247:	4c 89 fe             	mov    %r15,%rsi
    124a:	4c 89 f7             	mov    %r14,%rdi
    124d:	e8 de 04 00 00       	call   1730 <riscv_dsp_absdiff_f64>
    1252:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1256:	31 c0                	xor    %eax,%eax
    1258:	66 0f 28 d7          	movapd %xmm7,%xmm2
    125c:	eb 1e                	jmp    127c <main+0x11c>
    125e:	66 90                	xchg   %ax,%ax
    1260:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    1264:	66 0f 28 d8          	movapd %xmm0,%xmm3
    1268:	f2 0f 5f da          	maxsd  %xmm2,%xmm3
    126c:	48 83 c0 08          	add    $0x8,%rax
    1270:	66 0f 28 d3          	movapd %xmm3,%xmm2
    1274:	48 3d f8 ff 01 00    	cmp    $0x1fff8,%rax
    127a:	74 24                	je     12a0 <main+0x140>
    127c:	f2 41 0f 10 04 04    	movsd  (%r12,%rax,1),%xmm0
    1282:	f2 41 0f 10 4c 05 00 	movsd  0x0(%r13,%rax,1),%xmm1
    1289:	66 0f 2f c1          	comisd %xmm1,%xmm0
    128d:	77 d1                	ja     1260 <main+0x100>
    128f:	66 0f 28 d9          	movapd %xmm1,%xmm3
    1293:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    1297:	eb cf                	jmp    1268 <main+0x108>
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12a0:	66 0f 28 c3          	movapd %xmm3,%xmm0
    12a4:	bf 01 00 00 00       	mov    $0x1,%edi
    12a9:	b8 01 00 00 00       	mov    $0x1,%eax
    12ae:	48 8d 35 45 0e 00 00 	lea    0xe45(%rip),%rsi        # 20fa <_IO_stdin_used+0xfa>
    12b5:	e8 66 fe ff ff       	call   1120 <__printf_chk@plt>
    12ba:	66 0f ef ed          	pxor   %xmm5,%xmm5
    12be:	66 0f ef ff          	pxor   %xmm7,%xmm7
    12c2:	31 c0                	xor    %eax,%eax
    12c4:	66 44 0f 28 c7       	movapd %xmm7,%xmm8
    12c9:	66 0f 28 f7          	movapd %xmm7,%xmm6
    12cd:	0f 28 dd             	movaps %xmm5,%xmm3
    12d0:	0f 28 c5             	movaps %xmm5,%xmm0
    12d3:	44 0f 28 cd          	movaps %xmm5,%xmm9
    12d7:	44 0f 28 d5          	movaps %xmm5,%xmm10
    12db:	eb 3e                	jmp    131b <main+0x1bb>
    12dd:	0f 1f 00             	nopl   (%rax)
    12e0:	f2 0f 5c e1          	subsd  %xmm1,%xmm4
    12e4:	66 0f ef d2          	pxor   %xmm2,%xmm2
    12e8:	f2 0f 5a d4          	cvtsd2ss %xmm4,%xmm2
    12ec:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    12f0:	0f 28 e2             	movaps %xmm2,%xmm4
    12f3:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    12f7:	48 83 c0 08          	add    $0x8,%rax
    12fb:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    12ff:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    1303:	0f 28 dc             	movaps %xmm4,%xmm3
    1306:	f2 44 0f 58 c1       	addsd  %xmm1,%xmm8
    130b:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    130f:	f2 0f 58 f2          	addsd  %xmm2,%xmm6
    1313:	48 3d f8 ff 01 00    	cmp    $0x1fff8,%rax
    1319:	74 5d                	je     1378 <main+0x218>
    131b:	f2 41 0f 10 0c 04    	movsd  (%r12,%rax,1),%xmm1
    1321:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1325:	f2 41 0f 10 64 05 00 	movsd  0x0(%r13,%rax,1),%xmm4
    132c:	f3 41 0f 5a d2       	cvtss2sd %xmm10,%xmm2
    1331:	66 0f 2f ca          	comisd %xmm2,%xmm1
    1335:	76 0a                	jbe    1341 <main+0x1e1>
    1337:	66 45 0f ef d2       	pxor   %xmm10,%xmm10
    133c:	f2 44 0f 5a d1       	cvtsd2ss %xmm1,%xmm10
    1341:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1345:	f3 41 0f 5a d1       	cvtss2sd %xmm9,%xmm2
    134a:	66 0f 2f d1          	comisd %xmm1,%xmm2
    134e:	76 0a                	jbe    135a <main+0x1fa>
    1350:	66 45 0f ef c9       	pxor   %xmm9,%xmm9
    1355:	f2 44 0f 5a c9       	cvtsd2ss %xmm1,%xmm9
    135a:	66 0f 2f e1          	comisd %xmm1,%xmm4
    135e:	77 80                	ja     12e0 <main+0x180>
    1360:	66 0f 28 d1          	movapd %xmm1,%xmm2
    1364:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
    1368:	f2 0f 5a d2          	cvtsd2ss %xmm2,%xmm2
    136c:	e9 7b ff ff ff       	jmp    12ec <main+0x18c>
    1371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1378:	f3 0f 5e 05 d4 0d 00 	divss  0xdd4(%rip),%xmm0        # 2154 <_IO_stdin_used+0x154>
    137f:	00 
    1380:	66 41 0f 7e c7       	movd   %xmm0,%r15d
    1385:	66 0f 28 c6          	movapd %xmm6,%xmm0
    1389:	f2 0f 5e 05 cf 0d 00 	divsd  0xdcf(%rip),%xmm0        # 2160 <_IO_stdin_used+0x160>
    1390:	00 
    1391:	66 0f 2e f8          	ucomisd %xmm0,%xmm7
    1395:	0f 87 3d 01 00 00    	ja     14d8 <main+0x378>
    139b:	f2 0f 51 c0          	sqrtsd %xmm0,%xmm0
    139f:	f3 45 0f 5c d1       	subss  %xmm9,%xmm10
    13a4:	66 0f 2e f7          	ucomisd %xmm7,%xmm6
    13a8:	66 0f ef c9          	pxor   %xmm1,%xmm1
    13ac:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    13b0:	0f 28 e1             	movaps %xmm1,%xmm4
    13b3:	f3 41 0f 5e e2       	divss  %xmm10,%xmm4
    13b8:	66 41 0f 7e e4       	movd   %xmm4,%r12d
    13bd:	0f 8a c3 00 00 00    	jp     1486 <main+0x326>
    13c3:	f3 0f 10 25 85 0d 00 	movss  0xd85(%rip),%xmm4        # 2150 <_IO_stdin_used+0x150>
    13ca:	00 
    13cb:	0f 85 b5 00 00 00    	jne    1486 <main+0x326>
    13d1:	48 8d 3d 36 0d 00 00 	lea    0xd36(%rip),%rdi        # 210e <_IO_stdin_used+0x10e>
    13d8:	f3 0f 11 5d ac       	movss  %xmm3,-0x54(%rbp)
    13dd:	f3 0f 11 65 b0       	movss  %xmm4,-0x50(%rbp)
    13e2:	f3 0f 11 4d b8       	movss  %xmm1,-0x48(%rbp)
    13e7:	e8 e4 fc ff ff       	call   10d0 <puts@plt>
    13ec:	f3 0f 10 65 b0       	movss  -0x50(%rbp),%xmm4
    13f1:	f3 0f 10 5d ac       	movss  -0x54(%rbp),%xmm3
    13f6:	66 41 0f 6e ef       	movd   %r15d,%xmm5
    13fb:	f3 0f 10 4d b8       	movss  -0x48(%rbp),%xmm1
    1400:	66 41 0f 6e fc       	movd   %r12d,%xmm7
    1405:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1409:	66 0f ef d2          	pxor   %xmm2,%xmm2
    140d:	f3 0f 5a c5          	cvtss2sd %xmm5,%xmm0
    1411:	f3 0f 5a d7          	cvtss2sd %xmm7,%xmm2
    1415:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    1419:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    141d:	48 8d 35 2c 0c 00 00 	lea    0xc2c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1424:	bf 01 00 00 00       	mov    $0x1,%edi
    1429:	b8 05 00 00 00       	mov    $0x5,%eax
    142e:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1432:	e8 e9 fc ff ff       	call   1120 <__printf_chk@plt>
    1437:	66 41 0f 6e fc       	movd   %r12d,%xmm7
    143c:	66 0f ef ed          	pxor   %xmm5,%xmm5
    1440:	48 8d 15 dc 0c 00 00 	lea    0xcdc(%rip),%rdx        # 2123 <_IO_stdin_used+0x123>
    1447:	0f 2f fd             	comiss %xmm5,%xmm7
    144a:	77 71                	ja     14bd <main+0x35d>
    144c:	48 8d 35 f1 0c 00 00 	lea    0xcf1(%rip),%rsi        # 2144 <_IO_stdin_used+0x144>
    1453:	bf 01 00 00 00       	mov    $0x1,%edi
    1458:	31 c0                	xor    %eax,%eax
    145a:	e8 c1 fc ff ff       	call   1120 <__printf_chk@plt>
    145f:	31 c0                	xor    %eax,%eax
    1461:	48 89 dc             	mov    %rbx,%rsp
    1464:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1468:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    146f:	00 00 
    1471:	0f 85 a7 00 00 00    	jne    151e <main+0x3be>
    1477:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    147b:	5b                   	pop    %rbx
    147c:	41 5c                	pop    %r12
    147e:	41 5d                	pop    %r13
    1480:	41 5e                	pop    %r14
    1482:	41 5f                	pop    %r15
    1484:	5d                   	pop    %rbp
    1485:	c3                   	ret    
    1486:	f2 44 0f 5e c6       	divsd  %xmm6,%xmm8
    148b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    148f:	f3 0f 11 5d b0       	movss  %xmm3,-0x50(%rbp)
    1494:	f3 0f 11 4d b8       	movss  %xmm1,-0x48(%rbp)
    1499:	f2 41 0f 5a c0       	cvtsd2ss %xmm8,%xmm0
    149e:	e8 6d fc ff ff       	call   1110 <log10f@plt>
    14a3:	f3 0f 10 5d b0       	movss  -0x50(%rbp),%xmm3
    14a8:	f3 0f 59 05 a8 0c 00 	mulss  0xca8(%rip),%xmm0        # 2158 <_IO_stdin_used+0x158>
    14af:	00 
    14b0:	f3 0f 10 4d b8       	movss  -0x48(%rbp),%xmm1
    14b5:	0f 28 e0             	movaps %xmm0,%xmm4
    14b8:	e9 14 ff ff ff       	jmp    13d1 <main+0x271>
    14bd:	48 8d 35 75 0c 00 00 	lea    0xc75(%rip),%rsi        # 2139 <_IO_stdin_used+0x139>
    14c4:	bf 01 00 00 00       	mov    $0x1,%edi
    14c9:	31 c0                	xor    %eax,%eax
    14cb:	e8 50 fc ff ff       	call   1120 <__printf_chk@plt>
    14d0:	83 c8 ff             	or     $0xffffffff,%eax
    14d3:	48 89 dc             	mov    %rbx,%rsp
    14d6:	eb 8c                	jmp    1464 <main+0x304>
    14d8:	f3 44 0f 11 4d a8    	movss  %xmm9,-0x58(%rbp)
    14de:	f3 44 0f 11 55 ac    	movss  %xmm10,-0x54(%rbp)
    14e4:	f2 44 0f 11 45 b0    	movsd  %xmm8,-0x50(%rbp)
    14ea:	f2 0f 11 75 b8       	movsd  %xmm6,-0x48(%rbp)
    14ef:	f3 0f 11 65 a4       	movss  %xmm4,-0x5c(%rbp)
    14f4:	e8 47 fc ff ff       	call   1140 <sqrt@plt>
    14f9:	f3 0f 10 5d a4       	movss  -0x5c(%rbp),%xmm3
    14fe:	f2 0f 10 75 b8       	movsd  -0x48(%rbp),%xmm6
    1503:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1507:	f3 44 0f 10 4d a8    	movss  -0x58(%rbp),%xmm9
    150d:	f3 44 0f 10 55 ac    	movss  -0x54(%rbp),%xmm10
    1513:	f2 44 0f 10 45 b0    	movsd  -0x50(%rbp),%xmm8
    1519:	e9 81 fe ff ff       	jmp    139f <main+0x23f>
    151e:	e8 dd fb ff ff       	call   1100 <__stack_chk_fail@plt>
    1523:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    152a:	00 00 00 
    152d:	0f 1f 00             	nopl   (%rax)

0000000000001530 <_start>:
    1530:	f3 0f 1e fa          	endbr64 
    1534:	31 ed                	xor    %ebp,%ebp
    1536:	49 89 d1             	mov    %rdx,%r9
    1539:	5e                   	pop    %rsi
    153a:	48 89 e2             	mov    %rsp,%rdx
    153d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1541:	50                   	push   %rax
    1542:	54                   	push   %rsp
    1543:	45 31 c0             	xor    %r8d,%r8d
    1546:	31 c9                	xor    %ecx,%ecx
    1548:	48 8d 3d 11 fc ff ff 	lea    -0x3ef(%rip),%rdi        # 1160 <main>
    154f:	ff 15 83 2a 00 00    	call   *0x2a83(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1555:	f4                   	hlt    
    1556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    155d:	00 00 00 

0000000000001560 <deregister_tm_clones>:
    1560:	48 8d 3d a9 2a 00 00 	lea    0x2aa9(%rip),%rdi        # 4010 <__TMC_END__>
    1567:	48 8d 05 a2 2a 00 00 	lea    0x2aa2(%rip),%rax        # 4010 <__TMC_END__>
    156e:	48 39 f8             	cmp    %rdi,%rax
    1571:	74 15                	je     1588 <deregister_tm_clones+0x28>
    1573:	48 8b 05 66 2a 00 00 	mov    0x2a66(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    157a:	48 85 c0             	test   %rax,%rax
    157d:	74 09                	je     1588 <deregister_tm_clones+0x28>
    157f:	ff e0                	jmp    *%rax
    1581:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1588:	c3                   	ret    
    1589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001590 <register_tm_clones>:
    1590:	48 8d 3d 79 2a 00 00 	lea    0x2a79(%rip),%rdi        # 4010 <__TMC_END__>
    1597:	48 8d 35 72 2a 00 00 	lea    0x2a72(%rip),%rsi        # 4010 <__TMC_END__>
    159e:	48 29 fe             	sub    %rdi,%rsi
    15a1:	48 89 f0             	mov    %rsi,%rax
    15a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    15a8:	48 c1 f8 03          	sar    $0x3,%rax
    15ac:	48 01 c6             	add    %rax,%rsi
    15af:	48 d1 fe             	sar    %rsi
    15b2:	74 14                	je     15c8 <register_tm_clones+0x38>
    15b4:	48 8b 05 35 2a 00 00 	mov    0x2a35(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    15bb:	48 85 c0             	test   %rax,%rax
    15be:	74 08                	je     15c8 <register_tm_clones+0x38>
    15c0:	ff e0                	jmp    *%rax
    15c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15c8:	c3                   	ret    
    15c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015d0 <__do_global_dtors_aux>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	80 3d 35 2a 00 00 00 	cmpb   $0x0,0x2a35(%rip)        # 4010 <__TMC_END__>
    15db:	75 2b                	jne    1608 <__do_global_dtors_aux+0x38>
    15dd:	55                   	push   %rbp
    15de:	48 83 3d 12 2a 00 00 	cmpq   $0x0,0x2a12(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    15e5:	00 
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	74 0c                	je     15f7 <__do_global_dtors_aux+0x27>
    15eb:	48 8b 3d 16 2a 00 00 	mov    0x2a16(%rip),%rdi        # 4008 <__dso_handle>
    15f2:	e8 c9 fa ff ff       	call   10c0 <__cxa_finalize@plt>
    15f7:	e8 64 ff ff ff       	call   1560 <deregister_tm_clones>
    15fc:	c6 05 0d 2a 00 00 01 	movb   $0x1,0x2a0d(%rip)        # 4010 <__TMC_END__>
    1603:	5d                   	pop    %rbp
    1604:	c3                   	ret    
    1605:	0f 1f 00             	nopl   (%rax)
    1608:	c3                   	ret    
    1609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001610 <frame_dummy>:
    1610:	f3 0f 1e fa          	endbr64 
    1614:	e9 77 ff ff ff       	jmp    1590 <register_tm_clones>
    1619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001620 <test_Fopen.constprop.0.isra.0>:
    1620:	41 54                	push   %r12
    1622:	49 89 f9             	mov    %rdi,%r9
    1625:	49 89 fc             	mov    %rdi,%r12
    1628:	4c 8d 05 d9 09 00 00 	lea    0x9d9(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    162f:	55                   	push   %rbp
    1630:	48 8d 0d 6a 0a 00 00 	lea    0xa6a(%rip),%rcx        # 20a1 <_IO_stdin_used+0xa1>
    1637:	ba 00 04 00 00       	mov    $0x400,%edx
    163c:	53                   	push   %rbx
    163d:	48 89 f3             	mov    %rsi,%rbx
    1640:	be 01 00 00 00       	mov    $0x1,%esi
    1645:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    164c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1653:	00 00 
    1655:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    165c:	00 
    165d:	31 c0                	xor    %eax,%eax
    165f:	48 89 e5             	mov    %rsp,%rbp
    1662:	48 89 ef             	mov    %rbp,%rdi
    1665:	e8 e6 fa ff ff       	call   1150 <__sprintf_chk@plt>
    166a:	48 8d 35 36 0a 00 00 	lea    0xa36(%rip),%rsi        # 20a7 <_IO_stdin_used+0xa7>
    1671:	48 89 ef             	mov    %rbp,%rdi
    1674:	e8 b7 fa ff ff       	call   1130 <fopen@plt>
    1679:	48 89 03             	mov    %rax,(%rbx)
    167c:	48 85 c0             	test   %rax,%rax
    167f:	74 1f                	je     16a0 <test_Fopen.constprop.0.isra.0+0x80>
    1681:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1688:	00 
    1689:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1690:	00 00 
    1692:	75 22                	jne    16b6 <test_Fopen.constprop.0.isra.0+0x96>
    1694:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    169b:	5b                   	pop    %rbx
    169c:	5d                   	pop    %rbp
    169d:	41 5c                	pop    %r12
    169f:	c3                   	ret    
    16a0:	4c 89 e2             	mov    %r12,%rdx
    16a3:	48 8d 35 00 0a 00 00 	lea    0xa00(%rip),%rsi        # 20aa <_IO_stdin_used+0xaa>
    16aa:	bf 01 00 00 00       	mov    $0x1,%edi
    16af:	e8 6c fa ff ff       	call   1120 <__printf_chk@plt>
    16b4:	eb cb                	jmp    1681 <test_Fopen.constprop.0.isra.0+0x61>
    16b6:	e8 45 fa ff ff       	call   1100 <__stack_chk_fail@plt>
    16bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000016c0 <read_write_buffer.constprop.0>:
    16c0:	41 54                	push   %r12
    16c2:	55                   	push   %rbp
    16c3:	48 89 f5             	mov    %rsi,%rbp
    16c6:	48 83 ec 18          	sub    $0x18,%rsp
    16ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16d1:	00 00 
    16d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    16d8:	31 c0                	xor    %eax,%eax
    16da:	48 89 e6             	mov    %rsp,%rsi
    16dd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    16e4:	00 
    16e5:	e8 36 ff ff ff       	call   1620 <test_Fopen.constprop.0.isra.0>
    16ea:	4c 8b 24 24          	mov    (%rsp),%r12
    16ee:	ba ff 3f 00 00       	mov    $0x3fff,%edx
    16f3:	48 89 ef             	mov    %rbp,%rdi
    16f6:	be 08 00 00 00       	mov    $0x8,%esi
    16fb:	4c 89 e1             	mov    %r12,%rcx
    16fe:	e8 dd f9 ff ff       	call   10e0 <fread@plt>
    1703:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1708:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    170f:	00 00 
    1711:	75 0f                	jne    1722 <read_write_buffer.constprop.0+0x62>
    1713:	48 83 c4 18          	add    $0x18,%rsp
    1717:	4c 89 e7             	mov    %r12,%rdi
    171a:	5d                   	pop    %rbp
    171b:	41 5c                	pop    %r12
    171d:	e9 ce f9 ff ff       	jmp    10f0 <fclose@plt>
    1722:	e8 d9 f9 ff ff       	call   1100 <__stack_chk_fail@plt>
    1727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    172e:	00 00 

0000000000001730 <riscv_dsp_absdiff_f64>:
    1730:	f3 0f 1e fa          	endbr64 
    1734:	85 c9                	test   %ecx,%ecx
    1736:	74 6f                	je     17a7 <riscv_dsp_absdiff_f64+0x77>
    1738:	83 f9 01             	cmp    $0x1,%ecx
    173b:	74 56                	je     1793 <riscv_dsp_absdiff_f64+0x63>
    173d:	41 89 c8             	mov    %ecx,%r8d
    1740:	66 0f 28 0d 28 0a 00 	movapd 0xa28(%rip),%xmm1        # 2170 <_IO_stdin_used+0x170>
    1747:	00 
    1748:	31 c0                	xor    %eax,%eax
    174a:	41 d1 e8             	shr    %r8d
    174d:	49 c1 e0 04          	shl    $0x4,%r8
    1751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1758:	66 0f 10 04 07       	movupd (%rdi,%rax,1),%xmm0
    175d:	66 0f 10 14 06       	movupd (%rsi,%rax,1),%xmm2
    1762:	66 0f 5c c2          	subpd  %xmm2,%xmm0
    1766:	66 0f 54 c1          	andpd  %xmm1,%xmm0
    176a:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
    176e:	48 83 c0 10          	add    $0x10,%rax
    1772:	49 39 c0             	cmp    %rax,%r8
    1775:	75 e1                	jne    1758 <riscv_dsp_absdiff_f64+0x28>
    1777:	41 89 c8             	mov    %ecx,%r8d
    177a:	41 83 e0 fe          	and    $0xfffffffe,%r8d
    177e:	44 89 c0             	mov    %r8d,%eax
    1781:	48 c1 e0 03          	shl    $0x3,%rax
    1785:	48 01 c7             	add    %rax,%rdi
    1788:	48 01 c6             	add    %rax,%rsi
    178b:	48 01 c2             	add    %rax,%rdx
    178e:	44 39 c1             	cmp    %r8d,%ecx
    1791:	74 14                	je     17a7 <riscv_dsp_absdiff_f64+0x77>
    1793:	f2 0f 10 07          	movsd  (%rdi),%xmm0
    1797:	f2 0f 5c 06          	subsd  (%rsi),%xmm0
    179b:	66 0f 54 05 dd 09 00 	andpd  0x9dd(%rip),%xmm0        # 2180 <_IO_stdin_used+0x180>
    17a2:	00 
    17a3:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
    17a7:	c3                   	ret    

Disassembly of section .fini:

00000000000017a8 <_fini>:
    17a8:	f3 0f 1e fa          	endbr64 
    17ac:	48 83 ec 08          	sub    $0x8,%rsp
    17b0:	48 83 c4 08          	add    $0x8,%rsp
    17b4:	c3                   	ret    
