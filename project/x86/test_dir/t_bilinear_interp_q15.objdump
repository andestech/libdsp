
t_bilinear_interp_q15:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 4f 00 00 	mov    0x4fd9(%rip),%rax        # 5fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 4f 00 00    	push   0x4f72(%rip)        # 5f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 4f 00 00 	bnd jmp *0x4f73(%rip)        # 5fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 5d 4f 00 00 	bnd jmp *0x4f5d(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <fread@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 4e 00 00 	bnd jmp *0x4efd(%rip)        # 5fa8 <fread@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <fclose@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 4e 00 00 	bnd jmp *0x4ef5(%rip)        # 5fb0 <fclose@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 4e 00 00 	bnd jmp *0x4eed(%rip)        # 5fb8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__printf_chk@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 4e 00 00 	bnd jmp *0x4ee5(%rip)        # 5fc0 <__printf_chk@GLIBC_2.3.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fopen@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 4e 00 00 	bnd jmp *0x4edd(%rip)        # 5fc8 <fopen@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__sprintf_chk@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 4e 00 00 	bnd jmp *0x4ed5(%rip)        # 5fd0 <__sprintf_chk@GLIBC_2.3.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <main>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	55                   	push   %rbp
    1105:	48 89 e5             	mov    %rsp,%rbp
    1108:	41 57                	push   %r15
    110a:	41 56                	push   %r14
    110c:	41 55                	push   %r13
    110e:	41 54                	push   %r12
    1110:	53                   	push   %rbx
    1111:	48 81 ec 88 06 00 00 	sub    $0x688,%rsp
    1118:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    111f:	00 00 
    1121:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1125:	31 c0                	xor    %eax,%eax
    1127:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    112e:	ff 
    112f:	49 89 e4             	mov    %rsp,%r12
    1132:	48 39 c4             	cmp    %rax,%rsp
    1135:	74 15                	je     114c <main+0x4c>
    1137:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    113e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1145:	00 00 
    1147:	48 39 c4             	cmp    %rax,%rsp
    114a:	75 eb                	jne    1137 <main+0x37>
    114c:	49 89 e6             	mov    %rsp,%r14
    114f:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    1156:	ff 
    1157:	48 39 c4             	cmp    %rax,%rsp
    115a:	74 12                	je     116e <main+0x6e>
    115c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1163:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    116a:	00 00 
    116c:	eb e9                	jmp    1157 <main+0x57>
    116e:	49 89 e1             	mov    %rsp,%r9
    1171:	48 8d 84 24 00 c0 ff 	lea    -0x4000(%rsp),%rax
    1178:	ff 
    1179:	48 39 c4             	cmp    %rax,%rsp
    117c:	74 12                	je     1190 <main+0x90>
    117e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1185:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    118c:	00 00 
    118e:	eb e9                	jmp    1179 <main+0x79>
    1190:	4c 89 8d 58 f9 ff ff 	mov    %r9,-0x6a8(%rbp)
    1197:	48 8d 3d f3 0e 00 00 	lea    0xef3(%rip),%rdi        # 2091 <_IO_stdin_used+0x91>
    119e:	4c 8d bd 70 f9 ff ff 	lea    -0x690(%rbp),%r15
    11a5:	49 89 e5             	mov    %rsp,%r13
    11a8:	48 c7 85 70 f9 ff ff 	movq   $0x0,-0x690(%rbp)
    11af:	00 00 00 00 
    11b3:	4c 89 fe             	mov    %r15,%rsi
    11b6:	e8 15 04 00 00       	call   15d0 <test_Fopen.constprop.0.isra.0>
    11bb:	48 8b 9d 70 f9 ff ff 	mov    -0x690(%rbp),%rbx
    11c2:	ba ff 1f 00 00       	mov    $0x1fff,%edx
    11c7:	4c 89 f7             	mov    %r14,%rdi
    11ca:	be 04 00 00 00       	mov    $0x4,%esi
    11cf:	48 89 d9             	mov    %rbx,%rcx
    11d2:	e8 c9 fe ff ff       	call   10a0 <fread@plt>
    11d7:	48 89 df             	mov    %rbx,%rdi
    11da:	e8 d1 fe ff ff       	call   10b0 <fclose@plt>
    11df:	4c 89 fe             	mov    %r15,%rsi
    11e2:	48 8d 3d c1 0e 00 00 	lea    0xec1(%rip),%rdi        # 20aa <_IO_stdin_used+0xaa>
    11e9:	48 c7 85 70 f9 ff ff 	movq   $0x0,-0x690(%rbp)
    11f0:	00 00 00 00 
    11f4:	e8 d7 03 00 00       	call   15d0 <test_Fopen.constprop.0.isra.0>
    11f9:	ba ff 1f 00 00       	mov    $0x1fff,%edx
    11fe:	be 04 00 00 00       	mov    $0x4,%esi
    1203:	48 8b 9d 70 f9 ff ff 	mov    -0x690(%rbp),%rbx
    120a:	48 8b bd 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdi
    1211:	48 89 d9             	mov    %rbx,%rcx
    1214:	e8 87 fe ff ff       	call   10a0 <fread@plt>
    1219:	48 89 df             	mov    %rbx,%rdi
    121c:	e8 8f fe ff ff       	call   10b0 <fclose@plt>
    1221:	48 8d b5 80 f9 ff ff 	lea    -0x680(%rbp),%rsi
    1228:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
    122c:	0f 28 1d dd 38 00 00 	movaps 0x38dd(%rip),%xmm3        # 4b10 <riscv_dsp_linear_interp_tbl+0x1d70>
    1233:	4c 8b 8d 58 f9 ff ff 	mov    -0x6a8(%rbp),%r9
    123a:	48 89 f2             	mov    %rsi,%rdx
    123d:	48 8d 05 dc 0e 00 00 	lea    0xedc(%rip),%rax        # 2120 <riscv_dsp_bilinear_interp_tbl>
    1244:	0f 1f 40 00          	nopl   0x0(%rax)
    1248:	0f 28 00             	movaps (%rax),%xmm0
    124b:	0f 28 48 10          	movaps 0x10(%rax),%xmm1
    124f:	48 83 c2 10          	add    $0x10,%rdx
    1253:	48 83 c0 20          	add    $0x20,%rax
    1257:	0f 59 c3             	mulps  %xmm3,%xmm0
    125a:	0f 59 cb             	mulps  %xmm3,%xmm1
    125d:	f3 0f 5b c0          	cvttps2dq %xmm0,%xmm0
    1261:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    1265:	f3 0f 5b c9          	cvttps2dq %xmm1,%xmm1
    1269:	66 0f 61 c1          	punpcklwd %xmm1,%xmm0
    126d:	66 0f 69 d1          	punpckhwd %xmm1,%xmm2
    1271:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    1275:	66 0f 61 c2          	punpcklwd %xmm2,%xmm0
    1279:	66 0f 69 ca          	punpckhwd %xmm2,%xmm1
    127d:	66 0f 61 c1          	punpcklwd %xmm1,%xmm0
    1281:	0f 29 42 f0          	movaps %xmm0,-0x10(%rdx)
    1285:	48 39 ca             	cmp    %rcx,%rdx
    1288:	75 be                	jne    1248 <main+0x148>
    128a:	48 8b 05 8f 38 00 00 	mov    0x388f(%rip),%rax        # 4b20 <riscv_dsp_linear_interp_tbl+0x1d80>
    1291:	4c 89 e9             	mov    %r13,%rcx
    1294:	4c 89 ca             	mov    %r9,%rdx
    1297:	4c 89 ff             	mov    %r15,%rdi
    129a:	48 89 b5 78 f9 ff ff 	mov    %rsi,-0x688(%rbp)
    12a1:	41 b8 ff 1f 00 00    	mov    $0x1fff,%r8d
    12a7:	4c 89 f6             	mov    %r14,%rsi
    12aa:	48 89 85 70 f9 ff ff 	mov    %rax,-0x690(%rbp)
    12b1:	e8 ba 03 00 00       	call   1670 <riscv_dsp_bilinear_interp_q15>
    12b6:	48 8d 84 24 00 c0 ff 	lea    -0x4000(%rsp),%rax
    12bd:	ff 
    12be:	48 39 c4             	cmp    %rax,%rsp
    12c1:	74 15                	je     12d8 <main+0x1d8>
    12c3:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    12ca:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    12d1:	00 00 
    12d3:	48 39 c4             	cmp    %rax,%rsp
    12d6:	75 eb                	jne    12c3 <main+0x1c3>
    12d8:	48 8d 3d 71 0d 00 00 	lea    0xd71(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    12df:	48 8d b5 68 f9 ff ff 	lea    -0x698(%rbp),%rsi
    12e6:	49 89 e6             	mov    %rsp,%r14
    12e9:	48 c7 85 68 f9 ff ff 	movq   $0x0,-0x698(%rbp)
    12f0:	00 00 00 00 
    12f4:	e8 d7 02 00 00       	call   15d0 <test_Fopen.constprop.0.isra.0>
    12f9:	4c 8b bd 68 f9 ff ff 	mov    -0x698(%rbp),%r15
    1300:	ba ff 1f 00 00       	mov    $0x1fff,%edx
    1305:	4c 89 f7             	mov    %r14,%rdi
    1308:	be 02 00 00 00       	mov    $0x2,%esi
    130d:	4c 89 f9             	mov    %r15,%rcx
    1310:	e8 8b fd ff ff       	call   10a0 <fread@plt>
    1315:	4c 89 ff             	mov    %r15,%rdi
    1318:	e8 93 fd ff ff       	call   10b0 <fclose@plt>
    131d:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1321:	31 c0                	xor    %eax,%eax
    1323:	66 0f 6f da          	movdqa %xmm2,%xmm3
    1327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    132e:	00 00 
    1330:	f3 41 0f 6f 44 05 00 	movdqu 0x0(%r13,%rax,1),%xmm0
    1337:	f3 41 0f 6f 24 06    	movdqu (%r14,%rax,1),%xmm4
    133d:	66 0f 6f cb          	movdqa %xmm3,%xmm1
    1341:	48 83 c0 10          	add    $0x10,%rax
    1345:	66 0f f9 c4          	psubw  %xmm4,%xmm0
    1349:	66 0f f9 c8          	psubw  %xmm0,%xmm1
    134d:	66 0f ee c1          	pmaxsw %xmm1,%xmm0
    1351:	66 0f ee d0          	pmaxsw %xmm0,%xmm2
    1355:	48 3d f0 3f 00 00    	cmp    $0x3ff0,%rax
    135b:	75 d3                	jne    1330 <main+0x230>
    135d:	41 0f b7 85 f0 3f 00 	movzwl 0x3ff0(%r13),%eax
    1364:	00 
    1365:	66 41 2b 86 f0 3f 00 	sub    0x3ff0(%r14),%ax
    136c:	00 
    136d:	66 0f 6f c2          	movdqa %xmm2,%xmm0
    1371:	41 89 c1             	mov    %eax,%r9d
    1374:	66 0f 73 d8 08       	psrldq $0x8,%xmm0
    1379:	66 41 f7 d9          	neg    %r9w
    137d:	66 0f ee d0          	pmaxsw %xmm0,%xmm2
    1381:	44 0f 48 c8          	cmovs  %eax,%r9d
    1385:	41 0f b7 85 f2 3f 00 	movzwl 0x3ff2(%r13),%eax
    138c:	00 
    138d:	66 0f 6f c2          	movdqa %xmm2,%xmm0
    1391:	66 41 2b 86 f2 3f 00 	sub    0x3ff2(%r14),%ax
    1398:	00 
    1399:	66 0f 73 d8 04       	psrldq $0x4,%xmm0
    139e:	89 c3                	mov    %eax,%ebx
    13a0:	66 f7 db             	neg    %bx
    13a3:	66 0f ee d0          	pmaxsw %xmm0,%xmm2
    13a7:	0f 48 d8             	cmovs  %eax,%ebx
    13aa:	41 0f b7 85 f4 3f 00 	movzwl 0x3ff4(%r13),%eax
    13b1:	00 
    13b2:	66 0f 6f c2          	movdqa %xmm2,%xmm0
    13b6:	66 41 2b 86 f4 3f 00 	sub    0x3ff4(%r14),%ax
    13bd:	00 
    13be:	66 0f 73 d8 02       	psrldq $0x2,%xmm0
    13c3:	41 89 c0             	mov    %eax,%r8d
    13c6:	66 41 f7 d8          	neg    %r8w
    13ca:	66 0f ee d0          	pmaxsw %xmm0,%xmm2
    13ce:	44 0f 48 c0          	cmovs  %eax,%r8d
    13d2:	41 0f b7 85 f6 3f 00 	movzwl 0x3ff6(%r13),%eax
    13d9:	00 
    13da:	66 0f c5 d2 00       	pextrw $0x0,%xmm2,%edx
    13df:	66 41 2b 86 f6 3f 00 	sub    0x3ff6(%r14),%ax
    13e6:	00 
    13e7:	89 c7                	mov    %eax,%edi
    13e9:	66 f7 df             	neg    %di
    13ec:	0f 48 f8             	cmovs  %eax,%edi
    13ef:	41 0f b7 85 f8 3f 00 	movzwl 0x3ff8(%r13),%eax
    13f6:	00 
    13f7:	66 41 2b 86 f8 3f 00 	sub    0x3ff8(%r14),%ax
    13fe:	00 
    13ff:	89 c6                	mov    %eax,%esi
    1401:	66 f7 de             	neg    %si
    1404:	0f 48 f0             	cmovs  %eax,%esi
    1407:	41 0f b7 85 fa 3f 00 	movzwl 0x3ffa(%r13),%eax
    140e:	00 
    140f:	66 41 2b 86 fa 3f 00 	sub    0x3ffa(%r14),%ax
    1416:	00 
    1417:	89 c1                	mov    %eax,%ecx
    1419:	66 f7 d9             	neg    %cx
    141c:	0f 48 c8             	cmovs  %eax,%ecx
    141f:	41 0f b7 85 fc 3f 00 	movzwl 0x3ffc(%r13),%eax
    1426:	00 
    1427:	66 41 2b 86 fc 3f 00 	sub    0x3ffc(%r14),%ax
    142e:	00 
    142f:	41 89 c2             	mov    %eax,%r10d
    1432:	66 41 f7 da          	neg    %r10w
    1436:	41 0f 49 c2          	cmovns %r10d,%eax
    143a:	66 44 39 cb          	cmp    %r9w,%bx
    143e:	41 0f 4c d9          	cmovl  %r9d,%ebx
    1442:	66 44 39 c3          	cmp    %r8w,%bx
    1446:	41 0f 4c d8          	cmovl  %r8d,%ebx
    144a:	66 39 fb             	cmp    %di,%bx
    144d:	0f 4c df             	cmovl  %edi,%ebx
    1450:	bf 01 00 00 00       	mov    $0x1,%edi
    1455:	66 39 f3             	cmp    %si,%bx
    1458:	0f 4c de             	cmovl  %esi,%ebx
    145b:	48 8d 35 61 0c 00 00 	lea    0xc61(%rip),%rsi        # 20c3 <_IO_stdin_used+0xc3>
    1462:	66 39 cb             	cmp    %cx,%bx
    1465:	0f 4c d9             	cmovl  %ecx,%ebx
    1468:	66 39 c3             	cmp    %ax,%bx
    146b:	0f 4c d8             	cmovl  %eax,%ebx
    146e:	66 39 d3             	cmp    %dx,%bx
    1471:	0f 4c da             	cmovl  %edx,%ebx
    1474:	31 c0                	xor    %eax,%eax
    1476:	0f bf d3             	movswl %bx,%edx
    1479:	e8 52 fc ff ff       	call   10d0 <__printf_chk@plt>
    147e:	48 8d 15 51 0c 00 00 	lea    0xc51(%rip),%rdx        # 20d6 <_IO_stdin_used+0xd6>
    1485:	66 85 db             	test   %bx,%bx
    1488:	75 36                	jne    14c0 <main+0x3c0>
    148a:	48 8d 35 6e 0c 00 00 	lea    0xc6e(%rip),%rsi        # 20ff <_IO_stdin_used+0xff>
    1491:	bf 01 00 00 00       	mov    $0x1,%edi
    1496:	31 c0                	xor    %eax,%eax
    1498:	e8 33 fc ff ff       	call   10d0 <__printf_chk@plt>
    149d:	31 c0                	xor    %eax,%eax
    149f:	4c 89 e4             	mov    %r12,%rsp
    14a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    14a6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    14ad:	00 00 
    14af:	75 2a                	jne    14db <main+0x3db>
    14b1:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    14b5:	5b                   	pop    %rbx
    14b6:	41 5c                	pop    %r12
    14b8:	41 5d                	pop    %r13
    14ba:	41 5e                	pop    %r14
    14bc:	41 5f                	pop    %r15
    14be:	5d                   	pop    %rbp
    14bf:	c3                   	ret    
    14c0:	48 8d 35 2d 0c 00 00 	lea    0xc2d(%rip),%rsi        # 20f4 <_IO_stdin_used+0xf4>
    14c7:	bf 01 00 00 00       	mov    $0x1,%edi
    14cc:	31 c0                	xor    %eax,%eax
    14ce:	e8 fd fb ff ff       	call   10d0 <__printf_chk@plt>
    14d3:	83 c8 ff             	or     $0xffffffff,%eax
    14d6:	4c 89 e4             	mov    %r12,%rsp
    14d9:	eb c7                	jmp    14a2 <main+0x3a2>
    14db:	e8 e0 fb ff ff       	call   10c0 <__stack_chk_fail@plt>

00000000000014e0 <_start>:
    14e0:	f3 0f 1e fa          	endbr64 
    14e4:	31 ed                	xor    %ebp,%ebp
    14e6:	49 89 d1             	mov    %rdx,%r9
    14e9:	5e                   	pop    %rsi
    14ea:	48 89 e2             	mov    %rsp,%rdx
    14ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    14f1:	50                   	push   %rax
    14f2:	54                   	push   %rsp
    14f3:	45 31 c0             	xor    %r8d,%r8d
    14f6:	31 c9                	xor    %ecx,%ecx
    14f8:	48 8d 3d 01 fc ff ff 	lea    -0x3ff(%rip),%rdi        # 1100 <main>
    14ff:	ff 15 d3 4a 00 00    	call   *0x4ad3(%rip)        # 5fd8 <__libc_start_main@GLIBC_2.34>
    1505:	f4                   	hlt    
    1506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    150d:	00 00 00 

0000000000001510 <deregister_tm_clones>:
    1510:	48 8d 3d f9 4a 00 00 	lea    0x4af9(%rip),%rdi        # 6010 <__TMC_END__>
    1517:	48 8d 05 f2 4a 00 00 	lea    0x4af2(%rip),%rax        # 6010 <__TMC_END__>
    151e:	48 39 f8             	cmp    %rdi,%rax
    1521:	74 15                	je     1538 <deregister_tm_clones+0x28>
    1523:	48 8b 05 b6 4a 00 00 	mov    0x4ab6(%rip),%rax        # 5fe0 <_ITM_deregisterTMCloneTable@Base>
    152a:	48 85 c0             	test   %rax,%rax
    152d:	74 09                	je     1538 <deregister_tm_clones+0x28>
    152f:	ff e0                	jmp    *%rax
    1531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1538:	c3                   	ret    
    1539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001540 <register_tm_clones>:
    1540:	48 8d 3d c9 4a 00 00 	lea    0x4ac9(%rip),%rdi        # 6010 <__TMC_END__>
    1547:	48 8d 35 c2 4a 00 00 	lea    0x4ac2(%rip),%rsi        # 6010 <__TMC_END__>
    154e:	48 29 fe             	sub    %rdi,%rsi
    1551:	48 89 f0             	mov    %rsi,%rax
    1554:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1558:	48 c1 f8 03          	sar    $0x3,%rax
    155c:	48 01 c6             	add    %rax,%rsi
    155f:	48 d1 fe             	sar    %rsi
    1562:	74 14                	je     1578 <register_tm_clones+0x38>
    1564:	48 8b 05 85 4a 00 00 	mov    0x4a85(%rip),%rax        # 5ff0 <_ITM_registerTMCloneTable@Base>
    156b:	48 85 c0             	test   %rax,%rax
    156e:	74 08                	je     1578 <register_tm_clones+0x38>
    1570:	ff e0                	jmp    *%rax
    1572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1578:	c3                   	ret    
    1579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001580 <__do_global_dtors_aux>:
    1580:	f3 0f 1e fa          	endbr64 
    1584:	80 3d 85 4a 00 00 00 	cmpb   $0x0,0x4a85(%rip)        # 6010 <__TMC_END__>
    158b:	75 2b                	jne    15b8 <__do_global_dtors_aux+0x38>
    158d:	55                   	push   %rbp
    158e:	48 83 3d 62 4a 00 00 	cmpq   $0x0,0x4a62(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1595:	00 
    1596:	48 89 e5             	mov    %rsp,%rbp
    1599:	74 0c                	je     15a7 <__do_global_dtors_aux+0x27>
    159b:	48 8b 3d 66 4a 00 00 	mov    0x4a66(%rip),%rdi        # 6008 <__dso_handle>
    15a2:	e8 e9 fa ff ff       	call   1090 <__cxa_finalize@plt>
    15a7:	e8 64 ff ff ff       	call   1510 <deregister_tm_clones>
    15ac:	c6 05 5d 4a 00 00 01 	movb   $0x1,0x4a5d(%rip)        # 6010 <__TMC_END__>
    15b3:	5d                   	pop    %rbp
    15b4:	c3                   	ret    
    15b5:	0f 1f 00             	nopl   (%rax)
    15b8:	c3                   	ret    
    15b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015c0 <frame_dummy>:
    15c0:	f3 0f 1e fa          	endbr64 
    15c4:	e9 77 ff ff ff       	jmp    1540 <register_tm_clones>
    15c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015d0 <test_Fopen.constprop.0.isra.0>:
    15d0:	41 54                	push   %r12
    15d2:	49 89 f9             	mov    %rdi,%r9
    15d5:	49 89 fc             	mov    %rdi,%r12
    15d8:	4c 8d 05 29 0a 00 00 	lea    0xa29(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    15df:	55                   	push   %rbp
    15e0:	48 8d 0d 88 0a 00 00 	lea    0xa88(%rip),%rcx        # 206f <_IO_stdin_used+0x6f>
    15e7:	ba 00 04 00 00       	mov    $0x400,%edx
    15ec:	53                   	push   %rbx
    15ed:	48 89 f3             	mov    %rsi,%rbx
    15f0:	be 01 00 00 00       	mov    $0x1,%esi
    15f5:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    15fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1603:	00 00 
    1605:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    160c:	00 
    160d:	31 c0                	xor    %eax,%eax
    160f:	48 89 e5             	mov    %rsp,%rbp
    1612:	48 89 ef             	mov    %rbp,%rdi
    1615:	e8 d6 fa ff ff       	call   10f0 <__sprintf_chk@plt>
    161a:	48 8d 35 54 0a 00 00 	lea    0xa54(%rip),%rsi        # 2075 <_IO_stdin_used+0x75>
    1621:	48 89 ef             	mov    %rbp,%rdi
    1624:	e8 b7 fa ff ff       	call   10e0 <fopen@plt>
    1629:	48 89 03             	mov    %rax,(%rbx)
    162c:	48 85 c0             	test   %rax,%rax
    162f:	74 1f                	je     1650 <test_Fopen.constprop.0.isra.0+0x80>
    1631:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1638:	00 
    1639:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1640:	00 00 
    1642:	75 22                	jne    1666 <test_Fopen.constprop.0.isra.0+0x96>
    1644:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    164b:	5b                   	pop    %rbx
    164c:	5d                   	pop    %rbp
    164d:	41 5c                	pop    %r12
    164f:	c3                   	ret    
    1650:	4c 89 e2             	mov    %r12,%rdx
    1653:	48 8d 35 1e 0a 00 00 	lea    0xa1e(%rip),%rsi        # 2078 <_IO_stdin_used+0x78>
    165a:	bf 01 00 00 00       	mov    $0x1,%edi
    165f:	e8 6c fa ff ff       	call   10d0 <__printf_chk@plt>
    1664:	eb cb                	jmp    1631 <test_Fopen.constprop.0.isra.0+0x61>
    1666:	e8 55 fa ff ff       	call   10c0 <__stack_chk_fail@plt>
    166b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001670 <riscv_dsp_bilinear_interp_q15>:
    1670:	f3 0f 1e fa          	endbr64 
    1674:	41 57                	push   %r15
    1676:	49 89 d2             	mov    %rdx,%r10
    1679:	49 89 c9             	mov    %rcx,%r9
    167c:	41 56                	push   %r14
    167e:	41 55                	push   %r13
    1680:	41 54                	push   %r12
    1682:	55                   	push   %rbp
    1683:	53                   	push   %rbx
    1684:	8b 17                	mov    (%rdi),%edx
    1686:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    168a:	44 8b 7f 04          	mov    0x4(%rdi),%r15d
    168e:	8d 4a ff             	lea    -0x1(%rdx),%ecx
    1691:	89 4c 24 fc          	mov    %ecx,-0x4(%rsp)
    1695:	45 85 c0             	test   %r8d,%r8d
    1698:	0f 84 f4 00 00 00    	je     1792 <riscv_dsp_bilinear_interp_q15+0x122>
    169e:	49 89 f3             	mov    %rsi,%r11
    16a1:	44 89 c7             	mov    %r8d,%edi
    16a4:	41 8d 5f ff          	lea    -0x1(%r15),%ebx
    16a8:	31 c0                	xor    %eax,%eax
    16aa:	eb 19                	jmp    16c5 <riscv_dsp_bilinear_interp_q15+0x55>
    16ac:	0f 1f 40 00          	nopl   0x0(%rax)
    16b0:	45 31 c0             	xor    %r8d,%r8d
    16b3:	66 45 89 04 41       	mov    %r8w,(%r9,%rax,2)
    16b8:	48 83 c0 01          	add    $0x1,%rax
    16bc:	48 39 f8             	cmp    %rdi,%rax
    16bf:	0f 84 cd 00 00 00    	je     1792 <riscv_dsp_bilinear_interp_q15+0x122>
    16c5:	41 8b 14 83          	mov    (%r11,%rax,4),%edx
    16c9:	45 31 c0             	xor    %r8d,%r8d
    16cc:	41 8b 0c 82          	mov    (%r10,%rax,4),%ecx
    16d0:	41 89 d4             	mov    %edx,%r12d
    16d3:	41 c1 fc 14          	sar    $0x14,%r12d
    16d7:	78 da                	js     16b3 <riscv_dsp_bilinear_interp_q15+0x43>
    16d9:	89 ce                	mov    %ecx,%esi
    16db:	c1 fe 14             	sar    $0x14,%esi
    16de:	44 39 e3             	cmp    %r12d,%ebx
    16e1:	7e cd                	jle    16b0 <riscv_dsp_bilinear_interp_q15+0x40>
    16e3:	85 f6                	test   %esi,%esi
    16e5:	78 c9                	js     16b0 <riscv_dsp_bilinear_interp_q15+0x40>
    16e7:	39 74 24 fc          	cmp    %esi,-0x4(%rsp)
    16eb:	7e c6                	jle    16b3 <riscv_dsp_bilinear_interp_q15+0x43>
    16ed:	41 0f af f7          	imul   %r15d,%esi
    16f1:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
    16f7:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
    16fd:	41 bd ff ff 0f 00    	mov    $0xfffff,%r13d
    1703:	41 29 cd             	sub    %ecx,%r13d
    1706:	48 63 c9             	movslq %ecx,%rcx
    1709:	4d 63 ed             	movslq %r13d,%r13
    170c:	46 8d 34 26          	lea    (%rsi,%r12,1),%r14d
    1710:	44 01 fe             	add    %r15d,%esi
    1713:	4d 63 f6             	movslq %r14d,%r14
    1716:	44 01 e6             	add    %r12d,%esi
    1719:	41 bc ff ff 0f 00    	mov    $0xfffff,%r12d
    171f:	4e 0f bf 44 75 00    	movswq 0x0(%rbp,%r14,2),%r8
    1725:	41 29 d4             	sub    %edx,%r12d
    1728:	48 63 f6             	movslq %esi,%rsi
    172b:	48 63 d2             	movslq %edx,%rdx
    172e:	4d 63 e4             	movslq %r12d,%r12
    1731:	4e 0f bf 74 75 02    	movswq 0x2(%rbp,%r14,2),%r14
    1737:	4d 0f af c4          	imul   %r12,%r8
    173b:	4d 0f af f5          	imul   %r13,%r14
    173f:	49 c1 f8 04          	sar    $0x4,%r8
    1743:	4d 0f af c5          	imul   %r13,%r8
    1747:	4c 0f bf 6c 75 00    	movswq 0x0(%rbp,%rsi,2),%r13
    174d:	49 c1 fe 04          	sar    $0x4,%r14
    1751:	4c 0f af f2          	imul   %rdx,%r14
    1755:	4d 0f af e5          	imul   %r13,%r12
    1759:	4d 01 f0             	add    %r14,%r8
    175c:	49 c1 fc 04          	sar    $0x4,%r12
    1760:	4c 0f af e1          	imul   %rcx,%r12
    1764:	4d 01 c4             	add    %r8,%r12
    1767:	4c 0f bf 44 75 02    	movswq 0x2(%rbp,%rsi,2),%r8
    176d:	4c 0f af c2          	imul   %rdx,%r8
    1771:	49 c1 f8 04          	sar    $0x4,%r8
    1775:	4c 0f af c1          	imul   %rcx,%r8
    1779:	4d 01 e0             	add    %r12,%r8
    177c:	49 c1 f8 24          	sar    $0x24,%r8
    1780:	66 45 89 04 41       	mov    %r8w,(%r9,%rax,2)
    1785:	48 83 c0 01          	add    $0x1,%rax
    1789:	48 39 f8             	cmp    %rdi,%rax
    178c:	0f 85 33 ff ff ff    	jne    16c5 <riscv_dsp_bilinear_interp_q15+0x55>
    1792:	5b                   	pop    %rbx
    1793:	31 c0                	xor    %eax,%eax
    1795:	5d                   	pop    %rbp
    1796:	41 5c                	pop    %r12
    1798:	41 5d                	pop    %r13
    179a:	41 5e                	pop    %r14
    179c:	41 5f                	pop    %r15
    179e:	c3                   	ret    

Disassembly of section .fini:

00000000000017a0 <_fini>:
    17a0:	f3 0f 1e fa          	endbr64 
    17a4:	48 83 ec 08          	sub    $0x8,%rsp
    17a8:	48 83 c4 08          	add    $0x8,%rsp
    17ac:	c3                   	ret    
