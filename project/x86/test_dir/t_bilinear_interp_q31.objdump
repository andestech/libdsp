
t_bilinear_interp_q31:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 4f 00 00 	mov    0x4fd9(%rip),%rax        # 5fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 4f 00 00    	push   0x4f72(%rip)        # 5f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 4f 00 00 	bnd jmp *0x4f73(%rip)        # 5fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 5d 4f 00 00 	bnd jmp *0x4f5d(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <fread@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 4e 00 00 	bnd jmp *0x4efd(%rip)        # 5fa8 <fread@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <fclose@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 4e 00 00 	bnd jmp *0x4ef5(%rip)        # 5fb0 <fclose@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 4e 00 00 	bnd jmp *0x4eed(%rip)        # 5fb8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__printf_chk@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 4e 00 00 	bnd jmp *0x4ee5(%rip)        # 5fc0 <__printf_chk@GLIBC_2.3.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fopen@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 4e 00 00 	bnd jmp *0x4edd(%rip)        # 5fc8 <fopen@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__sprintf_chk@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 4e 00 00 	bnd jmp *0x4ed5(%rip)        # 5fd0 <__sprintf_chk@GLIBC_2.3.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <main>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	55                   	push   %rbp
    1105:	48 89 e5             	mov    %rsp,%rbp
    1108:	41 57                	push   %r15
    110a:	41 56                	push   %r14
    110c:	41 55                	push   %r13
    110e:	41 54                	push   %r12
    1110:	53                   	push   %rbx
    1111:	48 81 ec a8 0c 00 00 	sub    $0xca8,%rsp
    1118:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    111f:	00 00 
    1121:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1125:	31 c0                	xor    %eax,%eax
    1127:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    112e:	ff 
    112f:	48 89 e3             	mov    %rsp,%rbx
    1132:	48 39 c4             	cmp    %rax,%rsp
    1135:	74 15                	je     114c <main+0x4c>
    1137:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    113e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1145:	00 00 
    1147:	48 39 c4             	cmp    %rax,%rsp
    114a:	75 eb                	jne    1137 <main+0x37>
    114c:	49 89 e4             	mov    %rsp,%r12
    114f:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    1156:	ff 
    1157:	48 39 c4             	cmp    %rax,%rsp
    115a:	74 12                	je     116e <main+0x6e>
    115c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1163:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    116a:	00 00 
    116c:	eb e9                	jmp    1157 <main+0x57>
    116e:	49 89 e7             	mov    %rsp,%r15
    1171:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    1178:	ff 
    1179:	48 39 c4             	cmp    %rax,%rsp
    117c:	74 12                	je     1190 <main+0x90>
    117e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1185:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    118c:	00 00 
    118e:	eb e9                	jmp    1179 <main+0x79>
    1190:	48 8d 3d fa 0e 00 00 	lea    0xefa(%rip),%rdi        # 2091 <_IO_stdin_used+0x91>
    1197:	4c 89 e6             	mov    %r12,%rsi
    119a:	4c 8d 74 24 03       	lea    0x3(%rsp),%r14
    119f:	e8 bc 03 00 00       	call   1560 <read_write_buffer.constprop.0>
    11a4:	4c 89 fe             	mov    %r15,%rsi
    11a7:	48 8d 3d fc 0e 00 00 	lea    0xefc(%rip),%rdi        # 20aa <_IO_stdin_used+0xaa>
    11ae:	4d 89 f5             	mov    %r14,%r13
    11b1:	e8 aa 03 00 00       	call   1560 <read_write_buffer.constprop.0>
    11b6:	49 c1 ed 02          	shr    $0x2,%r13
    11ba:	49 83 e6 fc          	and    $0xfffffffffffffffc,%r14
    11be:	31 c0                	xor    %eax,%eax
    11c0:	0f 28 0d 49 39 00 00 	movaps 0x3949(%rip),%xmm1        # 4b10 <riscv_dsp_linear_interp_tbl+0x1d70>
    11c7:	48 8d 95 40 f3 ff ff 	lea    -0xcc0(%rbp),%rdx
    11ce:	48 8d 0d 4b 0f 00 00 	lea    0xf4b(%rip),%rcx        # 2120 <riscv_dsp_bilinear_interp_tbl>
    11d5:	0f 1f 00             	nopl   (%rax)
    11d8:	0f 28 04 01          	movaps (%rcx,%rax,1),%xmm0
    11dc:	0f 59 c1             	mulps  %xmm1,%xmm0
    11df:	f3 0f 5b c0          	cvttps2dq %xmm0,%xmm0
    11e3:	0f 29 04 02          	movaps %xmm0,(%rdx,%rax,1)
    11e7:	48 83 c0 10          	add    $0x10,%rax
    11eb:	48 3d 80 0c 00 00    	cmp    $0xc80,%rax
    11f1:	75 e5                	jne    11d8 <main+0xd8>
    11f3:	48 8b 05 26 39 00 00 	mov    0x3926(%rip),%rax        # 4b20 <riscv_dsp_linear_interp_tbl+0x1d80>
    11fa:	48 89 95 38 f3 ff ff 	mov    %rdx,-0xcc8(%rbp)
    1201:	4c 89 f1             	mov    %r14,%rcx
    1204:	4c 89 fa             	mov    %r15,%rdx
    1207:	48 8d bd 30 f3 ff ff 	lea    -0xcd0(%rbp),%rdi
    120e:	41 b8 ff 1f 00 00    	mov    $0x1fff,%r8d
    1214:	4c 89 e6             	mov    %r12,%rsi
    1217:	48 89 85 30 f3 ff ff 	mov    %rax,-0xcd0(%rbp)
    121e:	e8 ad 03 00 00       	call   15d0 <riscv_dsp_bilinear_interp_q31>
    1223:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    122a:	ff 
    122b:	48 39 c4             	cmp    %rax,%rsp
    122e:	74 15                	je     1245 <main+0x145>
    1230:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1237:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    123e:	00 00 
    1240:	48 39 c4             	cmp    %rax,%rsp
    1243:	75 eb                	jne    1230 <main+0x130>
    1245:	48 8d 3d 04 0e 00 00 	lea    0xe04(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    124c:	4c 8d 64 24 03       	lea    0x3(%rsp),%r12
    1251:	4d 89 e7             	mov    %r12,%r15
    1254:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
    1258:	4c 89 e6             	mov    %r12,%rsi
    125b:	49 c1 ef 02          	shr    $0x2,%r15
    125f:	e8 fc 02 00 00       	call   1560 <read_write_buffer.constprop.0>
    1264:	31 c0                	xor    %eax,%eax
    1266:	66 0f ef d2          	pxor   %xmm2,%xmm2
    126a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1270:	f3 41 0f 6f 04 04    	movdqu (%r12,%rax,1),%xmm0
    1276:	f3 41 0f 6f 1c 06    	movdqu (%r14,%rax,1),%xmm3
    127c:	48 83 c0 10          	add    $0x10,%rax
    1280:	66 0f fa c3          	psubd  %xmm3,%xmm0
    1284:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    1288:	66 0f 72 e1 1f       	psrad  $0x1f,%xmm1
    128d:	66 0f ef c1          	pxor   %xmm1,%xmm0
    1291:	66 0f fa c1          	psubd  %xmm1,%xmm0
    1295:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    1299:	66 0f 66 ca          	pcmpgtd %xmm2,%xmm1
    129d:	66 0f db c1          	pand   %xmm1,%xmm0
    12a1:	66 0f df ca          	pandn  %xmm2,%xmm1
    12a5:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    12a9:	66 0f eb d0          	por    %xmm0,%xmm2
    12ad:	48 3d f0 7f 00 00    	cmp    $0x7ff0,%rax
    12b3:	75 bb                	jne    1270 <main+0x170>
    12b5:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    12b9:	42 8b 34 bd f4 7f 00 	mov    0x7ff4(,%r15,4),%esi
    12c0:	00 
    12c1:	42 2b 34 ad f4 7f 00 	sub    0x7ff4(,%r13,4),%esi
    12c8:	00 
    12c9:	bf 01 00 00 00       	mov    $0x1,%edi
    12ce:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
    12d3:	41 89 f4             	mov    %esi,%r12d
    12d6:	42 8b 0c bd f0 7f 00 	mov    0x7ff0(,%r15,4),%ecx
    12dd:	00 
    12de:	42 8b 14 bd f8 7f 00 	mov    0x7ff8(,%r15,4),%edx
    12e5:	00 
    12e6:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    12ea:	42 2b 0c ad f0 7f 00 	sub    0x7ff0(,%r13,4),%ecx
    12f1:	00 
    12f2:	42 2b 14 ad f8 7f 00 	sub    0x7ff8(,%r13,4),%edx
    12f9:	00 
    12fa:	41 f7 dc             	neg    %r12d
    12fd:	66 0f 66 c2          	pcmpgtd %xmm2,%xmm0
    1301:	44 0f 48 e6          	cmovs  %esi,%r12d
    1305:	89 ce                	mov    %ecx,%esi
    1307:	f7 de                	neg    %esi
    1309:	0f 49 ce             	cmovns %esi,%ecx
    130c:	48 8d 35 b0 0d 00 00 	lea    0xdb0(%rip),%rsi        # 20c3 <_IO_stdin_used+0xc3>
    1313:	66 0f db c8          	pand   %xmm0,%xmm1
    1317:	66 0f df c2          	pandn  %xmm2,%xmm0
    131b:	66 0f eb c1          	por    %xmm1,%xmm0
    131f:	41 39 cc             	cmp    %ecx,%r12d
    1322:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    1326:	44 0f 4c e1          	cmovl  %ecx,%r12d
    132a:	89 d1                	mov    %edx,%ecx
    132c:	66 0f 73 da 04       	psrldq $0x4,%xmm2
    1331:	f7 d9                	neg    %ecx
    1333:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    1337:	0f 49 d1             	cmovns %ecx,%edx
    133a:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
    133e:	41 39 d4             	cmp    %edx,%r12d
    1341:	44 0f 4c e2          	cmovl  %edx,%r12d
    1345:	66 0f db d1          	pand   %xmm1,%xmm2
    1349:	66 0f df c8          	pandn  %xmm0,%xmm1
    134d:	66 0f eb ca          	por    %xmm2,%xmm1
    1351:	66 0f 7e c8          	movd   %xmm1,%eax
    1355:	41 39 c4             	cmp    %eax,%r12d
    1358:	44 0f 4c e0          	cmovl  %eax,%r12d
    135c:	31 c0                	xor    %eax,%eax
    135e:	44 89 e2             	mov    %r12d,%edx
    1361:	e8 6a fd ff ff       	call   10d0 <__printf_chk@plt>
    1366:	48 8d 15 69 0d 00 00 	lea    0xd69(%rip),%rdx        # 20d6 <_IO_stdin_used+0xd6>
    136d:	45 85 e4             	test   %r12d,%r12d
    1370:	75 37                	jne    13a9 <main+0x2a9>
    1372:	48 8d 35 86 0d 00 00 	lea    0xd86(%rip),%rsi        # 20ff <_IO_stdin_used+0xff>
    1379:	bf 01 00 00 00       	mov    $0x1,%edi
    137e:	31 c0                	xor    %eax,%eax
    1380:	e8 4b fd ff ff       	call   10d0 <__printf_chk@plt>
    1385:	48 89 dc             	mov    %rbx,%rsp
    1388:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    138c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1393:	00 00 
    1395:	75 2e                	jne    13c5 <main+0x2c5>
    1397:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    139b:	44 89 e0             	mov    %r12d,%eax
    139e:	5b                   	pop    %rbx
    139f:	41 5c                	pop    %r12
    13a1:	41 5d                	pop    %r13
    13a3:	41 5e                	pop    %r14
    13a5:	41 5f                	pop    %r15
    13a7:	5d                   	pop    %rbp
    13a8:	c3                   	ret    
    13a9:	48 8d 35 44 0d 00 00 	lea    0xd44(%rip),%rsi        # 20f4 <_IO_stdin_used+0xf4>
    13b0:	bf 01 00 00 00       	mov    $0x1,%edi
    13b5:	31 c0                	xor    %eax,%eax
    13b7:	41 83 cc ff          	or     $0xffffffff,%r12d
    13bb:	e8 10 fd ff ff       	call   10d0 <__printf_chk@plt>
    13c0:	48 89 dc             	mov    %rbx,%rsp
    13c3:	eb c3                	jmp    1388 <main+0x288>
    13c5:	e8 f6 fc ff ff       	call   10c0 <__stack_chk_fail@plt>
    13ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000013d0 <_start>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	31 ed                	xor    %ebp,%ebp
    13d6:	49 89 d1             	mov    %rdx,%r9
    13d9:	5e                   	pop    %rsi
    13da:	48 89 e2             	mov    %rsp,%rdx
    13dd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13e1:	50                   	push   %rax
    13e2:	54                   	push   %rsp
    13e3:	45 31 c0             	xor    %r8d,%r8d
    13e6:	31 c9                	xor    %ecx,%ecx
    13e8:	48 8d 3d 11 fd ff ff 	lea    -0x2ef(%rip),%rdi        # 1100 <main>
    13ef:	ff 15 e3 4b 00 00    	call   *0x4be3(%rip)        # 5fd8 <__libc_start_main@GLIBC_2.34>
    13f5:	f4                   	hlt    
    13f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13fd:	00 00 00 

0000000000001400 <deregister_tm_clones>:
    1400:	48 8d 3d 09 4c 00 00 	lea    0x4c09(%rip),%rdi        # 6010 <__TMC_END__>
    1407:	48 8d 05 02 4c 00 00 	lea    0x4c02(%rip),%rax        # 6010 <__TMC_END__>
    140e:	48 39 f8             	cmp    %rdi,%rax
    1411:	74 15                	je     1428 <deregister_tm_clones+0x28>
    1413:	48 8b 05 c6 4b 00 00 	mov    0x4bc6(%rip),%rax        # 5fe0 <_ITM_deregisterTMCloneTable@Base>
    141a:	48 85 c0             	test   %rax,%rax
    141d:	74 09                	je     1428 <deregister_tm_clones+0x28>
    141f:	ff e0                	jmp    *%rax
    1421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1428:	c3                   	ret    
    1429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001430 <register_tm_clones>:
    1430:	48 8d 3d d9 4b 00 00 	lea    0x4bd9(%rip),%rdi        # 6010 <__TMC_END__>
    1437:	48 8d 35 d2 4b 00 00 	lea    0x4bd2(%rip),%rsi        # 6010 <__TMC_END__>
    143e:	48 29 fe             	sub    %rdi,%rsi
    1441:	48 89 f0             	mov    %rsi,%rax
    1444:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1448:	48 c1 f8 03          	sar    $0x3,%rax
    144c:	48 01 c6             	add    %rax,%rsi
    144f:	48 d1 fe             	sar    %rsi
    1452:	74 14                	je     1468 <register_tm_clones+0x38>
    1454:	48 8b 05 95 4b 00 00 	mov    0x4b95(%rip),%rax        # 5ff0 <_ITM_registerTMCloneTable@Base>
    145b:	48 85 c0             	test   %rax,%rax
    145e:	74 08                	je     1468 <register_tm_clones+0x38>
    1460:	ff e0                	jmp    *%rax
    1462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1468:	c3                   	ret    
    1469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001470 <__do_global_dtors_aux>:
    1470:	f3 0f 1e fa          	endbr64 
    1474:	80 3d 95 4b 00 00 00 	cmpb   $0x0,0x4b95(%rip)        # 6010 <__TMC_END__>
    147b:	75 2b                	jne    14a8 <__do_global_dtors_aux+0x38>
    147d:	55                   	push   %rbp
    147e:	48 83 3d 72 4b 00 00 	cmpq   $0x0,0x4b72(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1485:	00 
    1486:	48 89 e5             	mov    %rsp,%rbp
    1489:	74 0c                	je     1497 <__do_global_dtors_aux+0x27>
    148b:	48 8b 3d 76 4b 00 00 	mov    0x4b76(%rip),%rdi        # 6008 <__dso_handle>
    1492:	e8 f9 fb ff ff       	call   1090 <__cxa_finalize@plt>
    1497:	e8 64 ff ff ff       	call   1400 <deregister_tm_clones>
    149c:	c6 05 6d 4b 00 00 01 	movb   $0x1,0x4b6d(%rip)        # 6010 <__TMC_END__>
    14a3:	5d                   	pop    %rbp
    14a4:	c3                   	ret    
    14a5:	0f 1f 00             	nopl   (%rax)
    14a8:	c3                   	ret    
    14a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014b0 <frame_dummy>:
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	e9 77 ff ff ff       	jmp    1430 <register_tm_clones>
    14b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014c0 <test_Fopen.constprop.0.isra.0>:
    14c0:	41 54                	push   %r12
    14c2:	49 89 f9             	mov    %rdi,%r9
    14c5:	49 89 fc             	mov    %rdi,%r12
    14c8:	4c 8d 05 39 0b 00 00 	lea    0xb39(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    14cf:	55                   	push   %rbp
    14d0:	48 8d 0d 98 0b 00 00 	lea    0xb98(%rip),%rcx        # 206f <_IO_stdin_used+0x6f>
    14d7:	ba 00 04 00 00       	mov    $0x400,%edx
    14dc:	53                   	push   %rbx
    14dd:	48 89 f3             	mov    %rsi,%rbx
    14e0:	be 01 00 00 00       	mov    $0x1,%esi
    14e5:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    14ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    14f3:	00 00 
    14f5:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    14fc:	00 
    14fd:	31 c0                	xor    %eax,%eax
    14ff:	48 89 e5             	mov    %rsp,%rbp
    1502:	48 89 ef             	mov    %rbp,%rdi
    1505:	e8 e6 fb ff ff       	call   10f0 <__sprintf_chk@plt>
    150a:	48 8d 35 64 0b 00 00 	lea    0xb64(%rip),%rsi        # 2075 <_IO_stdin_used+0x75>
    1511:	48 89 ef             	mov    %rbp,%rdi
    1514:	e8 c7 fb ff ff       	call   10e0 <fopen@plt>
    1519:	48 89 03             	mov    %rax,(%rbx)
    151c:	48 85 c0             	test   %rax,%rax
    151f:	74 1f                	je     1540 <test_Fopen.constprop.0.isra.0+0x80>
    1521:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1528:	00 
    1529:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1530:	00 00 
    1532:	75 22                	jne    1556 <test_Fopen.constprop.0.isra.0+0x96>
    1534:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    153b:	5b                   	pop    %rbx
    153c:	5d                   	pop    %rbp
    153d:	41 5c                	pop    %r12
    153f:	c3                   	ret    
    1540:	4c 89 e2             	mov    %r12,%rdx
    1543:	48 8d 35 2e 0b 00 00 	lea    0xb2e(%rip),%rsi        # 2078 <_IO_stdin_used+0x78>
    154a:	bf 01 00 00 00       	mov    $0x1,%edi
    154f:	e8 7c fb ff ff       	call   10d0 <__printf_chk@plt>
    1554:	eb cb                	jmp    1521 <test_Fopen.constprop.0.isra.0+0x61>
    1556:	e8 65 fb ff ff       	call   10c0 <__stack_chk_fail@plt>
    155b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001560 <read_write_buffer.constprop.0>:
    1560:	41 54                	push   %r12
    1562:	55                   	push   %rbp
    1563:	48 89 f5             	mov    %rsi,%rbp
    1566:	48 83 ec 18          	sub    $0x18,%rsp
    156a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1571:	00 00 
    1573:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1578:	31 c0                	xor    %eax,%eax
    157a:	48 89 e6             	mov    %rsp,%rsi
    157d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    1584:	00 
    1585:	e8 36 ff ff ff       	call   14c0 <test_Fopen.constprop.0.isra.0>
    158a:	4c 8b 24 24          	mov    (%rsp),%r12
    158e:	ba ff 1f 00 00       	mov    $0x1fff,%edx
    1593:	48 89 ef             	mov    %rbp,%rdi
    1596:	be 04 00 00 00       	mov    $0x4,%esi
    159b:	4c 89 e1             	mov    %r12,%rcx
    159e:	e8 fd fa ff ff       	call   10a0 <fread@plt>
    15a3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    15a8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    15af:	00 00 
    15b1:	75 0f                	jne    15c2 <read_write_buffer.constprop.0+0x62>
    15b3:	48 83 c4 18          	add    $0x18,%rsp
    15b7:	4c 89 e7             	mov    %r12,%rdi
    15ba:	5d                   	pop    %rbp
    15bb:	41 5c                	pop    %r12
    15bd:	e9 ee fa ff ff       	jmp    10b0 <fclose@plt>
    15c2:	e8 f9 fa ff ff       	call   10c0 <__stack_chk_fail@plt>
    15c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    15ce:	00 00 

00000000000015d0 <riscv_dsp_bilinear_interp_q31>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	41 57                	push   %r15
    15d6:	49 89 d2             	mov    %rdx,%r10
    15d9:	49 89 f3             	mov    %rsi,%r11
    15dc:	41 56                	push   %r14
    15de:	41 55                	push   %r13
    15e0:	41 54                	push   %r12
    15e2:	55                   	push   %rbp
    15e3:	53                   	push   %rbx
    15e4:	8b 17                	mov    (%rdi),%edx
    15e6:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    15ea:	44 8b 7f 04          	mov    0x4(%rdi),%r15d
    15ee:	8d 72 ff             	lea    -0x1(%rdx),%esi
    15f1:	89 74 24 fc          	mov    %esi,-0x4(%rsp)
    15f5:	45 85 c0             	test   %r8d,%r8d
    15f8:	74 49                	je     1643 <riscv_dsp_bilinear_interp_q31+0x73>
    15fa:	49 89 c9             	mov    %rcx,%r9
    15fd:	44 89 c7             	mov    %r8d,%edi
    1600:	41 8d 5f ff          	lea    -0x1(%r15),%ebx
    1604:	31 c0                	xor    %eax,%eax
    1606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    160d:	00 00 00 
    1610:	41 8b 0c 83          	mov    (%r11,%rax,4),%ecx
    1614:	31 d2                	xor    %edx,%edx
    1616:	41 8b 34 82          	mov    (%r10,%rax,4),%esi
    161a:	41 89 cc             	mov    %ecx,%r12d
    161d:	41 c1 fc 14          	sar    $0x14,%r12d
    1621:	78 13                	js     1636 <riscv_dsp_bilinear_interp_q31+0x66>
    1623:	41 89 f0             	mov    %esi,%r8d
    1626:	41 c1 f8 14          	sar    $0x14,%r8d
    162a:	44 39 e3             	cmp    %r12d,%ebx
    162d:	7e 05                	jle    1634 <riscv_dsp_bilinear_interp_q31+0x64>
    162f:	45 85 c0             	test   %r8d,%r8d
    1632:	79 1c                	jns    1650 <riscv_dsp_bilinear_interp_q31+0x80>
    1634:	31 d2                	xor    %edx,%edx
    1636:	41 89 14 81          	mov    %edx,(%r9,%rax,4)
    163a:	48 83 c0 01          	add    $0x1,%rax
    163e:	48 39 f8             	cmp    %rdi,%rax
    1641:	75 cd                	jne    1610 <riscv_dsp_bilinear_interp_q31+0x40>
    1643:	5b                   	pop    %rbx
    1644:	31 c0                	xor    %eax,%eax
    1646:	5d                   	pop    %rbp
    1647:	41 5c                	pop    %r12
    1649:	41 5d                	pop    %r13
    164b:	41 5e                	pop    %r14
    164d:	41 5f                	pop    %r15
    164f:	c3                   	ret    
    1650:	44 39 44 24 fc       	cmp    %r8d,-0x4(%rsp)
    1655:	7e df                	jle    1636 <riscv_dsp_bilinear_interp_q31+0x66>
    1657:	45 0f af c7          	imul   %r15d,%r8d
    165b:	c1 e1 0b             	shl    $0xb,%ecx
    165e:	c1 e6 0b             	shl    $0xb,%esi
    1661:	41 bd ff ff ff 7f    	mov    $0x7fffffff,%r13d
    1667:	81 e1 00 f8 ff 7f    	and    $0x7ffff800,%ecx
    166d:	81 e6 00 f8 ff 7f    	and    $0x7ffff800,%esi
    1673:	41 be ff ff ff 7f    	mov    $0x7fffffff,%r14d
    1679:	41 29 cd             	sub    %ecx,%r13d
    167c:	41 29 f6             	sub    %esi,%r14d
    167f:	48 63 c9             	movslq %ecx,%rcx
    1682:	48 63 f6             	movslq %esi,%rsi
    1685:	43 8d 14 20          	lea    (%r8,%r12,1),%edx
    1689:	45 01 f8             	add    %r15d,%r8d
    168c:	4d 63 ed             	movslq %r13d,%r13
    168f:	4d 63 f6             	movslq %r14d,%r14
    1692:	48 63 d2             	movslq %edx,%rdx
    1695:	45 01 e0             	add    %r12d,%r8d
    1698:	4c 63 64 95 00       	movslq 0x0(%rbp,%rdx,4),%r12
    169d:	48 63 54 95 04       	movslq 0x4(%rbp,%rdx,4),%rdx
    16a2:	4d 63 c0             	movslq %r8d,%r8
    16a5:	4d 0f af e5          	imul   %r13,%r12
    16a9:	49 0f af d6          	imul   %r14,%rdx
    16ad:	49 c1 fc 20          	sar    $0x20,%r12
    16b1:	48 c1 fa 20          	sar    $0x20,%rdx
    16b5:	4d 0f af e6          	imul   %r14,%r12
    16b9:	48 0f af d1          	imul   %rcx,%rdx
    16bd:	49 c1 fc 20          	sar    $0x20,%r12
    16c1:	48 c1 fa 20          	sar    $0x20,%rdx
    16c5:	44 01 e2             	add    %r12d,%edx
    16c8:	4e 63 64 85 00       	movslq 0x0(%rbp,%r8,4),%r12
    16cd:	4e 63 44 85 04       	movslq 0x4(%rbp,%r8,4),%r8
    16d2:	4d 0f af e5          	imul   %r13,%r12
    16d6:	49 0f af c8          	imul   %r8,%rcx
    16da:	49 c1 fc 20          	sar    $0x20,%r12
    16de:	4c 0f af e6          	imul   %rsi,%r12
    16e2:	48 c1 f9 20          	sar    $0x20,%rcx
    16e6:	48 0f af ce          	imul   %rsi,%rcx
    16ea:	49 c1 fc 20          	sar    $0x20,%r12
    16ee:	44 01 e2             	add    %r12d,%edx
    16f1:	48 c1 f9 20          	sar    $0x20,%rcx
    16f5:	01 ca                	add    %ecx,%edx
    16f7:	c1 e2 02             	shl    $0x2,%edx
    16fa:	e9 37 ff ff ff       	jmp    1636 <riscv_dsp_bilinear_interp_q31+0x66>

Disassembly of section .fini:

0000000000001700 <_fini>:
    1700:	f3 0f 1e fa          	endbr64 
    1704:	48 83 ec 08          	sub    $0x8,%rsp
    1708:	48 83 c4 08          	add    $0x8,%rsp
    170c:	c3                   	ret    
