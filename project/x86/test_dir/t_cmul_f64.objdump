
t_cmul_f64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 5a 2f 00 00    	push   0x2f5a(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 5b 2f 00 00 	bnd jmp *0x2f5b(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3f90 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fread@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3f98 <fread@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fclose@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fa0 <fclose@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <log10f@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fb0 <log10f@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__printf_chk@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <fopen@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <sqrt@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__sprintf_chk@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	55                   	push   %rbp
    1165:	48 89 e5             	mov    %rsp,%rbp
    1168:	41 57                	push   %r15
    116a:	41 56                	push   %r14
    116c:	41 55                	push   %r13
    116e:	41 54                	push   %r12
    1170:	53                   	push   %rbx
    1171:	48 83 ec 48          	sub    $0x48,%rsp
    1175:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117c:	00 00 
    117e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1182:	31 c0                	xor    %eax,%eax
    1184:	48 8d 84 24 00 70 ff 	lea    -0x9000(%rsp),%rax
    118b:	ff 
    118c:	48 89 e3             	mov    %rsp,%rbx
    118f:	48 39 c4             	cmp    %rax,%rsp
    1192:	74 15                	je     11a9 <main+0x49>
    1194:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    119b:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11a2:	00 00 
    11a4:	48 39 c4             	cmp    %rax,%rsp
    11a7:	75 eb                	jne    1194 <main+0x34>
    11a9:	48 81 ec 40 0c 00 00 	sub    $0xc40,%rsp
    11b0:	48 83 8c 24 38 0c 00 	orq    $0x0,0xc38(%rsp)
    11b7:	00 00 
    11b9:	49 89 e6             	mov    %rsp,%r14
    11bc:	48 8d 84 24 00 70 ff 	lea    -0x9000(%rsp),%rax
    11c3:	ff 
    11c4:	48 39 c4             	cmp    %rax,%rsp
    11c7:	74 12                	je     11db <main+0x7b>
    11c9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11d0:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11d7:	00 00 
    11d9:	eb e9                	jmp    11c4 <main+0x64>
    11db:	48 81 ec 40 0c 00 00 	sub    $0xc40,%rsp
    11e2:	48 83 8c 24 38 0c 00 	orq    $0x0,0xc38(%rsp)
    11e9:	00 00 
    11eb:	49 89 e7             	mov    %rsp,%r15
    11ee:	48 8d 84 24 00 70 ff 	lea    -0x9000(%rsp),%rax
    11f5:	ff 
    11f6:	48 39 c4             	cmp    %rax,%rsp
    11f9:	74 12                	je     120d <main+0xad>
    11fb:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1202:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1209:	00 00 
    120b:	eb e9                	jmp    11f6 <main+0x96>
    120d:	48 81 ec 40 0c 00 00 	sub    $0xc40,%rsp
    1214:	48 83 8c 24 38 0c 00 	orq    $0x0,0xc38(%rsp)
    121b:	00 00 
    121d:	49 89 e4             	mov    %rsp,%r12
    1220:	48 8d 84 24 00 70 ff 	lea    -0x9000(%rsp),%rax
    1227:	ff 
    1228:	48 39 c4             	cmp    %rax,%rsp
    122b:	74 12                	je     123f <main+0xdf>
    122d:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1234:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    123b:	00 00 
    123d:	eb e9                	jmp    1228 <main+0xc8>
    123f:	48 81 ec 40 0c 00 00 	sub    $0xc40,%rsp
    1246:	48 83 8c 24 38 0c 00 	orq    $0x0,0xc38(%rsp)
    124d:	00 00 
    124f:	49 89 e5             	mov    %rsp,%r13
    1252:	48 8d 84 24 00 d0 fe 	lea    -0x13000(%rsp),%rax
    1259:	ff 
    125a:	48 39 c4             	cmp    %rax,%rsp
    125d:	74 12                	je     1271 <main+0x111>
    125f:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1266:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    126d:	00 00 
    126f:	eb e9                	jmp    125a <main+0xfa>
    1271:	48 81 ec 80 08 00 00 	sub    $0x880,%rsp
    1278:	48 83 8c 24 78 08 00 	orq    $0x0,0x878(%rsp)
    127f:	00 00 
    1281:	49 89 e1             	mov    %rsp,%r9
    1284:	48 8d 84 24 00 d0 fe 	lea    -0x13000(%rsp),%rax
    128b:	ff 
    128c:	48 39 c4             	cmp    %rax,%rsp
    128f:	74 12                	je     12a3 <main+0x143>
    1291:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1298:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    129f:	00 00 
    12a1:	eb e9                	jmp    128c <main+0x12c>
    12a3:	48 81 ec 80 08 00 00 	sub    $0x880,%rsp
    12aa:	48 83 8c 24 78 08 00 	orq    $0x0,0x878(%rsp)
    12b1:	00 00 
    12b3:	49 89 e2             	mov    %rsp,%r10
    12b6:	48 8d 84 24 00 d0 fe 	lea    -0x13000(%rsp),%rax
    12bd:	ff 
    12be:	48 39 c4             	cmp    %rax,%rsp
    12c1:	74 12                	je     12d5 <main+0x175>
    12c3:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    12ca:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    12d1:	00 00 
    12d3:	eb e9                	jmp    12be <main+0x15e>
    12d5:	4c 89 55 a0          	mov    %r10,-0x60(%rbp)
    12d9:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    12dd:	48 81 ec 80 08 00 00 	sub    $0x880,%rsp
    12e4:	48 83 8c 24 78 08 00 	orq    $0x0,0x878(%rsp)
    12eb:	00 00 
    12ed:	48 8d 3d c8 0d 00 00 	lea    0xdc8(%rip),%rdi        # 20bc <_IO_stdin_used+0xbc>
    12f4:	49 89 e0             	mov    %rsp,%r8
    12f7:	4c 89 f6             	mov    %r14,%rsi
    12fa:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    12fe:	e8 4d 04 00 00       	call   1750 <read_write_buffer.constprop.0>
    1303:	4c 89 fe             	mov    %r15,%rsi
    1306:	48 8d 3d c5 0d 00 00 	lea    0xdc5(%rip),%rdi        # 20d2 <_IO_stdin_used+0xd2>
    130d:	e8 3e 04 00 00       	call   1750 <read_write_buffer.constprop.0>
    1312:	4c 89 ee             	mov    %r13,%rsi
    1315:	48 8d 3d cc 0d 00 00 	lea    0xdcc(%rip),%rdi        # 20e8 <_IO_stdin_used+0xe8>
    131c:	e8 2f 04 00 00       	call   1750 <read_write_buffer.constprop.0>
    1321:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    1325:	ba 10 27 00 00       	mov    $0x2710,%edx
    132a:	4c 89 f7             	mov    %r14,%rdi
    132d:	4c 89 ce             	mov    %r9,%rsi
    1330:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    1334:	e8 e7 04 00 00       	call   1820 <riscv_dsp_convert_f32_f64>
    1339:	4c 8b 55 a0          	mov    -0x60(%rbp),%r10
    133d:	ba 10 27 00 00       	mov    $0x2710,%edx
    1342:	4c 89 ff             	mov    %r15,%rdi
    1345:	4c 89 d6             	mov    %r10,%rsi
    1348:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    134c:	e8 cf 04 00 00       	call   1820 <riscv_dsp_convert_f32_f64>
    1351:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    1355:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    1359:	b9 88 13 00 00       	mov    $0x1388,%ecx
    135e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    1362:	e8 59 04 00 00       	call   17c0 <riscv_dsp_cmul_f64>
    1367:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    136b:	ba 10 27 00 00       	mov    $0x2710,%edx
    1370:	4c 89 e6             	mov    %r12,%rsi
    1373:	e8 48 05 00 00       	call   18c0 <riscv_dsp_convert_f64_f32>
    1378:	66 0f ef db          	pxor   %xmm3,%xmm3
    137c:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1380:	31 c0                	xor    %eax,%eax
    1382:	66 0f 28 f7          	movapd %xmm7,%xmm6
    1386:	0f 28 c3             	movaps %xmm3,%xmm0
    1389:	44 0f 28 c3          	movaps %xmm3,%xmm8
    138d:	f3 44 0f 10 0d ba 0d 	movss  0xdba(%rip),%xmm9        # 2150 <_IO_stdin_used+0x150>
    1394:	00 00 
    1396:	0f 28 eb             	movaps %xmm3,%xmm5
    1399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13a0:	f3 41 0f 10 0c 04    	movss  (%r12,%rax,1),%xmm1
    13a6:	f3 41 0f 10 54 05 00 	movss  0x0(%r13,%rax,1),%xmm2
    13ad:	66 0f 7e c9          	movd   %xmm1,%ecx
    13b1:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
    13b7:	0f 84 61 01 00 00    	je     151e <main+0x3be>
    13bd:	0f 28 e2             	movaps %xmm2,%xmm4
    13c0:	f3 0f 5c ca          	subss  %xmm2,%xmm1
    13c4:	48 83 c0 04          	add    $0x4,%rax
    13c8:	f3 0f 5f e5          	maxss  %xmm5,%xmm4
    13cc:	0f 28 ec             	movaps %xmm4,%xmm5
    13cf:	0f 28 e2             	movaps %xmm2,%xmm4
    13d2:	f3 41 0f 5d e0       	minss  %xmm8,%xmm4
    13d7:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    13db:	44 0f 28 c4          	movaps %xmm4,%xmm8
    13df:	0f 28 e1             	movaps %xmm1,%xmm4
    13e2:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
    13e6:	41 0f 54 e1          	andps  %xmm9,%xmm4
    13ea:	f3 0f 58 c4          	addss  %xmm4,%xmm0
    13ee:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    13f2:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    13f6:	f2 0f 58 fa          	addsd  %xmm2,%xmm7
    13fa:	0f 28 dc             	movaps %xmm4,%xmm3
    13fd:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1401:	f2 0f 58 f1          	addsd  %xmm1,%xmm6
    1405:	48 3d 40 9c 00 00    	cmp    $0x9c40,%rax
    140b:	75 93                	jne    13a0 <main+0x240>
    140d:	66 48 0f 7e f0       	movq   %xmm6,%rax
    1412:	f3 0f 11 65 a0       	movss  %xmm4,-0x60(%rbp)
    1417:	f3 44 0f 11 45 a8    	movss  %xmm8,-0x58(%rbp)
    141d:	f3 0f 11 6d b0       	movss  %xmm5,-0x50(%rbp)
    1422:	f2 0f 11 7d b8       	movsd  %xmm7,-0x48(%rbp)
    1427:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
    142c:	0f 84 ec 00 00 00    	je     151e <main+0x3be>
    1432:	f3 0f 5e 05 0a 0d 00 	divss  0xd0a(%rip),%xmm0        # 2144 <_IO_stdin_used+0x144>
    1439:	00 
    143a:	f2 0f 11 75 98       	movsd  %xmm6,-0x68(%rbp)
    143f:	66 41 0f 7e c7       	movd   %xmm0,%r15d
    1444:	66 0f 28 c6          	movapd %xmm6,%xmm0
    1448:	f2 0f 5e 05 10 0d 00 	divsd  0xd10(%rip),%xmm0        # 2160 <_IO_stdin_used+0x160>
    144f:	00 
    1450:	e8 eb fc ff ff       	call   1140 <sqrt@plt>
    1455:	f3 0f 10 6d b0       	movss  -0x50(%rbp),%xmm5
    145a:	f3 44 0f 10 45 a8    	movss  -0x58(%rbp),%xmm8
    1460:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1464:	f2 0f 10 75 98       	movsd  -0x68(%rbp),%xmm6
    1469:	f3 0f 10 5d a0       	movss  -0x60(%rbp),%xmm3
    146e:	f3 41 0f 5c e8       	subss  %xmm8,%xmm5
    1473:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    1477:	0f 28 f9             	movaps %xmm1,%xmm7
    147a:	f3 0f 5e fd          	divss  %xmm5,%xmm7
    147e:	66 41 0f 7e fc       	movd   %xmm7,%r12d
    1483:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1487:	66 0f 2e f7          	ucomisd %xmm7,%xmm6
    148b:	f2 0f 10 7d b8       	movsd  -0x48(%rbp),%xmm7
    1490:	0f 8a c5 00 00 00    	jp     155b <main+0x3fb>
    1496:	f3 0f 10 25 a2 0c 00 	movss  0xca2(%rip),%xmm4        # 2140 <_IO_stdin_used+0x140>
    149d:	00 
    149e:	0f 85 b7 00 00 00    	jne    155b <main+0x3fb>
    14a4:	48 8d 3d 57 0c 00 00 	lea    0xc57(%rip),%rdi        # 2102 <_IO_stdin_used+0x102>
    14ab:	f3 0f 11 5d a8       	movss  %xmm3,-0x58(%rbp)
    14b0:	f3 0f 11 65 b8       	movss  %xmm4,-0x48(%rbp)
    14b5:	f3 0f 11 4d b0       	movss  %xmm1,-0x50(%rbp)
    14ba:	e8 11 fc ff ff       	call   10d0 <puts@plt>
    14bf:	f3 0f 10 65 b8       	movss  -0x48(%rbp),%xmm4
    14c4:	f3 0f 10 5d a8       	movss  -0x58(%rbp),%xmm3
    14c9:	66 41 0f 6e f4       	movd   %r12d,%xmm6
    14ce:	f3 0f 10 4d b0       	movss  -0x50(%rbp),%xmm1
    14d3:	66 0f ef d2          	pxor   %xmm2,%xmm2
    14d7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    14db:	48 8d 35 66 0b 00 00 	lea    0xb66(%rip),%rsi        # 2048 <_IO_stdin_used+0x48>
    14e2:	f3 0f 5a d6          	cvtss2sd %xmm6,%xmm2
    14e6:	bf 01 00 00 00       	mov    $0x1,%edi
    14eb:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    14ef:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    14f3:	66 41 0f 6e f7       	movd   %r15d,%xmm6
    14f8:	b8 05 00 00 00       	mov    $0x5,%eax
    14fd:	f2 0f 11 55 b8       	movsd  %xmm2,-0x48(%rbp)
    1502:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1506:	f3 0f 5a c6          	cvtss2sd %xmm6,%xmm0
    150a:	e8 11 fc ff ff       	call   1120 <__printf_chk@plt>
    150f:	f2 0f 10 55 b8       	movsd  -0x48(%rbp),%xmm2
    1514:	66 0f 2f 15 4c 0c 00 	comisd 0xc4c(%rip),%xmm2        # 2168 <_IO_stdin_used+0x168>
    151b:	00 
    151c:	77 72                	ja     1590 <main+0x430>
    151e:	48 8d 15 f2 0b 00 00 	lea    0xbf2(%rip),%rdx        # 2117 <_IO_stdin_used+0x117>
    1525:	48 8d 35 09 0c 00 00 	lea    0xc09(%rip),%rsi        # 2135 <_IO_stdin_used+0x135>
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	31 c0                	xor    %eax,%eax
    1533:	e8 e8 fb ff ff       	call   1120 <__printf_chk@plt>
    1538:	31 c0                	xor    %eax,%eax
    153a:	48 89 dc             	mov    %rbx,%rsp
    153d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1541:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1548:	00 00 
    154a:	75 66                	jne    15b2 <main+0x452>
    154c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1550:	5b                   	pop    %rbx
    1551:	41 5c                	pop    %r12
    1553:	41 5d                	pop    %r13
    1555:	41 5e                	pop    %r14
    1557:	41 5f                	pop    %r15
    1559:	5d                   	pop    %rbp
    155a:	c3                   	ret    
    155b:	f2 0f 5e fe          	divsd  %xmm6,%xmm7
    155f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1563:	f3 0f 11 5d b0       	movss  %xmm3,-0x50(%rbp)
    1568:	f3 0f 11 4d b8       	movss  %xmm1,-0x48(%rbp)
    156d:	f2 0f 5a c7          	cvtsd2ss %xmm7,%xmm0
    1571:	e8 9a fb ff ff       	call   1110 <log10f@plt>
    1576:	f3 0f 10 5d b0       	movss  -0x50(%rbp),%xmm3
    157b:	f3 0f 59 05 c5 0b 00 	mulss  0xbc5(%rip),%xmm0        # 2148 <_IO_stdin_used+0x148>
    1582:	00 
    1583:	f3 0f 10 4d b8       	movss  -0x48(%rbp),%xmm1
    1588:	0f 28 e0             	movaps %xmm0,%xmm4
    158b:	e9 14 ff ff ff       	jmp    14a4 <main+0x344>
    1590:	48 8d 15 80 0b 00 00 	lea    0xb80(%rip),%rdx        # 2117 <_IO_stdin_used+0x117>
    1597:	48 8d 35 8c 0b 00 00 	lea    0xb8c(%rip),%rsi        # 212a <_IO_stdin_used+0x12a>
    159e:	bf 01 00 00 00       	mov    $0x1,%edi
    15a3:	31 c0                	xor    %eax,%eax
    15a5:	e8 76 fb ff ff       	call   1120 <__printf_chk@plt>
    15aa:	83 c8 ff             	or     $0xffffffff,%eax
    15ad:	48 89 dc             	mov    %rbx,%rsp
    15b0:	eb 8b                	jmp    153d <main+0x3dd>
    15b2:	e8 49 fb ff ff       	call   1100 <__stack_chk_fail@plt>
    15b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    15be:	00 00 

00000000000015c0 <_start>:
    15c0:	f3 0f 1e fa          	endbr64 
    15c4:	31 ed                	xor    %ebp,%ebp
    15c6:	49 89 d1             	mov    %rdx,%r9
    15c9:	5e                   	pop    %rsi
    15ca:	48 89 e2             	mov    %rsp,%rdx
    15cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    15d1:	50                   	push   %rax
    15d2:	54                   	push   %rsp
    15d3:	45 31 c0             	xor    %r8d,%r8d
    15d6:	31 c9                	xor    %ecx,%ecx
    15d8:	48 8d 3d 81 fb ff ff 	lea    -0x47f(%rip),%rdi        # 1160 <main>
    15df:	ff 15 f3 29 00 00    	call   *0x29f3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    15e5:	f4                   	hlt    
    15e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    15ed:	00 00 00 

00000000000015f0 <deregister_tm_clones>:
    15f0:	48 8d 3d 19 2a 00 00 	lea    0x2a19(%rip),%rdi        # 4010 <__TMC_END__>
    15f7:	48 8d 05 12 2a 00 00 	lea    0x2a12(%rip),%rax        # 4010 <__TMC_END__>
    15fe:	48 39 f8             	cmp    %rdi,%rax
    1601:	74 15                	je     1618 <deregister_tm_clones+0x28>
    1603:	48 8b 05 d6 29 00 00 	mov    0x29d6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    160a:	48 85 c0             	test   %rax,%rax
    160d:	74 09                	je     1618 <deregister_tm_clones+0x28>
    160f:	ff e0                	jmp    *%rax
    1611:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1618:	c3                   	ret    
    1619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001620 <register_tm_clones>:
    1620:	48 8d 3d e9 29 00 00 	lea    0x29e9(%rip),%rdi        # 4010 <__TMC_END__>
    1627:	48 8d 35 e2 29 00 00 	lea    0x29e2(%rip),%rsi        # 4010 <__TMC_END__>
    162e:	48 29 fe             	sub    %rdi,%rsi
    1631:	48 89 f0             	mov    %rsi,%rax
    1634:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1638:	48 c1 f8 03          	sar    $0x3,%rax
    163c:	48 01 c6             	add    %rax,%rsi
    163f:	48 d1 fe             	sar    %rsi
    1642:	74 14                	je     1658 <register_tm_clones+0x38>
    1644:	48 8b 05 a5 29 00 00 	mov    0x29a5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    164b:	48 85 c0             	test   %rax,%rax
    164e:	74 08                	je     1658 <register_tm_clones+0x38>
    1650:	ff e0                	jmp    *%rax
    1652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1658:	c3                   	ret    
    1659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001660 <__do_global_dtors_aux>:
    1660:	f3 0f 1e fa          	endbr64 
    1664:	80 3d a5 29 00 00 00 	cmpb   $0x0,0x29a5(%rip)        # 4010 <__TMC_END__>
    166b:	75 2b                	jne    1698 <__do_global_dtors_aux+0x38>
    166d:	55                   	push   %rbp
    166e:	48 83 3d 82 29 00 00 	cmpq   $0x0,0x2982(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1675:	00 
    1676:	48 89 e5             	mov    %rsp,%rbp
    1679:	74 0c                	je     1687 <__do_global_dtors_aux+0x27>
    167b:	48 8b 3d 86 29 00 00 	mov    0x2986(%rip),%rdi        # 4008 <__dso_handle>
    1682:	e8 39 fa ff ff       	call   10c0 <__cxa_finalize@plt>
    1687:	e8 64 ff ff ff       	call   15f0 <deregister_tm_clones>
    168c:	c6 05 7d 29 00 00 01 	movb   $0x1,0x297d(%rip)        # 4010 <__TMC_END__>
    1693:	5d                   	pop    %rbp
    1694:	c3                   	ret    
    1695:	0f 1f 00             	nopl   (%rax)
    1698:	c3                   	ret    
    1699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016a0 <frame_dummy>:
    16a0:	f3 0f 1e fa          	endbr64 
    16a4:	e9 77 ff ff ff       	jmp    1620 <register_tm_clones>
    16a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016b0 <test_Fopen.constprop.0.isra.0>:
    16b0:	41 54                	push   %r12
    16b2:	49 89 f9             	mov    %rdi,%r9
    16b5:	49 89 fc             	mov    %rdi,%r12
    16b8:	4c 8d 05 49 09 00 00 	lea    0x949(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    16bf:	55                   	push   %rbp
    16c0:	48 8d 0d d3 09 00 00 	lea    0x9d3(%rip),%rcx        # 209a <_IO_stdin_used+0x9a>
    16c7:	ba 00 04 00 00       	mov    $0x400,%edx
    16cc:	53                   	push   %rbx
    16cd:	48 89 f3             	mov    %rsi,%rbx
    16d0:	be 01 00 00 00       	mov    $0x1,%esi
    16d5:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    16dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16e3:	00 00 
    16e5:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    16ec:	00 
    16ed:	31 c0                	xor    %eax,%eax
    16ef:	48 89 e5             	mov    %rsp,%rbp
    16f2:	48 89 ef             	mov    %rbp,%rdi
    16f5:	e8 56 fa ff ff       	call   1150 <__sprintf_chk@plt>
    16fa:	48 8d 35 9f 09 00 00 	lea    0x99f(%rip),%rsi        # 20a0 <_IO_stdin_used+0xa0>
    1701:	48 89 ef             	mov    %rbp,%rdi
    1704:	e8 27 fa ff ff       	call   1130 <fopen@plt>
    1709:	48 89 03             	mov    %rax,(%rbx)
    170c:	48 85 c0             	test   %rax,%rax
    170f:	74 1f                	je     1730 <test_Fopen.constprop.0.isra.0+0x80>
    1711:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1718:	00 
    1719:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1720:	00 00 
    1722:	75 22                	jne    1746 <test_Fopen.constprop.0.isra.0+0x96>
    1724:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    172b:	5b                   	pop    %rbx
    172c:	5d                   	pop    %rbp
    172d:	41 5c                	pop    %r12
    172f:	c3                   	ret    
    1730:	4c 89 e2             	mov    %r12,%rdx
    1733:	48 8d 35 69 09 00 00 	lea    0x969(%rip),%rsi        # 20a3 <_IO_stdin_used+0xa3>
    173a:	bf 01 00 00 00       	mov    $0x1,%edi
    173f:	e8 dc f9 ff ff       	call   1120 <__printf_chk@plt>
    1744:	eb cb                	jmp    1711 <test_Fopen.constprop.0.isra.0+0x61>
    1746:	e8 b5 f9 ff ff       	call   1100 <__stack_chk_fail@plt>
    174b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001750 <read_write_buffer.constprop.0>:
    1750:	41 54                	push   %r12
    1752:	55                   	push   %rbp
    1753:	48 89 f5             	mov    %rsi,%rbp
    1756:	48 83 ec 18          	sub    $0x18,%rsp
    175a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1761:	00 00 
    1763:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1768:	31 c0                	xor    %eax,%eax
    176a:	48 89 e6             	mov    %rsp,%rsi
    176d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    1774:	00 
    1775:	e8 36 ff ff ff       	call   16b0 <test_Fopen.constprop.0.isra.0>
    177a:	4c 8b 24 24          	mov    (%rsp),%r12
    177e:	ba 10 27 00 00       	mov    $0x2710,%edx
    1783:	48 89 ef             	mov    %rbp,%rdi
    1786:	be 04 00 00 00       	mov    $0x4,%esi
    178b:	4c 89 e1             	mov    %r12,%rcx
    178e:	e8 4d f9 ff ff       	call   10e0 <fread@plt>
    1793:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1798:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    179f:	00 00 
    17a1:	75 0f                	jne    17b2 <read_write_buffer.constprop.0+0x62>
    17a3:	48 83 c4 18          	add    $0x18,%rsp
    17a7:	4c 89 e7             	mov    %r12,%rdi
    17aa:	5d                   	pop    %rbp
    17ab:	41 5c                	pop    %r12
    17ad:	e9 3e f9 ff ff       	jmp    10f0 <fclose@plt>
    17b2:	e8 49 f9 ff ff       	call   1100 <__stack_chk_fail@plt>
    17b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    17be:	00 00 

00000000000017c0 <riscv_dsp_cmul_f64>:
    17c0:	f3 0f 1e fa          	endbr64 
    17c4:	31 c0                	xor    %eax,%eax
    17c6:	45 31 c0             	xor    %r8d,%r8d
    17c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    17d0:	66 0f 10 14 07       	movupd (%rdi,%rax,1),%xmm2
    17d5:	66 0f 10 04 06       	movupd (%rsi,%rax,1),%xmm0
    17da:	41 83 c0 01          	add    $0x1,%r8d
    17de:	66 0f 10 0c 07       	movupd (%rdi,%rax,1),%xmm1
    17e3:	66 0f 14 d2          	unpcklpd %xmm2,%xmm2
    17e7:	66 0f 59 d0          	mulpd  %xmm0,%xmm2
    17eb:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    17ef:	66 0f c6 c0 01       	shufpd $0x1,%xmm0,%xmm0
    17f4:	66 0f 59 c1          	mulpd  %xmm1,%xmm0
    17f8:	66 0f 28 ca          	movapd %xmm2,%xmm1
    17fc:	66 0f 5c c8          	subpd  %xmm0,%xmm1
    1800:	66 0f 58 c2          	addpd  %xmm2,%xmm0
    1804:	f2 0f 10 c1          	movsd  %xmm1,%xmm0
    1808:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
    180c:	48 83 c0 10          	add    $0x10,%rax
    1810:	41 39 c8             	cmp    %ecx,%r8d
    1813:	72 bb                	jb     17d0 <riscv_dsp_cmul_f64+0x10>
    1815:	c3                   	ret    
    1816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    181d:	00 00 00 

0000000000001820 <riscv_dsp_convert_f32_f64>:
    1820:	f3 0f 1e fa          	endbr64 
    1824:	89 d2                	mov    %edx,%edx
    1826:	48 85 d2             	test   %rdx,%rdx
    1829:	0f 84 82 00 00 00    	je     18b1 <riscv_dsp_convert_f32_f64+0x91>
    182f:	49 89 d0             	mov    %rdx,%r8
    1832:	48 83 fa 03          	cmp    $0x3,%rdx
    1836:	7e 45                	jle    187d <riscv_dsp_convert_f32_f64+0x5d>
    1838:	48 89 d1             	mov    %rdx,%rcx
    183b:	31 c0                	xor    %eax,%eax
    183d:	48 c1 e9 02          	shr    $0x2,%rcx
    1841:	48 c1 e1 04          	shl    $0x4,%rcx
    1845:	0f 1f 00             	nopl   (%rax)
    1848:	0f 12 44 07 08       	movlps 0x8(%rdi,%rax,1),%xmm0
    184d:	0f 5a 0c 07          	cvtps2pd (%rdi,%rax,1),%xmm1
    1851:	0f 11 0c 46          	movups %xmm1,(%rsi,%rax,2)
    1855:	0f 5a c8             	cvtps2pd %xmm0,%xmm1
    1858:	0f 11 4c 46 10       	movups %xmm1,0x10(%rsi,%rax,2)
    185d:	48 83 c0 10          	add    $0x10,%rax
    1861:	48 39 c8             	cmp    %rcx,%rax
    1864:	75 e2                	jne    1848 <riscv_dsp_convert_f32_f64+0x28>
    1866:	48 89 d0             	mov    %rdx,%rax
    1869:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    186d:	48 8d 3c 87          	lea    (%rdi,%rax,4),%rdi
    1871:	48 8d 34 c6          	lea    (%rsi,%rax,8),%rsi
    1875:	48 29 c2             	sub    %rax,%rdx
    1878:	49 39 c0             	cmp    %rax,%r8
    187b:	74 34                	je     18b1 <riscv_dsp_convert_f32_f64+0x91>
    187d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1881:	f3 0f 5a 07          	cvtss2sd (%rdi),%xmm0
    1885:	f2 0f 11 06          	movsd  %xmm0,(%rsi)
    1889:	48 83 fa 01          	cmp    $0x1,%rdx
    188d:	74 22                	je     18b1 <riscv_dsp_convert_f32_f64+0x91>
    188f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1893:	f3 0f 5a 47 04       	cvtss2sd 0x4(%rdi),%xmm0
    1898:	f2 0f 11 46 08       	movsd  %xmm0,0x8(%rsi)
    189d:	48 83 fa 02          	cmp    $0x2,%rdx
    18a1:	74 0e                	je     18b1 <riscv_dsp_convert_f32_f64+0x91>
    18a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    18a7:	f3 0f 5a 47 08       	cvtss2sd 0x8(%rdi),%xmm0
    18ac:	f2 0f 11 46 10       	movsd  %xmm0,0x10(%rsi)
    18b1:	c3                   	ret    
    18b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    18b9:	00 00 00 
    18bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000018c0 <riscv_dsp_convert_f64_f32>:
    18c0:	f3 0f 1e fa          	endbr64 
    18c4:	89 d2                	mov    %edx,%edx
    18c6:	48 85 d2             	test   %rdx,%rdx
    18c9:	0f 84 87 00 00 00    	je     1956 <riscv_dsp_convert_f64_f32+0x96>
    18cf:	49 89 d0             	mov    %rdx,%r8
    18d2:	48 83 fa 03          	cmp    $0x3,%rdx
    18d6:	7e 4a                	jle    1922 <riscv_dsp_convert_f64_f32+0x62>
    18d8:	48 89 d1             	mov    %rdx,%rcx
    18db:	31 c0                	xor    %eax,%eax
    18dd:	48 c1 e9 02          	shr    $0x2,%rcx
    18e1:	48 c1 e1 04          	shl    $0x4,%rcx
    18e5:	0f 1f 00             	nopl   (%rax)
    18e8:	66 0f 10 14 47       	movupd (%rdi,%rax,2),%xmm2
    18ed:	66 0f 10 5c 47 10    	movupd 0x10(%rdi,%rax,2),%xmm3
    18f3:	66 0f 5a c2          	cvtpd2ps %xmm2,%xmm0
    18f7:	66 0f 5a cb          	cvtpd2ps %xmm3,%xmm1
    18fb:	0f 16 c1             	movlhps %xmm1,%xmm0
    18fe:	0f 11 04 06          	movups %xmm0,(%rsi,%rax,1)
    1902:	48 83 c0 10          	add    $0x10,%rax
    1906:	48 39 c8             	cmp    %rcx,%rax
    1909:	75 dd                	jne    18e8 <riscv_dsp_convert_f64_f32+0x28>
    190b:	48 89 d0             	mov    %rdx,%rax
    190e:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    1912:	48 8d 3c c7          	lea    (%rdi,%rax,8),%rdi
    1916:	48 8d 34 86          	lea    (%rsi,%rax,4),%rsi
    191a:	48 29 c2             	sub    %rax,%rdx
    191d:	49 39 c0             	cmp    %rax,%r8
    1920:	74 34                	je     1956 <riscv_dsp_convert_f64_f32+0x96>
    1922:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1926:	f2 0f 5a 07          	cvtsd2ss (%rdi),%xmm0
    192a:	f3 0f 11 06          	movss  %xmm0,(%rsi)
    192e:	48 83 fa 01          	cmp    $0x1,%rdx
    1932:	74 22                	je     1956 <riscv_dsp_convert_f64_f32+0x96>
    1934:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1938:	f2 0f 5a 47 08       	cvtsd2ss 0x8(%rdi),%xmm0
    193d:	f3 0f 11 46 04       	movss  %xmm0,0x4(%rsi)
    1942:	48 83 fa 02          	cmp    $0x2,%rdx
    1946:	74 0e                	je     1956 <riscv_dsp_convert_f64_f32+0x96>
    1948:	66 0f ef c0          	pxor   %xmm0,%xmm0
    194c:	f2 0f 5a 47 10       	cvtsd2ss 0x10(%rdi),%xmm0
    1951:	f3 0f 11 46 08       	movss  %xmm0,0x8(%rsi)
    1956:	c3                   	ret    

Disassembly of section .fini:

0000000000001958 <_fini>:
    1958:	f3 0f 1e fa          	endbr64 
    195c:	48 83 ec 08          	sub    $0x8,%rsp
    1960:	48 83 c4 08          	add    $0x8,%rsp
    1964:	c3                   	ret    
