
t_linear_interp_q31:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 4f 00 00 	mov    0x4fd9(%rip),%rax        # 5fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 4f 00 00    	push   0x4f72(%rip)        # 5f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 4f 00 00 	bnd jmp *0x4f73(%rip)        # 5fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 5d 4f 00 00 	bnd jmp *0x4f5d(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <fread@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 4e 00 00 	bnd jmp *0x4efd(%rip)        # 5fa8 <fread@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <fclose@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 4e 00 00 	bnd jmp *0x4ef5(%rip)        # 5fb0 <fclose@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 4e 00 00 	bnd jmp *0x4eed(%rip)        # 5fb8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__printf_chk@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 4e 00 00 	bnd jmp *0x4ee5(%rip)        # 5fc0 <__printf_chk@GLIBC_2.3.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fopen@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 4e 00 00 	bnd jmp *0x4edd(%rip)        # 5fc8 <fopen@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__sprintf_chk@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 4e 00 00 	bnd jmp *0x4ed5(%rip)        # 5fd0 <__sprintf_chk@GLIBC_2.3.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <main>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	55                   	push   %rbp
    1105:	48 89 e5             	mov    %rsp,%rbp
    1108:	41 57                	push   %r15
    110a:	41 56                	push   %r14
    110c:	41 55                	push   %r13
    110e:	41 54                	push   %r12
    1110:	53                   	push   %rbx
    1111:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1118:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    111d:	48 81 ec a8 0d 00 00 	sub    $0xda8,%rsp
    1124:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    112b:	00 00 
    112d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1131:	31 c0                	xor    %eax,%eax
    1133:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    113a:	ff 
    113b:	48 89 e3             	mov    %rsp,%rbx
    113e:	48 39 c4             	cmp    %rax,%rsp
    1141:	74 15                	je     1158 <main+0x58>
    1143:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    114a:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1151:	00 00 
    1153:	48 39 c4             	cmp    %rax,%rsp
    1156:	75 eb                	jne    1143 <main+0x43>
    1158:	48 89 e6             	mov    %rsp,%rsi
    115b:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    1162:	ff 
    1163:	48 39 c4             	cmp    %rax,%rsp
    1166:	74 12                	je     117a <main+0x7a>
    1168:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    116f:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1176:	00 00 
    1178:	eb e9                	jmp    1163 <main+0x63>
    117a:	4c 8d 7c 24 03       	lea    0x3(%rsp),%r15
    117f:	48 8d 84 24 00 80 ff 	lea    -0x8000(%rsp),%rax
    1186:	ff 
    1187:	4d 89 fd             	mov    %r15,%r13
    118a:	49 83 e7 fc          	and    $0xfffffffffffffffc,%r15
    118e:	49 c1 ed 02          	shr    $0x2,%r13
    1192:	48 39 c4             	cmp    %rax,%rsp
    1195:	74 12                	je     11a9 <main+0xa9>
    1197:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    119e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11a5:	00 00 
    11a7:	eb e9                	jmp    1192 <main+0x92>
    11a9:	48 8d 3d bc 0e 00 00 	lea    0xebc(%rip),%rdi        # 206c <_IO_stdin_used+0x6c>
    11b0:	4c 8d 64 24 03       	lea    0x3(%rsp),%r12
    11b5:	48 89 b5 38 e2 ff ff 	mov    %rsi,-0x1dc8(%rbp)
    11bc:	e8 7f 03 00 00       	call   1540 <read_write_buffer.constprop.0>
    11c1:	4d 89 e6             	mov    %r12,%r14
    11c4:	0f 28 0d 25 39 00 00 	movaps 0x3925(%rip),%xmm1        # 4af0 <riscv_dsp_linear_interp_tbl+0x1d70>
    11cb:	31 c0                	xor    %eax,%eax
    11cd:	48 8b b5 38 e2 ff ff 	mov    -0x1dc8(%rbp),%rsi
    11d4:	49 c1 ee 02          	shr    $0x2,%r14
    11d8:	49 83 e4 fc          	and    $0xfffffffffffffffc,%r12
    11dc:	48 8d 95 50 e2 ff ff 	lea    -0x1db0(%rbp),%rdx
    11e3:	48 8d 0d 96 1b 00 00 	lea    0x1b96(%rip),%rcx        # 2d80 <riscv_dsp_linear_interp_tbl>
    11ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11f0:	0f 28 04 01          	movaps (%rcx,%rax,1),%xmm0
    11f4:	0f 59 c1             	mulps  %xmm1,%xmm0
    11f7:	f3 0f 5b c0          	cvttps2dq %xmm0,%xmm0
    11fb:	0f 29 04 02          	movaps %xmm0,(%rdx,%rax,1)
    11ff:	48 83 c0 10          	add    $0x10,%rax
    1203:	48 3d 70 1d 00 00    	cmp    $0x1d70,%rax
    1209:	75 e5                	jne    11f0 <main+0xf0>
    120b:	48 89 95 48 e2 ff ff 	mov    %rdx,-0x1db8(%rbp)
    1212:	b9 ff 1f 00 00       	mov    $0x1fff,%ecx
    1217:	4c 89 fa             	mov    %r15,%rdx
    121a:	48 8d bd 40 e2 ff ff 	lea    -0x1dc0(%rbp),%rdi
    1221:	c7 85 40 e2 ff ff 5c 	movl   $0x75c,-0x1dc0(%rbp)
    1228:	07 00 00 
    122b:	e8 80 03 00 00       	call   15b0 <riscv_dsp_linear_interp_q31>
    1230:	4c 89 e6             	mov    %r12,%rsi
    1233:	48 8d 3d 48 0e 00 00 	lea    0xe48(%rip),%rdi        # 2082 <_IO_stdin_used+0x82>
    123a:	e8 01 03 00 00       	call   1540 <read_write_buffer.constprop.0>
    123f:	31 c0                	xor    %eax,%eax
    1241:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	f3 41 0f 6f 04 04    	movdqu (%r12,%rax,1),%xmm0
    124e:	f3 41 0f 6f 1c 07    	movdqu (%r15,%rax,1),%xmm3
    1254:	48 83 c0 10          	add    $0x10,%rax
    1258:	66 0f fa c3          	psubd  %xmm3,%xmm0
    125c:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    1260:	66 0f 72 e1 1f       	psrad  $0x1f,%xmm1
    1265:	66 0f ef c1          	pxor   %xmm1,%xmm0
    1269:	66 0f fa c1          	psubd  %xmm1,%xmm0
    126d:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    1271:	66 0f 66 ca          	pcmpgtd %xmm2,%xmm1
    1275:	66 0f db c1          	pand   %xmm1,%xmm0
    1279:	66 0f df ca          	pandn  %xmm2,%xmm1
    127d:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    1281:	66 0f eb d0          	por    %xmm0,%xmm2
    1285:	48 3d f0 7f 00 00    	cmp    $0x7ff0,%rax
    128b:	75 bb                	jne    1248 <main+0x148>
    128d:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    1291:	42 8b 34 b5 f4 7f 00 	mov    0x7ff4(,%r14,4),%esi
    1298:	00 
    1299:	42 2b 34 ad f4 7f 00 	sub    0x7ff4(,%r13,4),%esi
    12a0:	00 
    12a1:	bf 01 00 00 00       	mov    $0x1,%edi
    12a6:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
    12ab:	41 89 f4             	mov    %esi,%r12d
    12ae:	42 8b 0c b5 f0 7f 00 	mov    0x7ff0(,%r14,4),%ecx
    12b5:	00 
    12b6:	42 8b 14 b5 f8 7f 00 	mov    0x7ff8(,%r14,4),%edx
    12bd:	00 
    12be:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    12c2:	42 2b 0c ad f0 7f 00 	sub    0x7ff0(,%r13,4),%ecx
    12c9:	00 
    12ca:	42 2b 14 ad f8 7f 00 	sub    0x7ff8(,%r13,4),%edx
    12d1:	00 
    12d2:	41 f7 dc             	neg    %r12d
    12d5:	66 0f 66 c2          	pcmpgtd %xmm2,%xmm0
    12d9:	44 0f 48 e6          	cmovs  %esi,%r12d
    12dd:	89 ce                	mov    %ecx,%esi
    12df:	f7 de                	neg    %esi
    12e1:	0f 49 ce             	cmovns %esi,%ecx
    12e4:	48 8d 35 b4 0d 00 00 	lea    0xdb4(%rip),%rsi        # 209f <_IO_stdin_used+0x9f>
    12eb:	66 0f db c8          	pand   %xmm0,%xmm1
    12ef:	66 0f df c2          	pandn  %xmm2,%xmm0
    12f3:	66 0f eb c1          	por    %xmm1,%xmm0
    12f7:	41 39 cc             	cmp    %ecx,%r12d
    12fa:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    12fe:	44 0f 4c e1          	cmovl  %ecx,%r12d
    1302:	89 d1                	mov    %edx,%ecx
    1304:	66 0f 73 da 04       	psrldq $0x4,%xmm2
    1309:	f7 d9                	neg    %ecx
    130b:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    130f:	0f 49 d1             	cmovns %ecx,%edx
    1312:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
    1316:	41 39 d4             	cmp    %edx,%r12d
    1319:	44 0f 4c e2          	cmovl  %edx,%r12d
    131d:	66 0f db d1          	pand   %xmm1,%xmm2
    1321:	66 0f df c8          	pandn  %xmm0,%xmm1
    1325:	66 0f eb ca          	por    %xmm2,%xmm1
    1329:	66 0f 7e c8          	movd   %xmm1,%eax
    132d:	41 39 c4             	cmp    %eax,%r12d
    1330:	44 0f 4c e0          	cmovl  %eax,%r12d
    1334:	31 c0                	xor    %eax,%eax
    1336:	44 89 e2             	mov    %r12d,%edx
    1339:	e8 92 fd ff ff       	call   10d0 <__printf_chk@plt>
    133e:	48 8d 15 6d 0d 00 00 	lea    0xd6d(%rip),%rdx        # 20b2 <_IO_stdin_used+0xb2>
    1345:	45 85 e4             	test   %r12d,%r12d
    1348:	75 37                	jne    1381 <main+0x281>
    134a:	48 8d 35 88 0d 00 00 	lea    0xd88(%rip),%rsi        # 20d9 <_IO_stdin_used+0xd9>
    1351:	bf 01 00 00 00       	mov    $0x1,%edi
    1356:	31 c0                	xor    %eax,%eax
    1358:	e8 73 fd ff ff       	call   10d0 <__printf_chk@plt>
    135d:	48 89 dc             	mov    %rbx,%rsp
    1360:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1364:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    136b:	00 00 
    136d:	75 2e                	jne    139d <main+0x29d>
    136f:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1373:	44 89 e0             	mov    %r12d,%eax
    1376:	5b                   	pop    %rbx
    1377:	41 5c                	pop    %r12
    1379:	41 5d                	pop    %r13
    137b:	41 5e                	pop    %r14
    137d:	41 5f                	pop    %r15
    137f:	5d                   	pop    %rbp
    1380:	c3                   	ret    
    1381:	48 8d 35 46 0d 00 00 	lea    0xd46(%rip),%rsi        # 20ce <_IO_stdin_used+0xce>
    1388:	bf 01 00 00 00       	mov    $0x1,%edi
    138d:	31 c0                	xor    %eax,%eax
    138f:	41 83 cc ff          	or     $0xffffffff,%r12d
    1393:	e8 38 fd ff ff       	call   10d0 <__printf_chk@plt>
    1398:	48 89 dc             	mov    %rbx,%rsp
    139b:	eb c3                	jmp    1360 <main+0x260>
    139d:	e8 1e fd ff ff       	call   10c0 <__stack_chk_fail@plt>
    13a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13a9:	00 00 00 
    13ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000013b0 <_start>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	31 ed                	xor    %ebp,%ebp
    13b6:	49 89 d1             	mov    %rdx,%r9
    13b9:	5e                   	pop    %rsi
    13ba:	48 89 e2             	mov    %rsp,%rdx
    13bd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13c1:	50                   	push   %rax
    13c2:	54                   	push   %rsp
    13c3:	45 31 c0             	xor    %r8d,%r8d
    13c6:	31 c9                	xor    %ecx,%ecx
    13c8:	48 8d 3d 31 fd ff ff 	lea    -0x2cf(%rip),%rdi        # 1100 <main>
    13cf:	ff 15 03 4c 00 00    	call   *0x4c03(%rip)        # 5fd8 <__libc_start_main@GLIBC_2.34>
    13d5:	f4                   	hlt    
    13d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13dd:	00 00 00 

00000000000013e0 <deregister_tm_clones>:
    13e0:	48 8d 3d 29 4c 00 00 	lea    0x4c29(%rip),%rdi        # 6010 <__TMC_END__>
    13e7:	48 8d 05 22 4c 00 00 	lea    0x4c22(%rip),%rax        # 6010 <__TMC_END__>
    13ee:	48 39 f8             	cmp    %rdi,%rax
    13f1:	74 15                	je     1408 <deregister_tm_clones+0x28>
    13f3:	48 8b 05 e6 4b 00 00 	mov    0x4be6(%rip),%rax        # 5fe0 <_ITM_deregisterTMCloneTable@Base>
    13fa:	48 85 c0             	test   %rax,%rax
    13fd:	74 09                	je     1408 <deregister_tm_clones+0x28>
    13ff:	ff e0                	jmp    *%rax
    1401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1408:	c3                   	ret    
    1409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001410 <register_tm_clones>:
    1410:	48 8d 3d f9 4b 00 00 	lea    0x4bf9(%rip),%rdi        # 6010 <__TMC_END__>
    1417:	48 8d 35 f2 4b 00 00 	lea    0x4bf2(%rip),%rsi        # 6010 <__TMC_END__>
    141e:	48 29 fe             	sub    %rdi,%rsi
    1421:	48 89 f0             	mov    %rsi,%rax
    1424:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1428:	48 c1 f8 03          	sar    $0x3,%rax
    142c:	48 01 c6             	add    %rax,%rsi
    142f:	48 d1 fe             	sar    %rsi
    1432:	74 14                	je     1448 <register_tm_clones+0x38>
    1434:	48 8b 05 b5 4b 00 00 	mov    0x4bb5(%rip),%rax        # 5ff0 <_ITM_registerTMCloneTable@Base>
    143b:	48 85 c0             	test   %rax,%rax
    143e:	74 08                	je     1448 <register_tm_clones+0x38>
    1440:	ff e0                	jmp    *%rax
    1442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1448:	c3                   	ret    
    1449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001450 <__do_global_dtors_aux>:
    1450:	f3 0f 1e fa          	endbr64 
    1454:	80 3d b5 4b 00 00 00 	cmpb   $0x0,0x4bb5(%rip)        # 6010 <__TMC_END__>
    145b:	75 2b                	jne    1488 <__do_global_dtors_aux+0x38>
    145d:	55                   	push   %rbp
    145e:	48 83 3d 92 4b 00 00 	cmpq   $0x0,0x4b92(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1465:	00 
    1466:	48 89 e5             	mov    %rsp,%rbp
    1469:	74 0c                	je     1477 <__do_global_dtors_aux+0x27>
    146b:	48 8b 3d 96 4b 00 00 	mov    0x4b96(%rip),%rdi        # 6008 <__dso_handle>
    1472:	e8 19 fc ff ff       	call   1090 <__cxa_finalize@plt>
    1477:	e8 64 ff ff ff       	call   13e0 <deregister_tm_clones>
    147c:	c6 05 8d 4b 00 00 01 	movb   $0x1,0x4b8d(%rip)        # 6010 <__TMC_END__>
    1483:	5d                   	pop    %rbp
    1484:	c3                   	ret    
    1485:	0f 1f 00             	nopl   (%rax)
    1488:	c3                   	ret    
    1489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001490 <frame_dummy>:
    1490:	f3 0f 1e fa          	endbr64 
    1494:	e9 77 ff ff ff       	jmp    1410 <register_tm_clones>
    1499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014a0 <test_Fopen.constprop.0.isra.0>:
    14a0:	41 54                	push   %r12
    14a2:	49 89 f9             	mov    %rdi,%r9
    14a5:	49 89 fc             	mov    %rdi,%r12
    14a8:	4c 8d 05 59 0b 00 00 	lea    0xb59(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    14af:	55                   	push   %rbp
    14b0:	48 8d 0d 93 0b 00 00 	lea    0xb93(%rip),%rcx        # 204a <_IO_stdin_used+0x4a>
    14b7:	ba 00 04 00 00       	mov    $0x400,%edx
    14bc:	53                   	push   %rbx
    14bd:	48 89 f3             	mov    %rsi,%rbx
    14c0:	be 01 00 00 00       	mov    $0x1,%esi
    14c5:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    14cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    14d3:	00 00 
    14d5:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    14dc:	00 
    14dd:	31 c0                	xor    %eax,%eax
    14df:	48 89 e5             	mov    %rsp,%rbp
    14e2:	48 89 ef             	mov    %rbp,%rdi
    14e5:	e8 06 fc ff ff       	call   10f0 <__sprintf_chk@plt>
    14ea:	48 8d 35 5f 0b 00 00 	lea    0xb5f(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    14f1:	48 89 ef             	mov    %rbp,%rdi
    14f4:	e8 e7 fb ff ff       	call   10e0 <fopen@plt>
    14f9:	48 89 03             	mov    %rax,(%rbx)
    14fc:	48 85 c0             	test   %rax,%rax
    14ff:	74 1f                	je     1520 <test_Fopen.constprop.0.isra.0+0x80>
    1501:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1508:	00 
    1509:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1510:	00 00 
    1512:	75 22                	jne    1536 <test_Fopen.constprop.0.isra.0+0x96>
    1514:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    151b:	5b                   	pop    %rbx
    151c:	5d                   	pop    %rbp
    151d:	41 5c                	pop    %r12
    151f:	c3                   	ret    
    1520:	4c 89 e2             	mov    %r12,%rdx
    1523:	48 8d 35 29 0b 00 00 	lea    0xb29(%rip),%rsi        # 2053 <_IO_stdin_used+0x53>
    152a:	bf 01 00 00 00       	mov    $0x1,%edi
    152f:	e8 9c fb ff ff       	call   10d0 <__printf_chk@plt>
    1534:	eb cb                	jmp    1501 <test_Fopen.constprop.0.isra.0+0x61>
    1536:	e8 85 fb ff ff       	call   10c0 <__stack_chk_fail@plt>
    153b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001540 <read_write_buffer.constprop.0>:
    1540:	41 54                	push   %r12
    1542:	55                   	push   %rbp
    1543:	48 89 f5             	mov    %rsi,%rbp
    1546:	48 83 ec 18          	sub    $0x18,%rsp
    154a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1551:	00 00 
    1553:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1558:	31 c0                	xor    %eax,%eax
    155a:	48 89 e6             	mov    %rsp,%rsi
    155d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    1564:	00 
    1565:	e8 36 ff ff ff       	call   14a0 <test_Fopen.constprop.0.isra.0>
    156a:	4c 8b 24 24          	mov    (%rsp),%r12
    156e:	ba ff 1f 00 00       	mov    $0x1fff,%edx
    1573:	48 89 ef             	mov    %rbp,%rdi
    1576:	be 04 00 00 00       	mov    $0x4,%esi
    157b:	4c 89 e1             	mov    %r12,%rcx
    157e:	e8 1d fb ff ff       	call   10a0 <fread@plt>
    1583:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1588:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    158f:	00 00 
    1591:	75 0f                	jne    15a2 <read_write_buffer.constprop.0+0x62>
    1593:	48 83 c4 18          	add    $0x18,%rsp
    1597:	4c 89 e7             	mov    %r12,%rdi
    159a:	5d                   	pop    %rbp
    159b:	41 5c                	pop    %r12
    159d:	e9 0e fb ff ff       	jmp    10b0 <fclose@plt>
    15a2:	e8 19 fb ff ff       	call   10c0 <__stack_chk_fail@plt>
    15a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    15ae:	00 00 

00000000000015b0 <riscv_dsp_linear_interp_q31>:
    15b0:	f3 0f 1e fa          	endbr64 
    15b4:	4c 8b 57 08          	mov    0x8(%rdi),%r10
    15b8:	8b 3f                	mov    (%rdi),%edi
    15ba:	85 c9                	test   %ecx,%ecx
    15bc:	0f 84 9e 00 00 00    	je     1660 <riscv_dsp_linear_interp_q31+0xb0>
    15c2:	48 63 c7             	movslq %edi,%rax
    15c5:	41 54                	push   %r12
    15c7:	49 89 f0             	mov    %rsi,%r8
    15ca:	49 89 d1             	mov    %rdx,%r9
    15cd:	55                   	push   %rbp
    15ce:	4d 8d 5c 82 fc       	lea    -0x4(%r10,%rax,4),%r11
    15d3:	83 ef 01             	sub    $0x1,%edi
    15d6:	89 ce                	mov    %ecx,%esi
    15d8:	53                   	push   %rbx
    15d9:	31 c0                	xor    %eax,%eax
    15db:	bb ff ff ff 7f       	mov    $0x7fffffff,%ebx
    15e0:	eb 16                	jmp    15f8 <riscv_dsp_linear_interp_q31+0x48>
    15e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15e8:	41 8b 13             	mov    (%r11),%edx
    15eb:	41 89 14 81          	mov    %edx,(%r9,%rax,4)
    15ef:	48 83 c0 01          	add    $0x1,%rax
    15f3:	48 39 f0             	cmp    %rsi,%rax
    15f6:	74 53                	je     164b <riscv_dsp_linear_interp_q31+0x9b>
    15f8:	41 8b 0c 80          	mov    (%r8,%rax,4),%ecx
    15fc:	89 ca                	mov    %ecx,%edx
    15fe:	c1 fa 14             	sar    $0x14,%edx
    1601:	39 d7                	cmp    %edx,%edi
    1603:	7e e3                	jle    15e8 <riscv_dsp_linear_interp_q31+0x38>
    1605:	85 d2                	test   %edx,%edx
    1607:	78 4f                	js     1658 <riscv_dsp_linear_interp_q31+0xa8>
    1609:	c1 e1 0b             	shl    $0xb,%ecx
    160c:	41 89 dc             	mov    %ebx,%r12d
    160f:	81 e1 00 f8 ff 7f    	and    $0x7ffff800,%ecx
    1615:	48 63 e9             	movslq %ecx,%rbp
    1618:	48 63 ca             	movslq %edx,%rcx
    161b:	41 29 ec             	sub    %ebp,%r12d
    161e:	49 63 14 8a          	movslq (%r10,%rcx,4),%rdx
    1622:	4d 63 e4             	movslq %r12d,%r12
    1625:	49 0f af d4          	imul   %r12,%rdx
    1629:	4d 63 64 8a 04       	movslq 0x4(%r10,%rcx,4),%r12
    162e:	49 0f af ec          	imul   %r12,%rbp
    1632:	48 c1 fa 20          	sar    $0x20,%rdx
    1636:	48 c1 fd 20          	sar    $0x20,%rbp
    163a:	01 ea                	add    %ebp,%edx
    163c:	01 d2                	add    %edx,%edx
    163e:	41 89 14 81          	mov    %edx,(%r9,%rax,4)
    1642:	48 83 c0 01          	add    $0x1,%rax
    1646:	48 39 f0             	cmp    %rsi,%rax
    1649:	75 ad                	jne    15f8 <riscv_dsp_linear_interp_q31+0x48>
    164b:	5b                   	pop    %rbx
    164c:	31 c0                	xor    %eax,%eax
    164e:	5d                   	pop    %rbp
    164f:	41 5c                	pop    %r12
    1651:	c3                   	ret    
    1652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1658:	41 8b 12             	mov    (%r10),%edx
    165b:	eb 8e                	jmp    15eb <riscv_dsp_linear_interp_q31+0x3b>
    165d:	0f 1f 00             	nopl   (%rax)
    1660:	31 c0                	xor    %eax,%eax
    1662:	c3                   	ret    

Disassembly of section .fini:

0000000000001664 <_fini>:
    1664:	f3 0f 1e fa          	endbr64 
    1668:	48 83 ec 08          	sub    $0x8,%rsp
    166c:	48 83 c4 08          	add    $0x8,%rsp
    1670:	c3                   	ret    
