
t_mat_householder_f64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 4a 2f 00 00    	push   0x2f4a(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 4b 2f 00 00 	bnd jmp *0x2f4b(%rip)        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 0d 2f 00 00 	bnd jmp *0x2f0d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010f0 <puts@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3f80 <puts@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <fread@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3f88 <fread@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <fclose@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3f90 <fclose@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3f98 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <memset@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3fa0 <memset@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <log10f@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3fa8 <log10f@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <memcpy@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3fb0 <memcpy@GLIBC_2.14>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <__printf_chk@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 4d 2e 00 00 	bnd jmp *0x2e4d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <fopen@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 45 2e 00 00 	bnd jmp *0x2e45(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <sqrt@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <__sprintf_chk@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011a0 <main>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	41 56                	push   %r14
    11a6:	ba ed 02 00 00       	mov    $0x2ed,%edx
    11ab:	48 8d 3d 9d 0e 00 00 	lea    0xe9d(%rip),%rdi        # 204f <_IO_stdin_used+0x4f>
    11b2:	41 55                	push   %r13
    11b4:	4c 8d 2d 05 2f 00 00 	lea    0x2f05(%rip),%r13        # 40c0 <golden1>
    11bb:	41 54                	push   %r12
    11bd:	4c 8d 25 fc 5d 00 00 	lea    0x5dfc(%rip),%r12        # 6fc0 <src>
    11c4:	55                   	push   %rbp
    11c5:	4c 89 e6             	mov    %r12,%rsi
    11c8:	48 8d 2d 71 46 00 00 	lea    0x4671(%rip),%rbp        # 5840 <out>
    11cf:	48 83 ec 48          	sub    $0x48,%rsp
    11d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11da:	00 00 
    11dc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    11e1:	31 c0                	xor    %eax,%eax
    11e3:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
    11e8:	e8 03 05 00 00       	call   16f0 <read_write_buffer.constprop.0>
    11ed:	48 8d 3d 24 0f 00 00 	lea    0xf24(%rip),%rdi        # 2118 <_IO_stdin_used+0x118>
    11f4:	e8 f7 fe ff ff       	call   10f0 <puts@plt>
    11f9:	ba ed 02 00 00       	mov    $0x2ed,%edx
    11fe:	48 8d 35 68 0e 00 00 	lea    0xe68(%rip),%rsi        # 206d <_IO_stdin_used+0x6d>
    1205:	31 c0                	xor    %eax,%eax
    1207:	bf 01 00 00 00       	mov    $0x1,%edi
    120c:	e8 4f ff ff ff       	call   1160 <__printf_chk@plt>
    1211:	f2 0f 10 0d e7 0f 00 	movsd  0xfe7(%rip),%xmm1        # 2200 <_IO_stdin_used+0x200>
    1218:	00 
    1219:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    121e:	48 89 ea             	mov    %rbp,%rdx
    1221:	f3 0f 7e 05 c7 0f 00 	movq   0xfc7(%rip),%xmm0        # 21f0 <_IO_stdin_used+0x1f0>
    1228:	00 
    1229:	be 03 00 00 00       	mov    $0x3,%esi
    122e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    1235:	00 00 
    1237:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    123c:	66 0f 28 c1          	movapd %xmm1,%xmm0
    1240:	e8 8b 05 00 00       	call   17d0 <riscv_dsp_mat_householder_f64>
    1245:	4c 89 e7             	mov    %r12,%rdi
    1248:	48 89 ea             	mov    %rbp,%rdx
    124b:	be ed 02 00 00       	mov    $0x2ed,%esi
    1250:	48 8b 05 a9 0f 00 00 	mov    0xfa9(%rip),%rax        # 2200 <_IO_stdin_used+0x200>
    1257:	4c 8d 25 22 2e 00 00 	lea    0x2e22(%rip),%r12        # 4080 <golden2>
    125e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1263:	e8 68 05 00 00       	call   17d0 <riscv_dsp_mat_householder_f64>
    1268:	ba ed 02 00 00       	mov    $0x2ed,%edx
    126d:	4c 89 ee             	mov    %r13,%rsi
    1270:	48 8d 3d c9 0e 00 00 	lea    0xec9(%rip),%rdi        # 2140 <_IO_stdin_used+0x140>
    1277:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    127d:	e8 6e 04 00 00       	call   16f0 <read_write_buffer.constprop.0>
    1282:	ba 01 00 00 00       	mov    $0x1,%edx
    1287:	4c 89 e6             	mov    %r12,%rsi
    128a:	48 8d 3d d7 0e 00 00 	lea    0xed7(%rip),%rdi        # 2168 <_IO_stdin_used+0x168>
    1291:	e8 5a 04 00 00       	call   16f0 <read_write_buffer.constprop.0>
    1296:	ba ed 02 00 00       	mov    $0x2ed,%edx
    129b:	48 89 ee             	mov    %rbp,%rsi
    129e:	4c 89 ef             	mov    %r13,%rdi
    12a1:	e8 ba 04 00 00       	call   1760 <dump2_f64.isra.0>
    12a6:	ba 01 00 00 00       	mov    $0x1,%edx
    12ab:	4c 89 f6             	mov    %r14,%rsi
    12ae:	4c 89 e7             	mov    %r12,%rdi
    12b1:	e8 aa 04 00 00       	call   1760 <dump2_f64.isra.0>
    12b6:	ba ed 02 00 00       	mov    $0x2ed,%edx
    12bb:	48 89 ee             	mov    %rbp,%rsi
    12be:	4c 89 ef             	mov    %r13,%rdi
    12c1:	e8 6a 01 00 00       	call   1430 <dump_rmsd64>
    12c6:	ba 01 00 00 00       	mov    $0x1,%edx
    12cb:	4c 89 f6             	mov    %r14,%rsi
    12ce:	4c 89 e7             	mov    %r12,%rdi
    12d1:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
    12d7:	e8 54 01 00 00       	call   1430 <dump_rmsd64>
    12dc:	f3 0f 10 4c 24 0c    	movss  0xc(%rsp),%xmm1
    12e2:	f2 0f 10 15 1e 0f 00 	movsd  0xf1e(%rip),%xmm2        # 2208 <_IO_stdin_used+0x208>
    12e9:	00 
    12ea:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    12ee:	66 0f 2f ca          	comisd %xmm2,%xmm1
    12f2:	77 34                	ja     1328 <main+0x188>
    12f4:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    12f8:	66 0f 2f c2          	comisd %xmm2,%xmm0
    12fc:	77 2a                	ja     1328 <main+0x188>
    12fe:	48 8d 3d b3 0e 00 00 	lea    0xeb3(%rip),%rdi        # 21b8 <_IO_stdin_used+0x1b8>
    1305:	e8 e6 fd ff ff       	call   10f0 <puts@plt>
    130a:	31 c0                	xor    %eax,%eax
    130c:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    1311:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1318:	00 00 
    131a:	75 1d                	jne    1339 <main+0x199>
    131c:	48 83 c4 48          	add    $0x48,%rsp
    1320:	5d                   	pop    %rbp
    1321:	41 5c                	pop    %r12
    1323:	41 5d                	pop    %r13
    1325:	41 5e                	pop    %r14
    1327:	c3                   	ret    
    1328:	48 8d 3d 61 0e 00 00 	lea    0xe61(%rip),%rdi        # 2190 <_IO_stdin_used+0x190>
    132f:	e8 bc fd ff ff       	call   10f0 <puts@plt>
    1334:	83 c8 ff             	or     $0xffffffff,%eax
    1337:	eb d3                	jmp    130c <main+0x16c>
    1339:	e8 e2 fd ff ff       	call   1120 <__stack_chk_fail@plt>
    133e:	66 90                	xchg   %ax,%ax

0000000000001340 <_start>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	31 ed                	xor    %ebp,%ebp
    1346:	49 89 d1             	mov    %rdx,%r9
    1349:	5e                   	pop    %rsi
    134a:	48 89 e2             	mov    %rsp,%rdx
    134d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1351:	50                   	push   %rax
    1352:	54                   	push   %rsp
    1353:	45 31 c0             	xor    %r8d,%r8d
    1356:	31 c9                	xor    %ecx,%ecx
    1358:	48 8d 3d 41 fe ff ff 	lea    -0x1bf(%rip),%rdi        # 11a0 <main>
    135f:	ff 15 73 2c 00 00    	call   *0x2c73(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1365:	f4                   	hlt    
    1366:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    136d:	00 00 00 

0000000000001370 <deregister_tm_clones>:
    1370:	48 8d 3d 99 2c 00 00 	lea    0x2c99(%rip),%rdi        # 4010 <__TMC_END__>
    1377:	48 8d 05 92 2c 00 00 	lea    0x2c92(%rip),%rax        # 4010 <__TMC_END__>
    137e:	48 39 f8             	cmp    %rdi,%rax
    1381:	74 15                	je     1398 <deregister_tm_clones+0x28>
    1383:	48 8b 05 56 2c 00 00 	mov    0x2c56(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    138a:	48 85 c0             	test   %rax,%rax
    138d:	74 09                	je     1398 <deregister_tm_clones+0x28>
    138f:	ff e0                	jmp    *%rax
    1391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1398:	c3                   	ret    
    1399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013a0 <register_tm_clones>:
    13a0:	48 8d 3d 69 2c 00 00 	lea    0x2c69(%rip),%rdi        # 4010 <__TMC_END__>
    13a7:	48 8d 35 62 2c 00 00 	lea    0x2c62(%rip),%rsi        # 4010 <__TMC_END__>
    13ae:	48 29 fe             	sub    %rdi,%rsi
    13b1:	48 89 f0             	mov    %rsi,%rax
    13b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    13b8:	48 c1 f8 03          	sar    $0x3,%rax
    13bc:	48 01 c6             	add    %rax,%rsi
    13bf:	48 d1 fe             	sar    %rsi
    13c2:	74 14                	je     13d8 <register_tm_clones+0x38>
    13c4:	48 8b 05 25 2c 00 00 	mov    0x2c25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    13cb:	48 85 c0             	test   %rax,%rax
    13ce:	74 08                	je     13d8 <register_tm_clones+0x38>
    13d0:	ff e0                	jmp    *%rax
    13d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    13d8:	c3                   	ret    
    13d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013e0 <__do_global_dtors_aux>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	80 3d 55 2c 00 00 00 	cmpb   $0x0,0x2c55(%rip)        # 4040 <completed.0>
    13eb:	75 2b                	jne    1418 <__do_global_dtors_aux+0x38>
    13ed:	55                   	push   %rbp
    13ee:	48 83 3d 02 2c 00 00 	cmpq   $0x0,0x2c02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    13f5:	00 
    13f6:	48 89 e5             	mov    %rsp,%rbp
    13f9:	74 0c                	je     1407 <__do_global_dtors_aux+0x27>
    13fb:	48 8b 3d 06 2c 00 00 	mov    0x2c06(%rip),%rdi        # 4008 <__dso_handle>
    1402:	e8 d9 fc ff ff       	call   10e0 <__cxa_finalize@plt>
    1407:	e8 64 ff ff ff       	call   1370 <deregister_tm_clones>
    140c:	c6 05 2d 2c 00 00 01 	movb   $0x1,0x2c2d(%rip)        # 4040 <completed.0>
    1413:	5d                   	pop    %rbp
    1414:	c3                   	ret    
    1415:	0f 1f 00             	nopl   (%rax)
    1418:	c3                   	ret    
    1419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001420 <frame_dummy>:
    1420:	f3 0f 1e fa          	endbr64 
    1424:	e9 77 ff ff ff       	jmp    13a0 <register_tm_clones>
    1429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001430 <dump_rmsd64>:
    1430:	41 56                	push   %r14
    1432:	66 0f ef ff          	pxor   %xmm7,%xmm7
    1436:	66 45 0f ef c0       	pxor   %xmm8,%xmm8
    143b:	89 d1                	mov    %edx,%ecx
    143d:	53                   	push   %rbx
    143e:	31 c0                	xor    %eax,%eax
    1440:	44 0f 28 cf          	movaps %xmm7,%xmm9
    1444:	66 41 0f 28 f0       	movapd %xmm8,%xmm6
    1449:	0f 28 df             	movaps %xmm7,%xmm3
    144c:	0f 28 c7             	movaps %xmm7,%xmm0
    144f:	66 41 0f 28 e8       	movapd %xmm8,%xmm5
    1454:	48 83 ec 28          	sub    $0x28,%rsp
    1458:	eb 3d                	jmp    1497 <dump_rmsd64+0x67>
    145a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1460:	f2 0f 5c e1          	subsd  %xmm1,%xmm4
    1464:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1468:	f2 0f 5a d4          	cvtsd2ss %xmm4,%xmm2
    146c:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    1470:	0f 28 e2             	movaps %xmm2,%xmm4
    1473:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    1477:	48 83 c0 01          	add    $0x1,%rax
    147b:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    147f:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    1483:	0f 28 dc             	movaps %xmm4,%xmm3
    1486:	f2 0f 58 f1          	addsd  %xmm1,%xmm6
    148a:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    148e:	f2 0f 58 ea          	addsd  %xmm2,%xmm5
    1492:	48 39 c1             	cmp    %rax,%rcx
    1495:	74 51                	je     14e8 <dump_rmsd64+0xb8>
    1497:	f2 0f 10 0c c7       	movsd  (%rdi,%rax,8),%xmm1
    149c:	66 0f ef d2          	pxor   %xmm2,%xmm2
    14a0:	f2 0f 10 24 c6       	movsd  (%rsi,%rax,8),%xmm4
    14a5:	f3 41 0f 5a d1       	cvtss2sd %xmm9,%xmm2
    14aa:	66 0f 2f ca          	comisd %xmm2,%xmm1
    14ae:	76 0a                	jbe    14ba <dump_rmsd64+0x8a>
    14b0:	66 45 0f ef c9       	pxor   %xmm9,%xmm9
    14b5:	f2 44 0f 5a c9       	cvtsd2ss %xmm1,%xmm9
    14ba:	66 0f ef d2          	pxor   %xmm2,%xmm2
    14be:	f3 0f 5a d7          	cvtss2sd %xmm7,%xmm2
    14c2:	66 0f 2f d1          	comisd %xmm1,%xmm2
    14c6:	76 08                	jbe    14d0 <dump_rmsd64+0xa0>
    14c8:	66 0f ef ff          	pxor   %xmm7,%xmm7
    14cc:	f2 0f 5a f9          	cvtsd2ss %xmm1,%xmm7
    14d0:	66 0f 2f e1          	comisd %xmm1,%xmm4
    14d4:	77 8a                	ja     1460 <dump_rmsd64+0x30>
    14d6:	66 0f 28 d1          	movapd %xmm1,%xmm2
    14da:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
    14de:	f2 0f 5a d2          	cvtsd2ss %xmm2,%xmm2
    14e2:	eb 88                	jmp    146c <dump_rmsd64+0x3c>
    14e4:	0f 1f 40 00          	nopl   0x0(%rax)
    14e8:	66 0f ef c9          	pxor   %xmm1,%xmm1
    14ec:	f3 0f 2a ca          	cvtsi2ss %edx,%xmm1
    14f0:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    14f4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    14f8:	f2 0f 2a ca          	cvtsi2sd %edx,%xmm1
    14fc:	66 41 0f 7e c6       	movd   %xmm0,%r14d
    1501:	66 0f 28 c5          	movapd %xmm5,%xmm0
    1505:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1509:	66 44 0f 2e c0       	ucomisd %xmm0,%xmm8
    150e:	0f 87 e2 00 00 00    	ja     15f6 <dump_rmsd64+0x1c6>
    1514:	f2 0f 51 c0          	sqrtsd %xmm0,%xmm0
    1518:	f3 44 0f 5c cf       	subss  %xmm7,%xmm9
    151d:	66 41 0f 2e e8       	ucomisd %xmm8,%xmm5
    1522:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1526:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    152a:	0f 28 f9             	movaps %xmm1,%xmm7
    152d:	f3 41 0f 5e f9       	divss  %xmm9,%xmm7
    1532:	66 0f 7e fb          	movd   %xmm7,%ebx
    1536:	0f 8a 81 00 00 00    	jp     15bd <dump_rmsd64+0x18d>
    153c:	f3 0f 10 25 9c 0c 00 	movss  0xc9c(%rip),%xmm4        # 21e0 <_IO_stdin_used+0x1e0>
    1543:	00 
    1544:	75 77                	jne    15bd <dump_rmsd64+0x18d>
    1546:	48 8d 3d b7 0a 00 00 	lea    0xab7(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    154d:	f3 0f 11 4c 24 0c    	movss  %xmm1,0xc(%rsp)
    1553:	f3 0f 11 5c 24 08    	movss  %xmm3,0x8(%rsp)
    1559:	f3 0f 11 64 24 04    	movss  %xmm4,0x4(%rsp)
    155f:	e8 8c fb ff ff       	call   10f0 <puts@plt>
    1564:	f3 0f 10 64 24 04    	movss  0x4(%rsp),%xmm4
    156a:	f3 0f 10 5c 24 08    	movss  0x8(%rsp),%xmm3
    1570:	66 41 0f 6e ee       	movd   %r14d,%xmm5
    1575:	f3 0f 10 4c 24 0c    	movss  0xc(%rsp),%xmm1
    157b:	66 0f 6e f3          	movd   %ebx,%xmm6
    157f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1583:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1587:	f3 0f 5a c5          	cvtss2sd %xmm5,%xmm0
    158b:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    158f:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    1593:	f3 0f 5a d6          	cvtss2sd %xmm6,%xmm2
    1597:	48 8d 35 e2 0a 00 00 	lea    0xae2(%rip),%rsi        # 2080 <_IO_stdin_used+0x80>
    159e:	bf 01 00 00 00       	mov    $0x1,%edi
    15a3:	b8 05 00 00 00       	mov    $0x5,%eax
    15a8:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    15ac:	e8 af fb ff ff       	call   1160 <__printf_chk@plt>
    15b1:	48 83 c4 28          	add    $0x28,%rsp
    15b5:	66 0f 6e c3          	movd   %ebx,%xmm0
    15b9:	5b                   	pop    %rbx
    15ba:	41 5e                	pop    %r14
    15bc:	c3                   	ret    
    15bd:	f2 0f 5e f5          	divsd  %xmm5,%xmm6
    15c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    15c5:	f3 0f 11 4c 24 08    	movss  %xmm1,0x8(%rsp)
    15cb:	f3 0f 11 5c 24 04    	movss  %xmm3,0x4(%rsp)
    15d1:	f2 0f 5a c6          	cvtsd2ss %xmm6,%xmm0
    15d5:	e8 66 fb ff ff       	call   1140 <log10f@plt>
    15da:	f3 0f 10 4c 24 08    	movss  0x8(%rsp),%xmm1
    15e0:	f3 0f 59 05 fc 0b 00 	mulss  0xbfc(%rip),%xmm0        # 21e4 <_IO_stdin_used+0x1e4>
    15e7:	00 
    15e8:	f3 0f 10 5c 24 04    	movss  0x4(%rsp),%xmm3
    15ee:	0f 28 e0             	movaps %xmm0,%xmm4
    15f1:	e9 50 ff ff ff       	jmp    1546 <dump_rmsd64+0x116>
    15f6:	f2 0f 11 74 24 18    	movsd  %xmm6,0x18(%rsp)
    15fc:	f2 0f 11 6c 24 10    	movsd  %xmm5,0x10(%rsp)
    1602:	f3 0f 11 7c 24 08    	movss  %xmm7,0x8(%rsp)
    1608:	f3 44 0f 11 4c 24 04 	movss  %xmm9,0x4(%rsp)
    160f:	f3 0f 11 64 24 0c    	movss  %xmm4,0xc(%rsp)
    1615:	e8 66 fb ff ff       	call   1180 <sqrt@plt>
    161a:	f2 0f 10 74 24 18    	movsd  0x18(%rsp),%xmm6
    1620:	66 45 0f ef c0       	pxor   %xmm8,%xmm8
    1625:	f2 0f 10 6c 24 10    	movsd  0x10(%rsp),%xmm5
    162b:	f3 0f 10 5c 24 0c    	movss  0xc(%rsp),%xmm3
    1631:	f3 0f 10 7c 24 08    	movss  0x8(%rsp),%xmm7
    1637:	f3 44 0f 10 4c 24 04 	movss  0x4(%rsp),%xmm9
    163e:	e9 d5 fe ff ff       	jmp    1518 <dump_rmsd64+0xe8>
    1643:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    164a:	00 00 00 00 
    164e:	66 90                	xchg   %ax,%ax

0000000000001650 <test_Fopen.constprop.0.isra.0>:
    1650:	41 54                	push   %r12
    1652:	49 89 f9             	mov    %rdi,%r9
    1655:	49 89 fc             	mov    %rdi,%r12
    1658:	4c 8d 05 79 0a 00 00 	lea    0xa79(%rip),%r8        # 20d8 <_IO_stdin_used+0xd8>
    165f:	55                   	push   %rbp
    1660:	48 8d 0d b2 09 00 00 	lea    0x9b2(%rip),%rcx        # 2019 <_IO_stdin_used+0x19>
    1667:	ba 00 04 00 00       	mov    $0x400,%edx
    166c:	53                   	push   %rbx
    166d:	48 89 f3             	mov    %rsi,%rbx
    1670:	be 01 00 00 00       	mov    $0x1,%esi
    1675:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    167c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1683:	00 00 
    1685:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    168c:	00 
    168d:	31 c0                	xor    %eax,%eax
    168f:	48 89 e5             	mov    %rsp,%rbp
    1692:	48 89 ef             	mov    %rbp,%rdi
    1695:	e8 f6 fa ff ff       	call   1190 <__sprintf_chk@plt>
    169a:	48 8d 35 7e 09 00 00 	lea    0x97e(%rip),%rsi        # 201f <_IO_stdin_used+0x1f>
    16a1:	48 89 ef             	mov    %rbp,%rdi
    16a4:	e8 c7 fa ff ff       	call   1170 <fopen@plt>
    16a9:	48 89 03             	mov    %rax,(%rbx)
    16ac:	48 85 c0             	test   %rax,%rax
    16af:	74 1f                	je     16d0 <test_Fopen.constprop.0.isra.0+0x80>
    16b1:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    16b8:	00 
    16b9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    16c0:	00 00 
    16c2:	75 22                	jne    16e6 <test_Fopen.constprop.0.isra.0+0x96>
    16c4:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    16cb:	5b                   	pop    %rbx
    16cc:	5d                   	pop    %rbp
    16cd:	41 5c                	pop    %r12
    16cf:	c3                   	ret    
    16d0:	4c 89 e2             	mov    %r12,%rdx
    16d3:	48 8d 35 48 09 00 00 	lea    0x948(%rip),%rsi        # 2022 <_IO_stdin_used+0x22>
    16da:	bf 01 00 00 00       	mov    $0x1,%edi
    16df:	e8 7c fa ff ff       	call   1160 <__printf_chk@plt>
    16e4:	eb cb                	jmp    16b1 <test_Fopen.constprop.0.isra.0+0x61>
    16e6:	e8 35 fa ff ff       	call   1120 <__stack_chk_fail@plt>
    16eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000016f0 <read_write_buffer.constprop.0>:
    16f0:	41 54                	push   %r12
    16f2:	55                   	push   %rbp
    16f3:	48 89 f5             	mov    %rsi,%rbp
    16f6:	53                   	push   %rbx
    16f7:	89 d3                	mov    %edx,%ebx
    16f9:	48 83 ec 10          	sub    $0x10,%rsp
    16fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1704:	00 00 
    1706:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    170b:	31 c0                	xor    %eax,%eax
    170d:	48 89 e6             	mov    %rsp,%rsi
    1710:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    1717:	00 
    1718:	e8 33 ff ff ff       	call   1650 <test_Fopen.constprop.0.isra.0>
    171d:	4c 8b 24 24          	mov    (%rsp),%r12
    1721:	89 da                	mov    %ebx,%edx
    1723:	be 08 00 00 00       	mov    $0x8,%esi
    1728:	48 89 ef             	mov    %rbp,%rdi
    172b:	4c 89 e1             	mov    %r12,%rcx
    172e:	e8 cd f9 ff ff       	call   1100 <fread@plt>
    1733:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1738:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    173f:	00 00 
    1741:	75 10                	jne    1753 <read_write_buffer.constprop.0+0x63>
    1743:	48 83 c4 10          	add    $0x10,%rsp
    1747:	4c 89 e7             	mov    %r12,%rdi
    174a:	5b                   	pop    %rbx
    174b:	5d                   	pop    %rbp
    174c:	41 5c                	pop    %r12
    174e:	e9 bd f9 ff ff       	jmp    1110 <fclose@plt>
    1753:	e8 c8 f9 ff ff       	call   1120 <__stack_chk_fail@plt>
    1758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    175f:	00 

0000000000001760 <dump2_f64.isra.0>:
    1760:	89 d2                	mov    %edx,%edx
    1762:	31 c0                	xor    %eax,%eax
    1764:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1768:	eb 1f                	jmp    1789 <dump2_f64.isra.0+0x29>
    176a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1770:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    1774:	66 0f 28 d8          	movapd %xmm0,%xmm3
    1778:	f2 0f 5f da          	maxsd  %xmm2,%xmm3
    177c:	48 83 c0 01          	add    $0x1,%rax
    1780:	66 0f 28 d3          	movapd %xmm3,%xmm2
    1784:	48 39 d0             	cmp    %rdx,%rax
    1787:	74 1f                	je     17a8 <dump2_f64.isra.0+0x48>
    1789:	f2 0f 10 04 c7       	movsd  (%rdi,%rax,8),%xmm0
    178e:	f2 0f 10 0c c6       	movsd  (%rsi,%rax,8),%xmm1
    1793:	66 0f 2f c1          	comisd %xmm1,%xmm0
    1797:	77 d7                	ja     1770 <dump2_f64.isra.0+0x10>
    1799:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    179d:	66 0f 28 d9          	movapd %xmm1,%xmm3
    17a1:	eb d5                	jmp    1778 <dump2_f64.isra.0+0x18>
    17a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    17a8:	66 0f 28 c3          	movapd %xmm3,%xmm0
    17ac:	bf 01 00 00 00       	mov    $0x1,%edi
    17b1:	b8 01 00 00 00       	mov    $0x1,%eax
    17b6:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 203b <_IO_stdin_used+0x3b>
    17bd:	e9 9e f9 ff ff       	jmp    1160 <__printf_chk@plt>
    17c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    17c9:	00 00 00 
    17cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000017d0 <riscv_dsp_mat_householder_f64>:
    17d0:	f3 0f 1e fa          	endbr64 
    17d4:	41 57                	push   %r15
    17d6:	49 89 ff             	mov    %rdi,%r15
    17d9:	41 56                	push   %r14
    17db:	49 89 d6             	mov    %rdx,%r14
    17de:	41 55                	push   %r13
    17e0:	44 8d 6e ff          	lea    -0x1(%rsi),%r13d
    17e4:	41 54                	push   %r12
    17e6:	41 89 f4             	mov    %esi,%r12d
    17e9:	55                   	push   %rbp
    17ea:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
    17ee:	53                   	push   %rbx
    17ef:	66 48 0f 7e c3       	movq   %xmm0,%rbx
    17f4:	48 83 ec 18          	sub    $0x18,%rsp
    17f8:	f2 0f 10 1f          	movsd  (%rdi),%xmm3
    17fc:	f2 0f 11 1c 24       	movsd  %xmm3,(%rsp)
    1801:	83 fe 01             	cmp    $0x1,%esi
    1804:	76 1a                	jbe    1820 <riscv_dsp_mat_householder_f64+0x50>
    1806:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
    180a:	49 8d 6f 08          	lea    0x8(%r15),%rbp
    180e:	8d 56 ff             	lea    -0x1(%rsi),%edx
    1811:	48 89 ee             	mov    %rbp,%rsi
    1814:	49 89 d5             	mov    %rdx,%r13
    1817:	48 c1 e2 03          	shl    $0x3,%rdx
    181b:	e8 30 f9 ff ff       	call   1150 <memcpy@plt>
    1820:	48 8b 05 e9 09 00 00 	mov    0x9e9(%rip),%rax        # 2210 <_IO_stdin_used+0x210>
    1827:	44 89 ea             	mov    %r13d,%edx
    182a:	48 89 ee             	mov    %rbp,%rsi
    182d:	48 89 ef             	mov    %rbp,%rdi
    1830:	49 89 06             	mov    %rax,(%r14)
    1833:	e8 68 01 00 00       	call   19a0 <riscv_dsp_dprod_f64>
    1838:	66 48 0f 6e e3       	movq   %rbx,%xmm4
    183d:	66 0f 2f e0          	comisd %xmm0,%xmm4
    1841:	72 2d                	jb     1870 <riscv_dsp_mat_householder_f64+0xa0>
    1843:	44 89 e2             	mov    %r12d,%edx
    1846:	4c 89 f7             	mov    %r14,%rdi
    1849:	31 f6                	xor    %esi,%esi
    184b:	48 c1 e2 03          	shl    $0x3,%rdx
    184f:	e8 dc f8 ff ff       	call   1130 <memset@plt>
    1854:	48 83 c4 18          	add    $0x18,%rsp
    1858:	66 0f ef c0          	pxor   %xmm0,%xmm0
    185c:	5b                   	pop    %rbx
    185d:	5d                   	pop    %rbp
    185e:	41 5c                	pop    %r12
    1860:	41 5d                	pop    %r13
    1862:	41 5e                	pop    %r14
    1864:	41 5f                	pop    %r15
    1866:	c3                   	ret    
    1867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    186e:	00 00 
    1870:	f2 0f 10 2c 24       	movsd  (%rsp),%xmm5
    1875:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1879:	66 0f 28 cd          	movapd %xmm5,%xmm1
    187d:	f2 0f 59 cd          	mulsd  %xmm5,%xmm1
    1881:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    1885:	66 0f 2e d1          	ucomisd %xmm1,%xmm2
    1889:	77 6b                	ja     18f6 <riscv_dsp_mat_householder_f64+0x126>
    188b:	f2 0f 51 c9          	sqrtsd %xmm1,%xmm1
    188f:	66 0f 28 f5          	movapd %xmm5,%xmm6
    1893:	66 0f 2f f2          	comisd %xmm2,%xmm6
    1897:	76 08                	jbe    18a1 <riscv_dsp_mat_householder_f64+0xd1>
    1899:	66 0f 57 0d 7f 09 00 	xorpd  0x97f(%rip),%xmm1        # 2220 <_IO_stdin_used+0x220>
    18a0:	00 
    18a1:	f2 0f 10 14 24       	movsd  (%rsp),%xmm2
    18a6:	44 89 e2             	mov    %r12d,%edx
    18a9:	4c 89 f6             	mov    %r14,%rsi
    18ac:	4c 89 ff             	mov    %r15,%rdi
    18af:	f2 0f 10 05 59 09 00 	movsd  0x959(%rip),%xmm0        # 2210 <_IO_stdin_used+0x210>
    18b6:	00 
    18b7:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    18bd:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
    18c1:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    18c5:	e8 46 00 00 00       	call   1910 <riscv_dsp_scale_f64>
    18ca:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    18d0:	48 8b 05 39 09 00 00 	mov    0x939(%rip),%rax        # 2210 <_IO_stdin_used+0x210>
    18d7:	66 0f 28 c1          	movapd %xmm1,%xmm0
    18db:	f2 0f 5c 04 24       	subsd  (%rsp),%xmm0
    18e0:	49 89 06             	mov    %rax,(%r14)
    18e3:	48 83 c4 18          	add    $0x18,%rsp
    18e7:	5b                   	pop    %rbx
    18e8:	5d                   	pop    %rbp
    18e9:	41 5c                	pop    %r12
    18eb:	41 5d                	pop    %r13
    18ed:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    18f1:	41 5e                	pop    %r14
    18f3:	41 5f                	pop    %r15
    18f5:	c3                   	ret    
    18f6:	66 0f 28 c1          	movapd %xmm1,%xmm0
    18fa:	e8 81 f8 ff ff       	call   1180 <sqrt@plt>
    18ff:	f2 0f 10 34 24       	movsd  (%rsp),%xmm6
    1904:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1908:	66 0f 28 c8          	movapd %xmm0,%xmm1
    190c:	eb 85                	jmp    1893 <riscv_dsp_mat_householder_f64+0xc3>
    190e:	66 90                	xchg   %ax,%ax

0000000000001910 <riscv_dsp_scale_f64>:
    1910:	f3 0f 1e fa          	endbr64 
    1914:	48 89 f9             	mov    %rdi,%rcx
    1917:	85 d2                	test   %edx,%edx
    1919:	74 7c                	je     1997 <riscv_dsp_scale_f64+0x87>
    191b:	48 8d 47 08          	lea    0x8(%rdi),%rax
    191f:	48 39 c6             	cmp    %rax,%rsi
    1922:	74 54                	je     1978 <riscv_dsp_scale_f64+0x68>
    1924:	8d 42 ff             	lea    -0x1(%rdx),%eax
    1927:	83 f8 01             	cmp    $0x1,%eax
    192a:	76 4c                	jbe    1978 <riscv_dsp_scale_f64+0x68>
    192c:	89 d7                	mov    %edx,%edi
    192e:	66 0f 28 d0          	movapd %xmm0,%xmm2
    1932:	31 c0                	xor    %eax,%eax
    1934:	d1 ef                	shr    %edi
    1936:	66 0f 14 d2          	unpcklpd %xmm2,%xmm2
    193a:	48 c1 e7 04          	shl    $0x4,%rdi
    193e:	66 90                	xchg   %ax,%ax
    1940:	66 0f 10 0c 01       	movupd (%rcx,%rax,1),%xmm1
    1945:	66 0f 59 ca          	mulpd  %xmm2,%xmm1
    1949:	0f 11 0c 06          	movups %xmm1,(%rsi,%rax,1)
    194d:	48 83 c0 10          	add    $0x10,%rax
    1951:	48 39 c7             	cmp    %rax,%rdi
    1954:	75 ea                	jne    1940 <riscv_dsp_scale_f64+0x30>
    1956:	89 d7                	mov    %edx,%edi
    1958:	83 e7 fe             	and    $0xfffffffe,%edi
    195b:	89 f8                	mov    %edi,%eax
    195d:	48 c1 e0 03          	shl    $0x3,%rax
    1961:	48 01 c1             	add    %rax,%rcx
    1964:	48 01 f0             	add    %rsi,%rax
    1967:	39 fa                	cmp    %edi,%edx
    1969:	74 2c                	je     1997 <riscv_dsp_scale_f64+0x87>
    196b:	f2 0f 59 01          	mulsd  (%rcx),%xmm0
    196f:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    1973:	c3                   	ret    
    1974:	0f 1f 40 00          	nopl   0x0(%rax)
    1978:	89 d2                	mov    %edx,%edx
    197a:	31 c0                	xor    %eax,%eax
    197c:	0f 1f 40 00          	nopl   0x0(%rax)
    1980:	f2 0f 10 0c c1       	movsd  (%rcx,%rax,8),%xmm1
    1985:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    1989:	f2 0f 11 0c c6       	movsd  %xmm1,(%rsi,%rax,8)
    198e:	48 83 c0 01          	add    $0x1,%rax
    1992:	48 39 c2             	cmp    %rax,%rdx
    1995:	75 e9                	jne    1980 <riscv_dsp_scale_f64+0x70>
    1997:	c3                   	ret    
    1998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    199f:	00 

00000000000019a0 <riscv_dsp_dprod_f64>:
    19a0:	f3 0f 1e fa          	endbr64 
    19a4:	85 d2                	test   %edx,%edx
    19a6:	74 68                	je     1a10 <riscv_dsp_dprod_f64+0x70>
    19a8:	83 fa 01             	cmp    $0x1,%edx
    19ab:	74 68                	je     1a15 <riscv_dsp_dprod_f64+0x75>
    19ad:	89 d1                	mov    %edx,%ecx
    19af:	31 c0                	xor    %eax,%eax
    19b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    19b5:	d1 e9                	shr    %ecx
    19b7:	48 c1 e1 04          	shl    $0x4,%rcx
    19bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    19c0:	66 0f 10 0c 07       	movupd (%rdi,%rax,1),%xmm1
    19c5:	66 0f 10 1c 06       	movupd (%rsi,%rax,1),%xmm3
    19ca:	48 83 c0 10          	add    $0x10,%rax
    19ce:	66 0f 59 cb          	mulpd  %xmm3,%xmm1
    19d2:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    19d6:	66 0f 15 c9          	unpckhpd %xmm1,%xmm1
    19da:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    19de:	48 39 c1             	cmp    %rax,%rcx
    19e1:	75 dd                	jne    19c0 <riscv_dsp_dprod_f64+0x20>
    19e3:	89 d1                	mov    %edx,%ecx
    19e5:	83 e1 fe             	and    $0xfffffffe,%ecx
    19e8:	89 c8                	mov    %ecx,%eax
    19ea:	48 c1 e0 03          	shl    $0x3,%rax
    19ee:	48 01 c7             	add    %rax,%rdi
    19f1:	48 01 c6             	add    %rax,%rsi
    19f4:	39 ca                	cmp    %ecx,%edx
    19f6:	74 10                	je     1a08 <riscv_dsp_dprod_f64+0x68>
    19f8:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
    19fc:	f2 0f 59 0f          	mulsd  (%rdi),%xmm1
    1a00:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1a04:	c3                   	ret    
    1a05:	0f 1f 00             	nopl   (%rax)
    1a08:	c3                   	ret    
    1a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1a10:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1a14:	c3                   	ret    
    1a15:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1a19:	eb dd                	jmp    19f8 <riscv_dsp_dprod_f64+0x58>

Disassembly of section .fini:

0000000000001a1c <_fini>:
    1a1c:	f3 0f 1e fa          	endbr64 
    1a20:	48 83 ec 08          	sub    $0x8,%rsp
    1a24:	48 83 c4 08          	add    $0x8,%rsp
    1a28:	c3                   	ret    
