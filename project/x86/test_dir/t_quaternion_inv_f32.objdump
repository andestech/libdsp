
t_quaternion_inv_f32:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 5a 2f 00 00    	push   0x2f5a(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 5b 2f 00 00 	bnd jmp *0x2f5b(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3f90 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fread@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3f98 <fread@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fclose@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fa0 <fclose@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <log10f@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fb0 <log10f@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__printf_chk@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <fopen@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <sqrt@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__sprintf_chk@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	55                   	push   %rbp
    1165:	48 89 e5             	mov    %rsp,%rbp
    1168:	41 56                	push   %r14
    116a:	41 55                	push   %r13
    116c:	41 54                	push   %r12
    116e:	53                   	push   %rbx
    116f:	48 83 ec 30          	sub    $0x30,%rsp
    1173:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117a:	00 00 
    117c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1180:	31 c0                	xor    %eax,%eax
    1182:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    1189:	ff 
    118a:	48 89 e3             	mov    %rsp,%rbx
    118d:	48 39 c4             	cmp    %rax,%rsp
    1190:	74 15                	je     11a7 <main+0x47>
    1192:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1199:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11a0:	00 00 
    11a2:	48 39 c4             	cmp    %rax,%rsp
    11a5:	75 eb                	jne    1192 <main+0x32>
    11a7:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    11ae:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    11b5:	00 00 
    11b7:	49 89 e6             	mov    %rsp,%r14
    11ba:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    11c1:	ff 
    11c2:	48 39 c4             	cmp    %rax,%rsp
    11c5:	74 12                	je     11d9 <main+0x79>
    11c7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11ce:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11d5:	00 00 
    11d7:	eb e9                	jmp    11c2 <main+0x62>
    11d9:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    11e0:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    11e7:	00 00 
    11e9:	49 89 e4             	mov    %rsp,%r12
    11ec:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    11f3:	ff 
    11f4:	48 39 c4             	cmp    %rax,%rsp
    11f7:	74 12                	je     120b <main+0xab>
    11f9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1200:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1207:	00 00 
    1209:	eb e9                	jmp    11f4 <main+0x94>
    120b:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    1212:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    1219:	00 00 
    121b:	48 8d 3d 9a 0e 00 00 	lea    0xe9a(%rip),%rdi        # 20bc <_IO_stdin_used+0xbc>
    1222:	4c 89 f6             	mov    %r14,%rsi
    1225:	49 89 e5             	mov    %rsp,%r13
    1228:	e8 53 04 00 00       	call   1680 <read_write_buffer.constprop.0>
    122d:	ba e8 03 00 00       	mov    $0x3e8,%edx
    1232:	4c 89 e6             	mov    %r12,%rsi
    1235:	4c 89 f7             	mov    %r14,%rdi
    1238:	e8 b3 04 00 00       	call   16f0 <riscv_dsp_quaternion_inv_f32>
    123d:	4c 89 ee             	mov    %r13,%rsi
    1240:	48 8d 3d 83 0e 00 00 	lea    0xe83(%rip),%rdi        # 20ca <_IO_stdin_used+0xca>
    1247:	e8 34 04 00 00       	call   1680 <read_write_buffer.constprop.0>
    124c:	31 c0                	xor    %eax,%eax
    124e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1252:	f3 0f 10 2d f6 0e 00 	movss  0xef6(%rip),%xmm5        # 2150 <_IO_stdin_used+0x150>
    1259:	00 
    125a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1260:	f3 41 0f 10 0c 04    	movss  (%r12,%rax,1),%xmm1
    1266:	f3 41 0f 5c 4c 05 00 	subss  0x0(%r13,%rax,1),%xmm1
    126d:	48 83 c0 04          	add    $0x4,%rax
    1271:	0f 54 cd             	andps  %xmm5,%xmm1
    1274:	f3 0f 5f c8          	maxss  %xmm0,%xmm1
    1278:	0f 28 c1             	movaps %xmm1,%xmm0
    127b:	48 3d 80 3e 00 00    	cmp    $0x3e80,%rax
    1281:	75 dd                	jne    1260 <main+0x100>
    1283:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1287:	bf 01 00 00 00       	mov    $0x1,%edi
    128c:	b8 01 00 00 00       	mov    $0x1,%eax
    1291:	48 8d 35 50 0e 00 00 	lea    0xe50(%rip),%rsi        # 20e8 <_IO_stdin_used+0xe8>
    1298:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
    129c:	e8 7f fe ff ff       	call   1120 <__printf_chk@plt>
    12a1:	66 0f ef db          	pxor   %xmm3,%xmm3
    12a5:	66 45 0f ef c0       	pxor   %xmm8,%xmm8
    12aa:	31 c0                	xor    %eax,%eax
    12ac:	66 41 0f 28 f0       	movapd %xmm8,%xmm6
    12b1:	0f 28 c3             	movaps %xmm3,%xmm0
    12b4:	44 0f 28 cb          	movaps %xmm3,%xmm9
    12b8:	0f 28 fb             	movaps %xmm3,%xmm7
    12bb:	f3 0f 10 2d 8d 0e 00 	movss  0xe8d(%rip),%xmm5        # 2150 <_IO_stdin_used+0x150>
    12c2:	00 
    12c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    12c8:	f3 41 0f 10 0c 04    	movss  (%r12,%rax,1),%xmm1
    12ce:	f3 41 0f 10 54 05 00 	movss  0x0(%r13,%rax,1),%xmm2
    12d5:	66 0f 7e c9          	movd   %xmm1,%ecx
    12d9:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
    12df:	0f 84 63 01 00 00    	je     1448 <main+0x2e8>
    12e5:	0f 28 e2             	movaps %xmm2,%xmm4
    12e8:	f3 0f 5c ca          	subss  %xmm2,%xmm1
    12ec:	48 83 c0 04          	add    $0x4,%rax
    12f0:	f3 0f 5f e7          	maxss  %xmm7,%xmm4
    12f4:	0f 28 fc             	movaps %xmm4,%xmm7
    12f7:	0f 28 e2             	movaps %xmm2,%xmm4
    12fa:	f3 41 0f 5d e1       	minss  %xmm9,%xmm4
    12ff:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    1303:	44 0f 28 cc          	movaps %xmm4,%xmm9
    1307:	0f 28 e1             	movaps %xmm1,%xmm4
    130a:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
    130e:	0f 54 e5             	andps  %xmm5,%xmm4
    1311:	f3 0f 58 c4          	addss  %xmm4,%xmm0
    1315:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    1319:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    131d:	f2 44 0f 58 c2       	addsd  %xmm2,%xmm8
    1322:	0f 28 dc             	movaps %xmm4,%xmm3
    1325:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1329:	f2 0f 58 f1          	addsd  %xmm1,%xmm6
    132d:	48 3d 80 3e 00 00    	cmp    $0x3e80,%rax
    1333:	75 93                	jne    12c8 <main+0x168>
    1335:	66 48 0f 7e f0       	movq   %xmm6,%rax
    133a:	f3 0f 11 65 bc       	movss  %xmm4,-0x44(%rbp)
    133f:	f3 44 0f 11 4d c0    	movss  %xmm9,-0x40(%rbp)
    1345:	f3 0f 11 7d c4       	movss  %xmm7,-0x3c(%rbp)
    134a:	f2 44 0f 11 45 c8    	movsd  %xmm8,-0x38(%rbp)
    1350:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
    1355:	0f 84 ed 00 00 00    	je     1448 <main+0x2e8>
    135b:	f3 0f 5e 05 e5 0d 00 	divss  0xde5(%rip),%xmm0        # 2148 <_IO_stdin_used+0x148>
    1362:	00 
    1363:	f2 0f 11 75 b0       	movsd  %xmm6,-0x50(%rbp)
    1368:	66 41 0f 7e c4       	movd   %xmm0,%r12d
    136d:	66 0f 28 c6          	movapd %xmm6,%xmm0
    1371:	f2 0f 5e 05 e7 0d 00 	divsd  0xde7(%rip),%xmm0        # 2160 <_IO_stdin_used+0x160>
    1378:	00 
    1379:	e8 c2 fd ff ff       	call   1140 <sqrt@plt>
    137e:	f3 0f 10 7d c4       	movss  -0x3c(%rbp),%xmm7
    1383:	f3 44 0f 10 4d c0    	movss  -0x40(%rbp),%xmm9
    1389:	66 0f ef c9          	pxor   %xmm1,%xmm1
    138d:	66 0f ef ed          	pxor   %xmm5,%xmm5
    1391:	f2 44 0f 10 45 c8    	movsd  -0x38(%rbp),%xmm8
    1397:	f3 0f 10 5d bc       	movss  -0x44(%rbp),%xmm3
    139c:	f3 41 0f 5c f9       	subss  %xmm9,%xmm7
    13a1:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    13a5:	0f 28 f1             	movaps %xmm1,%xmm6
    13a8:	f3 0f 5e f7          	divss  %xmm7,%xmm6
    13ac:	66 41 0f 7e f5       	movd   %xmm6,%r13d
    13b1:	f2 0f 10 75 b0       	movsd  -0x50(%rbp),%xmm6
    13b6:	66 0f 2e f5          	ucomisd %xmm5,%xmm6
    13ba:	0f 8a c3 00 00 00    	jp     1483 <main+0x323>
    13c0:	f3 0f 10 25 7c 0d 00 	movss  0xd7c(%rip),%xmm4        # 2144 <_IO_stdin_used+0x144>
    13c7:	00 
    13c8:	0f 85 b5 00 00 00    	jne    1483 <main+0x323>
    13ce:	48 8d 3d 26 0d 00 00 	lea    0xd26(%rip),%rdi        # 20fb <_IO_stdin_used+0xfb>
    13d5:	f3 0f 11 5d c0       	movss  %xmm3,-0x40(%rbp)
    13da:	f3 0f 11 65 c8       	movss  %xmm4,-0x38(%rbp)
    13df:	f3 0f 11 4d c4       	movss  %xmm1,-0x3c(%rbp)
    13e4:	e8 e7 fc ff ff       	call   10d0 <puts@plt>
    13e9:	f3 0f 10 65 c8       	movss  -0x38(%rbp),%xmm4
    13ee:	f3 0f 10 5d c0       	movss  -0x40(%rbp),%xmm3
    13f3:	66 41 0f 6e f5       	movd   %r13d,%xmm6
    13f8:	f3 0f 10 4d c4       	movss  -0x3c(%rbp),%xmm1
    13fd:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1401:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1405:	48 8d 35 3c 0c 00 00 	lea    0xc3c(%rip),%rsi        # 2048 <_IO_stdin_used+0x48>
    140c:	f3 0f 5a d6          	cvtss2sd %xmm6,%xmm2
    1410:	bf 01 00 00 00       	mov    $0x1,%edi
    1415:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    1419:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    141d:	66 41 0f 6e f4       	movd   %r12d,%xmm6
    1422:	b8 05 00 00 00       	mov    $0x5,%eax
    1427:	f2 0f 11 55 c8       	movsd  %xmm2,-0x38(%rbp)
    142c:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1430:	f3 0f 5a c6          	cvtss2sd %xmm6,%xmm0
    1434:	e8 e7 fc ff ff       	call   1120 <__printf_chk@plt>
    1439:	f2 0f 10 55 c8       	movsd  -0x38(%rbp),%xmm2
    143e:	66 0f 2f 15 22 0d 00 	comisd 0xd22(%rip),%xmm2        # 2168 <_IO_stdin_used+0x168>
    1445:	00 
    1446:	77 72                	ja     14ba <main+0x35a>
    1448:	48 8d 15 c1 0c 00 00 	lea    0xcc1(%rip),%rdx        # 2110 <_IO_stdin_used+0x110>
    144f:	48 8d 35 e2 0c 00 00 	lea    0xce2(%rip),%rsi        # 2138 <_IO_stdin_used+0x138>
    1456:	bf 01 00 00 00       	mov    $0x1,%edi
    145b:	31 c0                	xor    %eax,%eax
    145d:	e8 be fc ff ff       	call   1120 <__printf_chk@plt>
    1462:	31 c0                	xor    %eax,%eax
    1464:	48 89 dc             	mov    %rbx,%rsp
    1467:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    146b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1472:	00 00 
    1474:	75 66                	jne    14dc <main+0x37c>
    1476:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    147a:	5b                   	pop    %rbx
    147b:	41 5c                	pop    %r12
    147d:	41 5d                	pop    %r13
    147f:	41 5e                	pop    %r14
    1481:	5d                   	pop    %rbp
    1482:	c3                   	ret    
    1483:	f2 44 0f 5e c6       	divsd  %xmm6,%xmm8
    1488:	66 0f ef c0          	pxor   %xmm0,%xmm0
    148c:	f3 0f 11 5d c4       	movss  %xmm3,-0x3c(%rbp)
    1491:	f3 0f 11 4d c8       	movss  %xmm1,-0x38(%rbp)
    1496:	f2 41 0f 5a c0       	cvtsd2ss %xmm8,%xmm0
    149b:	e8 70 fc ff ff       	call   1110 <log10f@plt>
    14a0:	f3 0f 10 5d c4       	movss  -0x3c(%rbp),%xmm3
    14a5:	f3 0f 59 05 9f 0c 00 	mulss  0xc9f(%rip),%xmm0        # 214c <_IO_stdin_used+0x14c>
    14ac:	00 
    14ad:	f3 0f 10 4d c8       	movss  -0x38(%rbp),%xmm1
    14b2:	0f 28 e0             	movaps %xmm0,%xmm4
    14b5:	e9 14 ff ff ff       	jmp    13ce <main+0x26e>
    14ba:	48 8d 15 4f 0c 00 00 	lea    0xc4f(%rip),%rdx        # 2110 <_IO_stdin_used+0x110>
    14c1:	48 8d 35 65 0c 00 00 	lea    0xc65(%rip),%rsi        # 212d <_IO_stdin_used+0x12d>
    14c8:	bf 01 00 00 00       	mov    $0x1,%edi
    14cd:	31 c0                	xor    %eax,%eax
    14cf:	e8 4c fc ff ff       	call   1120 <__printf_chk@plt>
    14d4:	83 c8 ff             	or     $0xffffffff,%eax
    14d7:	48 89 dc             	mov    %rbx,%rsp
    14da:	eb 8b                	jmp    1467 <main+0x307>
    14dc:	e8 1f fc ff ff       	call   1100 <__stack_chk_fail@plt>
    14e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    14e8:	00 00 00 
    14eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000014f0 <_start>:
    14f0:	f3 0f 1e fa          	endbr64 
    14f4:	31 ed                	xor    %ebp,%ebp
    14f6:	49 89 d1             	mov    %rdx,%r9
    14f9:	5e                   	pop    %rsi
    14fa:	48 89 e2             	mov    %rsp,%rdx
    14fd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1501:	50                   	push   %rax
    1502:	54                   	push   %rsp
    1503:	45 31 c0             	xor    %r8d,%r8d
    1506:	31 c9                	xor    %ecx,%ecx
    1508:	48 8d 3d 51 fc ff ff 	lea    -0x3af(%rip),%rdi        # 1160 <main>
    150f:	ff 15 c3 2a 00 00    	call   *0x2ac3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1515:	f4                   	hlt    
    1516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    151d:	00 00 00 

0000000000001520 <deregister_tm_clones>:
    1520:	48 8d 3d e9 2a 00 00 	lea    0x2ae9(%rip),%rdi        # 4010 <__TMC_END__>
    1527:	48 8d 05 e2 2a 00 00 	lea    0x2ae2(%rip),%rax        # 4010 <__TMC_END__>
    152e:	48 39 f8             	cmp    %rdi,%rax
    1531:	74 15                	je     1548 <deregister_tm_clones+0x28>
    1533:	48 8b 05 a6 2a 00 00 	mov    0x2aa6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    153a:	48 85 c0             	test   %rax,%rax
    153d:	74 09                	je     1548 <deregister_tm_clones+0x28>
    153f:	ff e0                	jmp    *%rax
    1541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1548:	c3                   	ret    
    1549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001550 <register_tm_clones>:
    1550:	48 8d 3d b9 2a 00 00 	lea    0x2ab9(%rip),%rdi        # 4010 <__TMC_END__>
    1557:	48 8d 35 b2 2a 00 00 	lea    0x2ab2(%rip),%rsi        # 4010 <__TMC_END__>
    155e:	48 29 fe             	sub    %rdi,%rsi
    1561:	48 89 f0             	mov    %rsi,%rax
    1564:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1568:	48 c1 f8 03          	sar    $0x3,%rax
    156c:	48 01 c6             	add    %rax,%rsi
    156f:	48 d1 fe             	sar    %rsi
    1572:	74 14                	je     1588 <register_tm_clones+0x38>
    1574:	48 8b 05 75 2a 00 00 	mov    0x2a75(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    157b:	48 85 c0             	test   %rax,%rax
    157e:	74 08                	je     1588 <register_tm_clones+0x38>
    1580:	ff e0                	jmp    *%rax
    1582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1588:	c3                   	ret    
    1589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001590 <__do_global_dtors_aux>:
    1590:	f3 0f 1e fa          	endbr64 
    1594:	80 3d 75 2a 00 00 00 	cmpb   $0x0,0x2a75(%rip)        # 4010 <__TMC_END__>
    159b:	75 2b                	jne    15c8 <__do_global_dtors_aux+0x38>
    159d:	55                   	push   %rbp
    159e:	48 83 3d 52 2a 00 00 	cmpq   $0x0,0x2a52(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    15a5:	00 
    15a6:	48 89 e5             	mov    %rsp,%rbp
    15a9:	74 0c                	je     15b7 <__do_global_dtors_aux+0x27>
    15ab:	48 8b 3d 56 2a 00 00 	mov    0x2a56(%rip),%rdi        # 4008 <__dso_handle>
    15b2:	e8 09 fb ff ff       	call   10c0 <__cxa_finalize@plt>
    15b7:	e8 64 ff ff ff       	call   1520 <deregister_tm_clones>
    15bc:	c6 05 4d 2a 00 00 01 	movb   $0x1,0x2a4d(%rip)        # 4010 <__TMC_END__>
    15c3:	5d                   	pop    %rbp
    15c4:	c3                   	ret    
    15c5:	0f 1f 00             	nopl   (%rax)
    15c8:	c3                   	ret    
    15c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015d0 <frame_dummy>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	e9 77 ff ff ff       	jmp    1550 <register_tm_clones>
    15d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015e0 <test_Fopen.constprop.0.isra.0>:
    15e0:	41 54                	push   %r12
    15e2:	49 89 f9             	mov    %rdi,%r9
    15e5:	49 89 fc             	mov    %rdi,%r12
    15e8:	4c 8d 05 19 0a 00 00 	lea    0xa19(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    15ef:	55                   	push   %rbp
    15f0:	48 8d 0d a3 0a 00 00 	lea    0xaa3(%rip),%rcx        # 209a <_IO_stdin_used+0x9a>
    15f7:	ba 00 04 00 00       	mov    $0x400,%edx
    15fc:	53                   	push   %rbx
    15fd:	48 89 f3             	mov    %rsi,%rbx
    1600:	be 01 00 00 00       	mov    $0x1,%esi
    1605:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    160c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1613:	00 00 
    1615:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    161c:	00 
    161d:	31 c0                	xor    %eax,%eax
    161f:	48 89 e5             	mov    %rsp,%rbp
    1622:	48 89 ef             	mov    %rbp,%rdi
    1625:	e8 26 fb ff ff       	call   1150 <__sprintf_chk@plt>
    162a:	48 8d 35 6f 0a 00 00 	lea    0xa6f(%rip),%rsi        # 20a0 <_IO_stdin_used+0xa0>
    1631:	48 89 ef             	mov    %rbp,%rdi
    1634:	e8 f7 fa ff ff       	call   1130 <fopen@plt>
    1639:	48 89 03             	mov    %rax,(%rbx)
    163c:	48 85 c0             	test   %rax,%rax
    163f:	74 1f                	je     1660 <test_Fopen.constprop.0.isra.0+0x80>
    1641:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1648:	00 
    1649:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1650:	00 00 
    1652:	75 22                	jne    1676 <test_Fopen.constprop.0.isra.0+0x96>
    1654:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    165b:	5b                   	pop    %rbx
    165c:	5d                   	pop    %rbp
    165d:	41 5c                	pop    %r12
    165f:	c3                   	ret    
    1660:	4c 89 e2             	mov    %r12,%rdx
    1663:	48 8d 35 39 0a 00 00 	lea    0xa39(%rip),%rsi        # 20a3 <_IO_stdin_used+0xa3>
    166a:	bf 01 00 00 00       	mov    $0x1,%edi
    166f:	e8 ac fa ff ff       	call   1120 <__printf_chk@plt>
    1674:	eb cb                	jmp    1641 <test_Fopen.constprop.0.isra.0+0x61>
    1676:	e8 85 fa ff ff       	call   1100 <__stack_chk_fail@plt>
    167b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001680 <read_write_buffer.constprop.0>:
    1680:	41 54                	push   %r12
    1682:	55                   	push   %rbp
    1683:	48 89 f5             	mov    %rsi,%rbp
    1686:	48 83 ec 18          	sub    $0x18,%rsp
    168a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1691:	00 00 
    1693:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1698:	31 c0                	xor    %eax,%eax
    169a:	48 89 e6             	mov    %rsp,%rsi
    169d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    16a4:	00 
    16a5:	e8 36 ff ff ff       	call   15e0 <test_Fopen.constprop.0.isra.0>
    16aa:	4c 8b 24 24          	mov    (%rsp),%r12
    16ae:	ba a0 0f 00 00       	mov    $0xfa0,%edx
    16b3:	48 89 ef             	mov    %rbp,%rdi
    16b6:	be 04 00 00 00       	mov    $0x4,%esi
    16bb:	4c 89 e1             	mov    %r12,%rcx
    16be:	e8 1d fa ff ff       	call   10e0 <fread@plt>
    16c3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    16c8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    16cf:	00 00 
    16d1:	75 0f                	jne    16e2 <read_write_buffer.constprop.0+0x62>
    16d3:	48 83 c4 18          	add    $0x18,%rsp
    16d7:	4c 89 e7             	mov    %r12,%rdi
    16da:	5d                   	pop    %rbp
    16db:	41 5c                	pop    %r12
    16dd:	e9 0e fa ff ff       	jmp    10f0 <fclose@plt>
    16e2:	e8 19 fa ff ff       	call   1100 <__stack_chk_fail@plt>
    16e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    16ee:	00 00 

00000000000016f0 <riscv_dsp_quaternion_inv_f32>:
    16f0:	f3 0f 1e fa          	endbr64 
    16f4:	48 89 f9             	mov    %rdi,%rcx
    16f7:	49 89 f1             	mov    %rsi,%r9
    16fa:	85 d2                	test   %edx,%edx
    16fc:	0f 84 83 00 00 00    	je     1785 <riscv_dsp_quaternion_inv_f32+0x95>
    1702:	31 c0                	xor    %eax,%eax
    1704:	31 f6                	xor    %esi,%esi
    1706:	f3 0f 10 2d 62 0a 00 	movss  0xa62(%rip),%xmm5        # 2170 <_IO_stdin_used+0x170>
    170d:	00 
    170e:	66 90                	xchg   %ax,%ax
    1710:	89 c7                	mov    %eax,%edi
    1712:	44 8d 40 01          	lea    0x1(%rax),%r8d
    1716:	83 c6 01             	add    $0x1,%esi
    1719:	f3 42 0f 10 1c 81    	movss  (%rcx,%r8,4),%xmm3
    171f:	f3 0f 10 04 b9       	movss  (%rcx,%rdi,4),%xmm0
    1724:	44 8d 40 02          	lea    0x2(%rax),%r8d
    1728:	f3 42 0f 10 14 81    	movss  (%rcx,%r8,4),%xmm2
    172e:	44 8d 40 03          	lea    0x3(%rax),%r8d
    1732:	83 c0 04             	add    $0x4,%eax
    1735:	0f 28 c8             	movaps %xmm0,%xmm1
    1738:	0f 28 f3             	movaps %xmm3,%xmm6
    173b:	f3 42 0f 10 24 81    	movss  (%rcx,%r8,4),%xmm4
    1741:	f3 0f 59 f3          	mulss  %xmm3,%xmm6
    1745:	0f 57 dd             	xorps  %xmm5,%xmm3
    1748:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
    174c:	0f 14 c3             	unpcklps %xmm3,%xmm0
    174f:	f3 0f 58 ce          	addss  %xmm6,%xmm1
    1753:	0f 28 f2             	movaps %xmm2,%xmm6
    1756:	f3 0f 59 f2          	mulss  %xmm2,%xmm6
    175a:	0f 57 d5             	xorps  %xmm5,%xmm2
    175d:	f3 0f 58 ce          	addss  %xmm6,%xmm1
    1761:	0f 28 f4             	movaps %xmm4,%xmm6
    1764:	f3 0f 59 f4          	mulss  %xmm4,%xmm6
    1768:	0f 57 e5             	xorps  %xmm5,%xmm4
    176b:	0f 14 d4             	unpcklps %xmm4,%xmm2
    176e:	0f 16 c2             	movlhps %xmm2,%xmm0
    1771:	f3 0f 58 ce          	addss  %xmm6,%xmm1
    1775:	0f c6 c9 00          	shufps $0x0,%xmm1,%xmm1
    1779:	0f 5e c1             	divps  %xmm1,%xmm0
    177c:	41 0f 11 04 b9       	movups %xmm0,(%r9,%rdi,4)
    1781:	39 f2                	cmp    %esi,%edx
    1783:	75 8b                	jne    1710 <riscv_dsp_quaternion_inv_f32+0x20>
    1785:	c3                   	ret    

Disassembly of section .fini:

0000000000001788 <_fini>:
    1788:	f3 0f 1e fa          	endbr64 
    178c:	48 83 ec 08          	sub    $0x8,%rsp
    1790:	48 83 c4 08          	add    $0x8,%rsp
    1794:	c3                   	ret    
