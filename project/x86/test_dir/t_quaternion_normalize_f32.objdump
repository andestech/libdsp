
t_quaternion_normalize_f32:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 2f 00 00    	push   0x2f52(%rip)        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 2f 00 00 	bnd jmp *0x2f53(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010e0 <puts@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3f88 <puts@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fread@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3f90 <fread@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <fclose@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3f98 <fclose@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <__stack_chk_fail@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <log10f@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3fa8 <log10f@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <sqrtf@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3fb0 <sqrtf@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <__printf_chk@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <fopen@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <sqrt@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3fc8 <sqrt@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__sprintf_chk@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001180 <main>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	55                   	push   %rbp
    1185:	48 89 e5             	mov    %rsp,%rbp
    1188:	41 56                	push   %r14
    118a:	41 55                	push   %r13
    118c:	41 54                	push   %r12
    118e:	53                   	push   %rbx
    118f:	48 83 ec 30          	sub    $0x30,%rsp
    1193:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    119a:	00 00 
    119c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    11a0:	31 c0                	xor    %eax,%eax
    11a2:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    11a9:	ff 
    11aa:	48 89 e3             	mov    %rsp,%rbx
    11ad:	48 39 c4             	cmp    %rax,%rsp
    11b0:	74 15                	je     11c7 <main+0x47>
    11b2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11b9:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11c0:	00 00 
    11c2:	48 39 c4             	cmp    %rax,%rsp
    11c5:	75 eb                	jne    11b2 <main+0x32>
    11c7:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    11ce:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    11d5:	00 00 
    11d7:	49 89 e6             	mov    %rsp,%r14
    11da:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    11e1:	ff 
    11e2:	48 39 c4             	cmp    %rax,%rsp
    11e5:	74 12                	je     11f9 <main+0x79>
    11e7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11ee:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    11f5:	00 00 
    11f7:	eb e9                	jmp    11e2 <main+0x62>
    11f9:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    1200:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    1207:	00 00 
    1209:	49 89 e4             	mov    %rsp,%r12
    120c:	48 8d 84 24 00 d0 ff 	lea    -0x3000(%rsp),%rax
    1213:	ff 
    1214:	48 39 c4             	cmp    %rax,%rsp
    1217:	74 12                	je     122b <main+0xab>
    1219:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1220:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1227:	00 00 
    1229:	eb e9                	jmp    1214 <main+0x94>
    122b:	48 81 ec 80 0e 00 00 	sub    $0xe80,%rsp
    1232:	48 83 8c 24 78 0e 00 	orq    $0x0,0xe78(%rsp)
    1239:	00 00 
    123b:	48 8d 3d cb 0e 00 00 	lea    0xecb(%rip),%rdi        # 210d <_IO_stdin_used+0x10d>
    1242:	4c 89 f6             	mov    %r14,%rsi
    1245:	49 89 e5             	mov    %rsp,%r13
    1248:	e8 53 04 00 00       	call   16a0 <read_write_buffer.constprop.0>
    124d:	ba e8 03 00 00       	mov    $0x3e8,%edx
    1252:	4c 89 e6             	mov    %r12,%rsi
    1255:	4c 89 f7             	mov    %r14,%rdi
    1258:	e8 b3 04 00 00       	call   1710 <riscv_dsp_quaternion_normalize_f32>
    125d:	4c 89 ee             	mov    %r13,%rsi
    1260:	48 8d 3d e1 0d 00 00 	lea    0xde1(%rip),%rdi        # 2048 <_IO_stdin_used+0x48>
    1267:	e8 34 04 00 00       	call   16a0 <read_write_buffer.constprop.0>
    126c:	31 c0                	xor    %eax,%eax
    126e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1272:	f3 0f 10 2d f6 0e 00 	movss  0xef6(%rip),%xmm5        # 2170 <_IO_stdin_used+0x170>
    1279:	00 
    127a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1280:	f3 41 0f 10 0c 04    	movss  (%r12,%rax,1),%xmm1
    1286:	f3 41 0f 5c 4c 05 00 	subss  0x0(%r13,%rax,1),%xmm1
    128d:	48 83 c0 04          	add    $0x4,%rax
    1291:	0f 54 cd             	andps  %xmm5,%xmm1
    1294:	f3 0f 5f c8          	maxss  %xmm0,%xmm1
    1298:	0f 28 c1             	movaps %xmm1,%xmm0
    129b:	48 3d 80 3e 00 00    	cmp    $0x3e80,%rax
    12a1:	75 dd                	jne    1280 <main+0x100>
    12a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12a7:	bf 01 00 00 00       	mov    $0x1,%edi
    12ac:	b8 01 00 00 00       	mov    $0x1,%eax
    12b1:	48 8d 35 63 0e 00 00 	lea    0xe63(%rip),%rsi        # 211b <_IO_stdin_used+0x11b>
    12b8:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
    12bc:	e8 7f fe ff ff       	call   1140 <__printf_chk@plt>
    12c1:	66 0f ef db          	pxor   %xmm3,%xmm3
    12c5:	66 45 0f ef c0       	pxor   %xmm8,%xmm8
    12ca:	31 c0                	xor    %eax,%eax
    12cc:	66 41 0f 28 f0       	movapd %xmm8,%xmm6
    12d1:	0f 28 c3             	movaps %xmm3,%xmm0
    12d4:	44 0f 28 cb          	movaps %xmm3,%xmm9
    12d8:	0f 28 fb             	movaps %xmm3,%xmm7
    12db:	f3 0f 10 2d 8d 0e 00 	movss  0xe8d(%rip),%xmm5        # 2170 <_IO_stdin_used+0x170>
    12e2:	00 
    12e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    12e8:	f3 41 0f 10 0c 04    	movss  (%r12,%rax,1),%xmm1
    12ee:	f3 41 0f 10 54 05 00 	movss  0x0(%r13,%rax,1),%xmm2
    12f5:	66 0f 7e c9          	movd   %xmm1,%ecx
    12f9:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
    12ff:	0f 84 63 01 00 00    	je     1468 <main+0x2e8>
    1305:	0f 28 e2             	movaps %xmm2,%xmm4
    1308:	f3 0f 5c ca          	subss  %xmm2,%xmm1
    130c:	48 83 c0 04          	add    $0x4,%rax
    1310:	f3 0f 5f e7          	maxss  %xmm7,%xmm4
    1314:	0f 28 fc             	movaps %xmm4,%xmm7
    1317:	0f 28 e2             	movaps %xmm2,%xmm4
    131a:	f3 41 0f 5d e1       	minss  %xmm9,%xmm4
    131f:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    1323:	44 0f 28 cc          	movaps %xmm4,%xmm9
    1327:	0f 28 e1             	movaps %xmm1,%xmm4
    132a:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
    132e:	0f 54 e5             	andps  %xmm5,%xmm4
    1331:	f3 0f 58 c4          	addss  %xmm4,%xmm0
    1335:	f3 0f 5f e3          	maxss  %xmm3,%xmm4
    1339:	f3 0f 5a d2          	cvtss2sd %xmm2,%xmm2
    133d:	f2 44 0f 58 c2       	addsd  %xmm2,%xmm8
    1342:	0f 28 dc             	movaps %xmm4,%xmm3
    1345:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1349:	f2 0f 58 f1          	addsd  %xmm1,%xmm6
    134d:	48 3d 80 3e 00 00    	cmp    $0x3e80,%rax
    1353:	75 93                	jne    12e8 <main+0x168>
    1355:	66 48 0f 7e f0       	movq   %xmm6,%rax
    135a:	f3 0f 11 65 bc       	movss  %xmm4,-0x44(%rbp)
    135f:	f3 44 0f 11 4d c0    	movss  %xmm9,-0x40(%rbp)
    1365:	f3 0f 11 7d c4       	movss  %xmm7,-0x3c(%rbp)
    136a:	f2 44 0f 11 45 c8    	movsd  %xmm8,-0x38(%rbp)
    1370:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
    1375:	0f 84 ed 00 00 00    	je     1468 <main+0x2e8>
    137b:	f3 0f 5e 05 dd 0d 00 	divss  0xddd(%rip),%xmm0        # 2160 <_IO_stdin_used+0x160>
    1382:	00 
    1383:	f2 0f 11 75 b0       	movsd  %xmm6,-0x50(%rbp)
    1388:	66 41 0f 7e c4       	movd   %xmm0,%r12d
    138d:	66 0f 28 c6          	movapd %xmm6,%xmm0
    1391:	f2 0f 5e 05 e7 0d 00 	divsd  0xde7(%rip),%xmm0        # 2180 <_IO_stdin_used+0x180>
    1398:	00 
    1399:	e8 c2 fd ff ff       	call   1160 <sqrt@plt>
    139e:	f3 0f 10 7d c4       	movss  -0x3c(%rbp),%xmm7
    13a3:	f3 44 0f 10 4d c0    	movss  -0x40(%rbp),%xmm9
    13a9:	66 0f ef c9          	pxor   %xmm1,%xmm1
    13ad:	66 0f ef ed          	pxor   %xmm5,%xmm5
    13b1:	f2 44 0f 10 45 c8    	movsd  -0x38(%rbp),%xmm8
    13b7:	f3 0f 10 5d bc       	movss  -0x44(%rbp),%xmm3
    13bc:	f3 41 0f 5c f9       	subss  %xmm9,%xmm7
    13c1:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    13c5:	0f 28 f1             	movaps %xmm1,%xmm6
    13c8:	f3 0f 5e f7          	divss  %xmm7,%xmm6
    13cc:	66 41 0f 7e f5       	movd   %xmm6,%r13d
    13d1:	f2 0f 10 75 b0       	movsd  -0x50(%rbp),%xmm6
    13d6:	66 0f 2e f5          	ucomisd %xmm5,%xmm6
    13da:	0f 8a c3 00 00 00    	jp     14a3 <main+0x323>
    13e0:	f3 0f 10 25 74 0d 00 	movss  0xd74(%rip),%xmm4        # 215c <_IO_stdin_used+0x15c>
    13e7:	00 
    13e8:	0f 85 b5 00 00 00    	jne    14a3 <main+0x323>
    13ee:	48 8d 3d 39 0d 00 00 	lea    0xd39(%rip),%rdi        # 212e <_IO_stdin_used+0x12e>
    13f5:	f3 0f 11 5d c0       	movss  %xmm3,-0x40(%rbp)
    13fa:	f3 0f 11 65 c8       	movss  %xmm4,-0x38(%rbp)
    13ff:	f3 0f 11 4d c4       	movss  %xmm1,-0x3c(%rbp)
    1404:	e8 d7 fc ff ff       	call   10e0 <puts@plt>
    1409:	f3 0f 10 65 c8       	movss  -0x38(%rbp),%xmm4
    140e:	f3 0f 10 5d c0       	movss  -0x40(%rbp),%xmm3
    1413:	66 41 0f 6e f5       	movd   %r13d,%xmm6
    1418:	f3 0f 10 4d c4       	movss  -0x3c(%rbp),%xmm1
    141d:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1421:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1425:	48 8d 35 44 0c 00 00 	lea    0xc44(%rip),%rsi        # 2070 <_IO_stdin_used+0x70>
    142c:	f3 0f 5a d6          	cvtss2sd %xmm6,%xmm2
    1430:	bf 01 00 00 00       	mov    $0x1,%edi
    1435:	f3 0f 5a e4          	cvtss2sd %xmm4,%xmm4
    1439:	f3 0f 5a db          	cvtss2sd %xmm3,%xmm3
    143d:	66 41 0f 6e f4       	movd   %r12d,%xmm6
    1442:	b8 05 00 00 00       	mov    $0x5,%eax
    1447:	f2 0f 11 55 c8       	movsd  %xmm2,-0x38(%rbp)
    144c:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
    1450:	f3 0f 5a c6          	cvtss2sd %xmm6,%xmm0
    1454:	e8 e7 fc ff ff       	call   1140 <__printf_chk@plt>
    1459:	f2 0f 10 55 c8       	movsd  -0x38(%rbp),%xmm2
    145e:	66 0f 2f 15 22 0d 00 	comisd 0xd22(%rip),%xmm2        # 2188 <_IO_stdin_used+0x188>
    1465:	00 
    1466:	77 72                	ja     14da <main+0x35a>
    1468:	48 8d 15 59 0c 00 00 	lea    0xc59(%rip),%rdx        # 20c8 <_IO_stdin_used+0xc8>
    146f:	48 8d 35 d8 0c 00 00 	lea    0xcd8(%rip),%rsi        # 214e <_IO_stdin_used+0x14e>
    1476:	bf 01 00 00 00       	mov    $0x1,%edi
    147b:	31 c0                	xor    %eax,%eax
    147d:	e8 be fc ff ff       	call   1140 <__printf_chk@plt>
    1482:	31 c0                	xor    %eax,%eax
    1484:	48 89 dc             	mov    %rbx,%rsp
    1487:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    148b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1492:	00 00 
    1494:	75 66                	jne    14fc <main+0x37c>
    1496:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    149a:	5b                   	pop    %rbx
    149b:	41 5c                	pop    %r12
    149d:	41 5d                	pop    %r13
    149f:	41 5e                	pop    %r14
    14a1:	5d                   	pop    %rbp
    14a2:	c3                   	ret    
    14a3:	f2 44 0f 5e c6       	divsd  %xmm6,%xmm8
    14a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    14ac:	f3 0f 11 5d c4       	movss  %xmm3,-0x3c(%rbp)
    14b1:	f3 0f 11 4d c8       	movss  %xmm1,-0x38(%rbp)
    14b6:	f2 41 0f 5a c0       	cvtsd2ss %xmm8,%xmm0
    14bb:	e8 60 fc ff ff       	call   1120 <log10f@plt>
    14c0:	f3 0f 10 5d c4       	movss  -0x3c(%rbp),%xmm3
    14c5:	f3 0f 59 05 97 0c 00 	mulss  0xc97(%rip),%xmm0        # 2164 <_IO_stdin_used+0x164>
    14cc:	00 
    14cd:	f3 0f 10 4d c8       	movss  -0x38(%rbp),%xmm1
    14d2:	0f 28 e0             	movaps %xmm0,%xmm4
    14d5:	e9 14 ff ff ff       	jmp    13ee <main+0x26e>
    14da:	48 8d 15 e7 0b 00 00 	lea    0xbe7(%rip),%rdx        # 20c8 <_IO_stdin_used+0xc8>
    14e1:	48 8d 35 5b 0c 00 00 	lea    0xc5b(%rip),%rsi        # 2143 <_IO_stdin_used+0x143>
    14e8:	bf 01 00 00 00       	mov    $0x1,%edi
    14ed:	31 c0                	xor    %eax,%eax
    14ef:	e8 4c fc ff ff       	call   1140 <__printf_chk@plt>
    14f4:	83 c8 ff             	or     $0xffffffff,%eax
    14f7:	48 89 dc             	mov    %rbx,%rsp
    14fa:	eb 8b                	jmp    1487 <main+0x307>
    14fc:	e8 0f fc ff ff       	call   1110 <__stack_chk_fail@plt>
    1501:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1508:	00 00 00 
    150b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001510 <_start>:
    1510:	f3 0f 1e fa          	endbr64 
    1514:	31 ed                	xor    %ebp,%ebp
    1516:	49 89 d1             	mov    %rdx,%r9
    1519:	5e                   	pop    %rsi
    151a:	48 89 e2             	mov    %rsp,%rdx
    151d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1521:	50                   	push   %rax
    1522:	54                   	push   %rsp
    1523:	45 31 c0             	xor    %r8d,%r8d
    1526:	31 c9                	xor    %ecx,%ecx
    1528:	48 8d 3d 51 fc ff ff 	lea    -0x3af(%rip),%rdi        # 1180 <main>
    152f:	ff 15 a3 2a 00 00    	call   *0x2aa3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1535:	f4                   	hlt    
    1536:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    153d:	00 00 00 

0000000000001540 <deregister_tm_clones>:
    1540:	48 8d 3d c9 2a 00 00 	lea    0x2ac9(%rip),%rdi        # 4010 <__TMC_END__>
    1547:	48 8d 05 c2 2a 00 00 	lea    0x2ac2(%rip),%rax        # 4010 <__TMC_END__>
    154e:	48 39 f8             	cmp    %rdi,%rax
    1551:	74 15                	je     1568 <deregister_tm_clones+0x28>
    1553:	48 8b 05 86 2a 00 00 	mov    0x2a86(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    155a:	48 85 c0             	test   %rax,%rax
    155d:	74 09                	je     1568 <deregister_tm_clones+0x28>
    155f:	ff e0                	jmp    *%rax
    1561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1568:	c3                   	ret    
    1569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001570 <register_tm_clones>:
    1570:	48 8d 3d 99 2a 00 00 	lea    0x2a99(%rip),%rdi        # 4010 <__TMC_END__>
    1577:	48 8d 35 92 2a 00 00 	lea    0x2a92(%rip),%rsi        # 4010 <__TMC_END__>
    157e:	48 29 fe             	sub    %rdi,%rsi
    1581:	48 89 f0             	mov    %rsi,%rax
    1584:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1588:	48 c1 f8 03          	sar    $0x3,%rax
    158c:	48 01 c6             	add    %rax,%rsi
    158f:	48 d1 fe             	sar    %rsi
    1592:	74 14                	je     15a8 <register_tm_clones+0x38>
    1594:	48 8b 05 55 2a 00 00 	mov    0x2a55(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    159b:	48 85 c0             	test   %rax,%rax
    159e:	74 08                	je     15a8 <register_tm_clones+0x38>
    15a0:	ff e0                	jmp    *%rax
    15a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15a8:	c3                   	ret    
    15a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015b0 <__do_global_dtors_aux>:
    15b0:	f3 0f 1e fa          	endbr64 
    15b4:	80 3d 55 2a 00 00 00 	cmpb   $0x0,0x2a55(%rip)        # 4010 <__TMC_END__>
    15bb:	75 2b                	jne    15e8 <__do_global_dtors_aux+0x38>
    15bd:	55                   	push   %rbp
    15be:	48 83 3d 32 2a 00 00 	cmpq   $0x0,0x2a32(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    15c5:	00 
    15c6:	48 89 e5             	mov    %rsp,%rbp
    15c9:	74 0c                	je     15d7 <__do_global_dtors_aux+0x27>
    15cb:	48 8b 3d 36 2a 00 00 	mov    0x2a36(%rip),%rdi        # 4008 <__dso_handle>
    15d2:	e8 f9 fa ff ff       	call   10d0 <__cxa_finalize@plt>
    15d7:	e8 64 ff ff ff       	call   1540 <deregister_tm_clones>
    15dc:	c6 05 2d 2a 00 00 01 	movb   $0x1,0x2a2d(%rip)        # 4010 <__TMC_END__>
    15e3:	5d                   	pop    %rbp
    15e4:	c3                   	ret    
    15e5:	0f 1f 00             	nopl   (%rax)
    15e8:	c3                   	ret    
    15e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015f0 <frame_dummy>:
    15f0:	f3 0f 1e fa          	endbr64 
    15f4:	e9 77 ff ff ff       	jmp    1570 <register_tm_clones>
    15f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001600 <test_Fopen.constprop.0.isra.0>:
    1600:	41 54                	push   %r12
    1602:	49 89 f9             	mov    %rdi,%r9
    1605:	49 89 fc             	mov    %rdi,%r12
    1608:	4c 8d 05 f9 09 00 00 	lea    0x9f9(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    160f:	55                   	push   %rbp
    1610:	48 8d 0d d4 0a 00 00 	lea    0xad4(%rip),%rcx        # 20eb <_IO_stdin_used+0xeb>
    1617:	ba 00 04 00 00       	mov    $0x400,%edx
    161c:	53                   	push   %rbx
    161d:	48 89 f3             	mov    %rsi,%rbx
    1620:	be 01 00 00 00       	mov    $0x1,%esi
    1625:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    162c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1633:	00 00 
    1635:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
    163c:	00 
    163d:	31 c0                	xor    %eax,%eax
    163f:	48 89 e5             	mov    %rsp,%rbp
    1642:	48 89 ef             	mov    %rbp,%rdi
    1645:	e8 26 fb ff ff       	call   1170 <__sprintf_chk@plt>
    164a:	48 8d 35 a0 0a 00 00 	lea    0xaa0(%rip),%rsi        # 20f1 <_IO_stdin_used+0xf1>
    1651:	48 89 ef             	mov    %rbp,%rdi
    1654:	e8 f7 fa ff ff       	call   1150 <fopen@plt>
    1659:	48 89 03             	mov    %rax,(%rbx)
    165c:	48 85 c0             	test   %rax,%rax
    165f:	74 1f                	je     1680 <test_Fopen.constprop.0.isra.0+0x80>
    1661:	48 8b 84 24 08 04 00 	mov    0x408(%rsp),%rax
    1668:	00 
    1669:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1670:	00 00 
    1672:	75 22                	jne    1696 <test_Fopen.constprop.0.isra.0+0x96>
    1674:	48 81 c4 10 04 00 00 	add    $0x410,%rsp
    167b:	5b                   	pop    %rbx
    167c:	5d                   	pop    %rbp
    167d:	41 5c                	pop    %r12
    167f:	c3                   	ret    
    1680:	4c 89 e2             	mov    %r12,%rdx
    1683:	48 8d 35 6a 0a 00 00 	lea    0xa6a(%rip),%rsi        # 20f4 <_IO_stdin_used+0xf4>
    168a:	bf 01 00 00 00       	mov    $0x1,%edi
    168f:	e8 ac fa ff ff       	call   1140 <__printf_chk@plt>
    1694:	eb cb                	jmp    1661 <test_Fopen.constprop.0.isra.0+0x61>
    1696:	e8 75 fa ff ff       	call   1110 <__stack_chk_fail@plt>
    169b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000016a0 <read_write_buffer.constprop.0>:
    16a0:	41 54                	push   %r12
    16a2:	55                   	push   %rbp
    16a3:	48 89 f5             	mov    %rsi,%rbp
    16a6:	48 83 ec 18          	sub    $0x18,%rsp
    16aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16b1:	00 00 
    16b3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    16b8:	31 c0                	xor    %eax,%eax
    16ba:	48 89 e6             	mov    %rsp,%rsi
    16bd:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    16c4:	00 
    16c5:	e8 36 ff ff ff       	call   1600 <test_Fopen.constprop.0.isra.0>
    16ca:	4c 8b 24 24          	mov    (%rsp),%r12
    16ce:	ba a0 0f 00 00       	mov    $0xfa0,%edx
    16d3:	48 89 ef             	mov    %rbp,%rdi
    16d6:	be 04 00 00 00       	mov    $0x4,%esi
    16db:	4c 89 e1             	mov    %r12,%rcx
    16de:	e8 0d fa ff ff       	call   10f0 <fread@plt>
    16e3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    16e8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    16ef:	00 00 
    16f1:	75 0f                	jne    1702 <read_write_buffer.constprop.0+0x62>
    16f3:	48 83 c4 18          	add    $0x18,%rsp
    16f7:	4c 89 e7             	mov    %r12,%rdi
    16fa:	5d                   	pop    %rbp
    16fb:	41 5c                	pop    %r12
    16fd:	e9 fe f9 ff ff       	jmp    1100 <fclose@plt>
    1702:	e8 09 fa ff ff       	call   1110 <__stack_chk_fail@plt>
    1707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    170e:	00 00 

0000000000001710 <riscv_dsp_quaternion_normalize_f32>:
    1710:	f3 0f 1e fa          	endbr64 
    1714:	85 d2                	test   %edx,%edx
    1716:	0f 84 84 00 00 00    	je     17a0 <riscv_dsp_quaternion_normalize_f32+0x90>
    171c:	41 54                	push   %r12
    171e:	66 0f ef ed          	pxor   %xmm5,%xmm5
    1722:	55                   	push   %rbp
    1723:	31 ed                	xor    %ebp,%ebp
    1725:	53                   	push   %rbx
    1726:	31 db                	xor    %ebx,%ebx
    1728:	48 83 ec 30          	sub    $0x30,%rsp
    172c:	0f 1f 40 00          	nopl   0x0(%rax)
    1730:	41 89 dc             	mov    %ebx,%r12d
    1733:	4a 8d 04 a7          	lea    (%rdi,%r12,4),%rax
    1737:	f3 0f 10 48 0c       	movss  0xc(%rax),%xmm1
    173c:	f3 0f 10 00          	movss  (%rax),%xmm0
    1740:	0f 10 20             	movups (%rax),%xmm4
    1743:	8d 43 01             	lea    0x1(%rbx),%eax
    1746:	f3 0f 10 1c 87       	movss  (%rdi,%rax,4),%xmm3
    174b:	f3 0f 59 c0          	mulss  %xmm0,%xmm0
    174f:	8d 43 02             	lea    0x2(%rbx),%eax
    1752:	f3 0f 10 14 87       	movss  (%rdi,%rax,4),%xmm2
    1757:	f3 0f 59 c9          	mulss  %xmm1,%xmm1
    175b:	f3 0f 59 db          	mulss  %xmm3,%xmm3
    175f:	f3 0f 59 d2          	mulss  %xmm2,%xmm2
    1763:	f3 0f 58 c3          	addss  %xmm3,%xmm0
    1767:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    176b:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    176f:	0f 2e e8             	ucomiss %xmm0,%xmm5
    1772:	77 2d                	ja     17a1 <riscv_dsp_quaternion_normalize_f32+0x91>
    1774:	f3 0f 51 c0          	sqrtss %xmm0,%xmm0
    1778:	0f c6 c0 00          	shufps $0x0,%xmm0,%xmm0
    177c:	0f 5e e0             	divps  %xmm0,%xmm4
    177f:	83 c5 01             	add    $0x1,%ebp
    1782:	83 c3 04             	add    $0x4,%ebx
    1785:	42 0f 11 24 a6       	movups %xmm4,(%rsi,%r12,4)
    178a:	39 ea                	cmp    %ebp,%edx
    178c:	75 a2                	jne    1730 <riscv_dsp_quaternion_normalize_f32+0x20>
    178e:	48 83 c4 30          	add    $0x30,%rsp
    1792:	5b                   	pop    %rbx
    1793:	5d                   	pop    %rbp
    1794:	41 5c                	pop    %r12
    1796:	c3                   	ret    
    1797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    179e:	00 00 
    17a0:	c3                   	ret    
    17a1:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
    17a5:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    17aa:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    17af:	0f 29 24 24          	movaps %xmm4,(%rsp)
    17b3:	e8 78 f9 ff ff       	call   1130 <sqrtf@plt>
    17b8:	8b 54 24 2c          	mov    0x2c(%rsp),%edx
    17bc:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    17c1:	66 0f ef ed          	pxor   %xmm5,%xmm5
    17c5:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    17ca:	0f 28 24 24          	movaps (%rsp),%xmm4
    17ce:	eb a8                	jmp    1778 <riscv_dsp_quaternion_normalize_f32+0x68>

Disassembly of section .fini:

00000000000017d0 <_fini>:
    17d0:	f3 0f 1e fa          	endbr64 
    17d4:	48 83 ec 08          	sub    $0x8,%rsp
    17d8:	48 83 c4 08          	add    $0x8,%rsp
    17dc:	c3                   	ret    
