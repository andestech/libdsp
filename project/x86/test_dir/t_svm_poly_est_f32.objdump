
t_svm_poly_est_f32:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 2f 00 00    	push   0x2f72(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 2f 00 00 	bnd jmp *0x2f73(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 5d 2f 00 00 	bnd jmp *0x2f5d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <puts@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3fa8 <puts@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <fread@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 2e 00 00 	bnd jmp *0x2ef5(%rip)        # 3fb0 <fread@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <fclose@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 2e 00 00 	bnd jmp *0x2eed(%rip)        # 3fb8 <fclose@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 2e 00 00 	bnd jmp *0x2ee5(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fopen@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 2e 00 00 	bnd jmp *0x2edd(%rip)        # 3fc8 <fopen@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__sprintf_chk@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 2e 00 00 	bnd jmp *0x2ed5(%rip)        # 3fd0 <__sprintf_chk@GLIBC_2.3.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <main>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	41 57                	push   %r15
    1106:	48 8d 15 0b 10 00 00 	lea    0x100b(%rip),%rdx        # 2118 <dualcoe>
    110d:	be 01 00 00 00       	mov    $0x1,%esi
    1112:	4c 8d 05 ef 0e 00 00 	lea    0xeef(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    1119:	41 56                	push   %r14
    111b:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1120:	48 8d 0d 44 0f 00 00 	lea    0xf44(%rip),%rcx        # 206b <_IO_stdin_used+0x6b>
    1127:	ba 00 02 00 00       	mov    $0x200,%edx
    112c:	41 55                	push   %r13
    112e:	4c 8d 2d 47 0f 00 00 	lea    0xf47(%rip),%r13        # 207c <_IO_stdin_used+0x7c>
    1135:	41 54                	push   %r12
    1137:	55                   	push   %rbp
    1138:	53                   	push   %rbx
    1139:	48 81 ec 98 03 00 00 	sub    $0x398,%rsp
    1140:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1147:	00 00 
    1149:	48 89 84 24 88 03 00 	mov    %rax,0x388(%rsp)
    1150:	00 
    1151:	31 c0                	xor    %eax,%eax
    1153:	48 8b 05 ce 0f 00 00 	mov    0xfce(%rip),%rax        # 2128 <dualcoe+0x10>
    115a:	4c 8d a4 24 80 01 00 	lea    0x180(%rsp),%r12
    1161:	00 
    1162:	c7 44 24 18 cd cc cc 	movl   $0xbdcccccd,0x18(%rsp)
    1169:	bd 
    116a:	4c 89 e7             	mov    %r12,%rdi
    116d:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%rsp)
    1174:	00 
    1175:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    117a:	48 8d 05 1f 0f 00 00 	lea    0xf1f(%rip),%rax        # 20a0 <vec>
    1181:	66 48 0f 6e c8       	movq   %rax,%xmm1
    1186:	48 8d 05 83 2e 00 00 	lea    0x2e83(%rip),%rax        # 4010 <pclass>
    118d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    1192:	48 8b 05 97 0f 00 00 	mov    0xf97(%rip),%rax        # 2130 <dualcoe+0x18>
    1199:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    119d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    11a2:	48 89 44 24 3c       	mov    %rax,0x3c(%rsp)
    11a7:	31 c0                	xor    %eax,%eax
    11a9:	e8 42 ff ff ff       	call   10f0 <__sprintf_chk@plt>
    11ae:	4c 89 ee             	mov    %r13,%rsi
    11b1:	4c 89 e7             	mov    %r12,%rdi
    11b4:	e8 27 ff ff ff       	call   10e0 <fopen@plt>
    11b9:	48 85 c0             	test   %rax,%rax
    11bc:	0f 84 d1 00 00 00    	je     1293 <main+0x193>
    11c2:	ba 00 02 00 00       	mov    $0x200,%edx
    11c7:	be 01 00 00 00       	mov    $0x1,%esi
    11cc:	4c 89 e7             	mov    %r12,%rdi
    11cf:	48 89 c5             	mov    %rax,%rbp
    11d2:	48 8d 0d 6f 0e 00 00 	lea    0xe6f(%rip),%rcx        # 2048 <_IO_stdin_used+0x48>
    11d9:	4c 8d 05 28 0e 00 00 	lea    0xe28(%rip),%r8        # 2008 <_IO_stdin_used+0x8>
    11e0:	31 c0                	xor    %eax,%eax
    11e2:	e8 09 ff ff ff       	call   10f0 <__sprintf_chk@plt>
    11e7:	4c 89 ee             	mov    %r13,%rsi
    11ea:	4c 89 e7             	mov    %r12,%rdi
    11ed:	e8 ee fe ff ff       	call   10e0 <fopen@plt>
    11f2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    11f7:	48 89 c1             	mov    %rax,%rcx
    11fa:	48 85 c0             	test   %rax,%rax
    11fd:	0f 84 90 00 00 00    	je     1293 <main+0x193>
    1203:	ba 1e 00 00 00       	mov    $0x1e,%edx
    1208:	4c 8d b4 24 00 01 00 	lea    0x100(%rsp),%r14
    120f:	00 
    1210:	be 04 00 00 00       	mov    $0x4,%esi
    1215:	4c 89 f7             	mov    %r14,%rdi
    1218:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    121d:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    1222:	e8 89 fe ff ff       	call   10b0 <fread@plt>
    1227:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    122e:	00 
    122f:	4c 8d ac 24 f8 00 00 	lea    0xf8(%rsp),%r13
    1236:	00 
    1237:	48 89 04 24          	mov    %rax,(%rsp)
    123b:	49 89 c7             	mov    %rax,%r15
    123e:	66 90                	xchg   %ax,%ax
    1240:	48 89 e9             	mov    %rbp,%rcx
    1243:	ba 0a 00 00 00       	mov    $0xa,%edx
    1248:	be 04 00 00 00       	mov    $0x4,%esi
    124d:	48 89 df             	mov    %rbx,%rdi
    1250:	e8 5b fe ff ff       	call   10b0 <fread@plt>
    1255:	4c 89 fa             	mov    %r15,%rdx
    1258:	48 89 de             	mov    %rbx,%rsi
    125b:	4c 89 e7             	mov    %r12,%rdi
    125e:	e8 7d 01 00 00       	call   13e0 <riscv_dsp_svm_poly_est_f32>
    1263:	49 83 c7 04          	add    $0x4,%r15
    1267:	4d 39 fd             	cmp    %r15,%r13
    126a:	75 d4                	jne    1240 <main+0x140>
    126c:	31 c0                	xor    %eax,%eax
    126e:	eb 0a                	jmp    127a <main+0x17a>
    1270:	48 83 c0 04          	add    $0x4,%rax
    1274:	48 83 f8 78          	cmp    $0x78,%rax
    1278:	74 41                	je     12bb <main+0x1bb>
    127a:	48 8b 0c 24          	mov    (%rsp),%rcx
    127e:	41 8b 1c 06          	mov    (%r14,%rax,1),%ebx
    1282:	39 1c 01             	cmp    %ebx,(%rcx,%rax,1)
    1285:	74 e9                	je     1270 <main+0x170>
    1287:	48 8d 3d f0 0d 00 00 	lea    0xdf0(%rip),%rdi        # 207e <_IO_stdin_used+0x7e>
    128e:	e8 0d fe ff ff       	call   10a0 <puts@plt>
    1293:	83 c8 ff             	or     $0xffffffff,%eax
    1296:	48 8b 94 24 88 03 00 	mov    0x388(%rsp),%rdx
    129d:	00 
    129e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12a5:	00 00 
    12a7:	75 34                	jne    12dd <main+0x1dd>
    12a9:	48 81 c4 98 03 00 00 	add    $0x398,%rsp
    12b0:	5b                   	pop    %rbx
    12b1:	5d                   	pop    %rbp
    12b2:	41 5c                	pop    %r12
    12b4:	41 5d                	pop    %r13
    12b6:	41 5e                	pop    %r14
    12b8:	41 5f                	pop    %r15
    12ba:	c3                   	ret    
    12bb:	48 8d 3d ca 0d 00 00 	lea    0xdca(%rip),%rdi        # 208c <_IO_stdin_used+0x8c>
    12c2:	e8 d9 fd ff ff       	call   10a0 <puts@plt>
    12c7:	48 89 ef             	mov    %rbp,%rdi
    12ca:	e8 f1 fd ff ff       	call   10c0 <fclose@plt>
    12cf:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    12d4:	e8 e7 fd ff ff       	call   10c0 <fclose@plt>
    12d9:	31 c0                	xor    %eax,%eax
    12db:	eb b9                	jmp    1296 <main+0x196>
    12dd:	e8 ee fd ff ff       	call   10d0 <__stack_chk_fail@plt>
    12e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    12e9:	00 00 00 
    12ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012f0 <_start>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	31 ed                	xor    %ebp,%ebp
    12f6:	49 89 d1             	mov    %rdx,%r9
    12f9:	5e                   	pop    %rsi
    12fa:	48 89 e2             	mov    %rsp,%rdx
    12fd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1301:	50                   	push   %rax
    1302:	54                   	push   %rsp
    1303:	45 31 c0             	xor    %r8d,%r8d
    1306:	31 c9                	xor    %ecx,%ecx
    1308:	48 8d 3d f1 fd ff ff 	lea    -0x20f(%rip),%rdi        # 1100 <main>
    130f:	ff 15 c3 2c 00 00    	call   *0x2cc3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1315:	f4                   	hlt    
    1316:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    131d:	00 00 00 

0000000000001320 <deregister_tm_clones>:
    1320:	48 8d 3d f1 2c 00 00 	lea    0x2cf1(%rip),%rdi        # 4018 <__TMC_END__>
    1327:	48 8d 05 ea 2c 00 00 	lea    0x2cea(%rip),%rax        # 4018 <__TMC_END__>
    132e:	48 39 f8             	cmp    %rdi,%rax
    1331:	74 15                	je     1348 <deregister_tm_clones+0x28>
    1333:	48 8b 05 a6 2c 00 00 	mov    0x2ca6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    133a:	48 85 c0             	test   %rax,%rax
    133d:	74 09                	je     1348 <deregister_tm_clones+0x28>
    133f:	ff e0                	jmp    *%rax
    1341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1348:	c3                   	ret    
    1349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001350 <register_tm_clones>:
    1350:	48 8d 3d c1 2c 00 00 	lea    0x2cc1(%rip),%rdi        # 4018 <__TMC_END__>
    1357:	48 8d 35 ba 2c 00 00 	lea    0x2cba(%rip),%rsi        # 4018 <__TMC_END__>
    135e:	48 29 fe             	sub    %rdi,%rsi
    1361:	48 89 f0             	mov    %rsi,%rax
    1364:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1368:	48 c1 f8 03          	sar    $0x3,%rax
    136c:	48 01 c6             	add    %rax,%rsi
    136f:	48 d1 fe             	sar    %rsi
    1372:	74 14                	je     1388 <register_tm_clones+0x38>
    1374:	48 8b 05 75 2c 00 00 	mov    0x2c75(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    137b:	48 85 c0             	test   %rax,%rax
    137e:	74 08                	je     1388 <register_tm_clones+0x38>
    1380:	ff e0                	jmp    *%rax
    1382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1388:	c3                   	ret    
    1389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001390 <__do_global_dtors_aux>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	80 3d 7d 2c 00 00 00 	cmpb   $0x0,0x2c7d(%rip)        # 4018 <__TMC_END__>
    139b:	75 2b                	jne    13c8 <__do_global_dtors_aux+0x38>
    139d:	55                   	push   %rbp
    139e:	48 83 3d 52 2c 00 00 	cmpq   $0x0,0x2c52(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    13a5:	00 
    13a6:	48 89 e5             	mov    %rsp,%rbp
    13a9:	74 0c                	je     13b7 <__do_global_dtors_aux+0x27>
    13ab:	48 8b 3d 56 2c 00 00 	mov    0x2c56(%rip),%rdi        # 4008 <__dso_handle>
    13b2:	e8 d9 fc ff ff       	call   1090 <__cxa_finalize@plt>
    13b7:	e8 64 ff ff ff       	call   1320 <deregister_tm_clones>
    13bc:	c6 05 55 2c 00 00 01 	movb   $0x1,0x2c55(%rip)        # 4018 <__TMC_END__>
    13c3:	5d                   	pop    %rbp
    13c4:	c3                   	ret    
    13c5:	0f 1f 00             	nopl   (%rax)
    13c8:	c3                   	ret    
    13c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013d0 <frame_dummy>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	e9 77 ff ff ff       	jmp    1350 <register_tm_clones>
    13d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013e0 <riscv_dsp_svm_poly_est_f32>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	41 57                	push   %r15
    13e6:	66 0f ef e4          	pxor   %xmm4,%xmm4
    13ea:	41 56                	push   %r14
    13ec:	41 55                	push   %r13
    13ee:	41 54                	push   %r12
    13f0:	55                   	push   %rbp
    13f1:	48 89 fd             	mov    %rdi,%rbp
    13f4:	f3 0f 10 6d 30       	movss  0x30(%rbp),%xmm5
    13f9:	f3 0f 10 75 2c       	movss  0x2c(%rbp),%xmm6
    13fe:	53                   	push   %rbx
    13ff:	44 8b 5d 28          	mov    0x28(%rbp),%r11d
    1403:	f3 0f 10 5f 08       	movss  0x8(%rdi),%xmm3
    1408:	48 8b 47 18          	mov    0x18(%rdi),%rax
    140c:	44 8b 47 04          	mov    0x4(%rdi),%r8d
    1410:	48 89 54 24 f0       	mov    %rdx,-0x10(%rsp)
    1415:	8b 17                	mov    (%rdi),%edx
    1417:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    141b:	85 d2                	test   %edx,%edx
    141d:	0f 84 1f 01 00 00    	je     1542 <riscv_dsp_svm_poly_est_f32+0x162>
    1423:	4c 8d 2c 97          	lea    (%rdi,%rdx,4),%r13
    1427:	44 89 c2             	mov    %r8d,%edx
    142a:	44 89 c3             	mov    %r8d,%ebx
    142d:	48 89 f1             	mov    %rsi,%rcx
    1430:	c1 ea 02             	shr    $0x2,%edx
    1433:	45 8d 70 ff          	lea    -0x1(%r8),%r14d
    1437:	83 e3 fc             	and    $0xfffffffc,%ebx
    143a:	41 83 eb 01          	sub    $0x1,%r11d
    143e:	8d 72 ff             	lea    -0x1(%rdx),%esi
    1441:	41 89 dc             	mov    %ebx,%r12d
    1444:	66 0f ef e4          	pxor   %xmm4,%xmm4
    1448:	44 89 f2             	mov    %r14d,%edx
    144b:	48 83 c6 01          	add    $0x1,%rsi
    144f:	49 c1 e4 02          	shl    $0x2,%r12
    1453:	4c 8d 3c 95 04 00 00 	lea    0x4(,%rdx,4),%r15
    145a:	00 
    145b:	48 c1 e6 04          	shl    $0x4,%rsi
    145f:	90                   	nop
    1460:	0f 28 c4             	movaps %xmm4,%xmm0
    1463:	45 85 c0             	test   %r8d,%r8d
    1466:	0f 84 99 00 00 00    	je     1505 <riscv_dsp_svm_poly_est_f32+0x125>
    146c:	41 83 fe 02          	cmp    $0x2,%r14d
    1470:	0f 86 08 01 00 00    	jbe    157e <riscv_dsp_svm_poly_est_f32+0x19e>
    1476:	31 d2                	xor    %edx,%edx
    1478:	0f 28 c4             	movaps %xmm4,%xmm0
    147b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1480:	0f 10 14 10          	movups (%rax,%rdx,1),%xmm2
    1484:	0f 10 3c 11          	movups (%rcx,%rdx,1),%xmm7
    1488:	48 83 c2 10          	add    $0x10,%rdx
    148c:	0f 59 d7             	mulps  %xmm7,%xmm2
    148f:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    1493:	0f 28 ca             	movaps %xmm2,%xmm1
    1496:	0f c6 ca 55          	shufps $0x55,%xmm2,%xmm1
    149a:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    149e:	0f 28 c2             	movaps %xmm2,%xmm0
    14a1:	0f 15 c2             	unpckhps %xmm2,%xmm0
    14a4:	0f c6 d2 ff          	shufps $0xff,%xmm2,%xmm2
    14a8:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    14ac:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    14b0:	48 39 f2             	cmp    %rsi,%rdx
    14b3:	75 cb                	jne    1480 <riscv_dsp_svm_poly_est_f32+0xa0>
    14b5:	4e 8d 0c 20          	lea    (%rax,%r12,1),%r9
    14b9:	89 da                	mov    %ebx,%edx
    14bb:	41 39 d8             	cmp    %ebx,%r8d
    14be:	74 42                	je     1502 <riscv_dsp_svm_poly_est_f32+0x122>
    14c0:	41 89 d2             	mov    %edx,%r10d
    14c3:	f3 42 0f 10 0c 91    	movss  (%rcx,%r10,4),%xmm1
    14c9:	f3 41 0f 59 09       	mulss  (%r9),%xmm1
    14ce:	44 8d 52 01          	lea    0x1(%rdx),%r10d
    14d2:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    14d6:	45 39 d0             	cmp    %r10d,%r8d
    14d9:	76 27                	jbe    1502 <riscv_dsp_svm_poly_est_f32+0x122>
    14db:	f3 42 0f 10 0c 91    	movss  (%rcx,%r10,4),%xmm1
    14e1:	f3 41 0f 59 49 04    	mulss  0x4(%r9),%xmm1
    14e7:	83 c2 02             	add    $0x2,%edx
    14ea:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    14ee:	41 39 d0             	cmp    %edx,%r8d
    14f1:	76 0f                	jbe    1502 <riscv_dsp_svm_poly_est_f32+0x122>
    14f3:	f3 0f 10 0c 91       	movss  (%rcx,%rdx,4),%xmm1
    14f8:	f3 41 0f 59 49 08    	mulss  0x8(%r9),%xmm1
    14fe:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    1502:	4c 01 f8             	add    %r15,%rax
    1505:	f3 0f 59 c5          	mulss  %xmm5,%xmm0
    1509:	48 83 c7 04          	add    $0x4,%rdi
    150d:	f3 0f 10 57 fc       	movss  -0x4(%rdi),%xmm2
    1512:	f3 0f 58 c6          	addss  %xmm6,%xmm0
    1516:	45 85 db             	test   %r11d,%r11d
    1519:	74 4d                	je     1568 <riscv_dsp_svm_poly_est_f32+0x188>
    151b:	44 89 da             	mov    %r11d,%edx
    151e:	0f 28 c8             	movaps %xmm0,%xmm1
    1521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1528:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
    152c:	83 ea 01             	sub    $0x1,%edx
    152f:	75 f7                	jne    1528 <riscv_dsp_svm_poly_est_f32+0x148>
    1531:	f3 0f 59 d1          	mulss  %xmm1,%xmm2
    1535:	f3 0f 58 da          	addss  %xmm2,%xmm3
    1539:	4c 39 ef             	cmp    %r13,%rdi
    153c:	0f 85 1e ff ff ff    	jne    1460 <riscv_dsp_svm_poly_est_f32+0x80>
    1542:	31 d2                	xor    %edx,%edx
    1544:	0f 2f e3             	comiss %xmm3,%xmm4
    1547:	48 8b 45 20          	mov    0x20(%rbp),%rax
    154b:	48 8b 5c 24 f0       	mov    -0x10(%rsp),%rbx
    1550:	0f 92 c2             	setb   %dl
    1553:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    1556:	89 03                	mov    %eax,(%rbx)
    1558:	5b                   	pop    %rbx
    1559:	5d                   	pop    %rbp
    155a:	41 5c                	pop    %r12
    155c:	41 5d                	pop    %r13
    155e:	41 5e                	pop    %r14
    1560:	41 5f                	pop    %r15
    1562:	c3                   	ret    
    1563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1568:	0f 28 c8             	movaps %xmm0,%xmm1
    156b:	f3 0f 59 d1          	mulss  %xmm1,%xmm2
    156f:	f3 0f 58 da          	addss  %xmm2,%xmm3
    1573:	4c 39 ef             	cmp    %r13,%rdi
    1576:	0f 85 e4 fe ff ff    	jne    1460 <riscv_dsp_svm_poly_est_f32+0x80>
    157c:	eb c4                	jmp    1542 <riscv_dsp_svm_poly_est_f32+0x162>
    157e:	49 89 c1             	mov    %rax,%r9
    1581:	31 d2                	xor    %edx,%edx
    1583:	0f 28 c4             	movaps %xmm4,%xmm0
    1586:	e9 35 ff ff ff       	jmp    14c0 <riscv_dsp_svm_poly_est_f32+0xe0>

Disassembly of section .fini:

000000000000158c <_fini>:
    158c:	f3 0f 1e fa          	endbr64 
    1590:	48 83 ec 08          	sub    $0x8,%rsp
    1594:	48 83 c4 08          	add    $0x8,%rsp
    1598:	c3                   	ret    
