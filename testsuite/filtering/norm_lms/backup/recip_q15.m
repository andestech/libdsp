function [ret, ret2] = recip_q15(src, dst)
    RecipTable=  [ 0x7F03 0x7D13 0x7B31 0x795E 0x7798 0x75E0 0x7434 0x7294 0x70FF 0x6F76 0x6DF6 0x6C82 0x6B16 0x69B5 0x685C 0x670C 0x65C4 0x6484 0x634C 0x621C 0x60F3 0x5FD0 0x5EB5 0x5DA0 0x5C91 0x5B88 0x5A85 0x5988 0x5890 0x579E 0x56B0 0x55C8 0x54E4 0x5405 0x532B 0x5255 0x5183 0x50B6 0x4FEC 0x4F26 0x4E64 0x4DA6 0x4CEC 0x4C34 0x4B81 0x4AD0 0x4A23 0x4978 0x48D1 0x482D 0x478C 0x46ED 0x4651 0x45B8 0x4521 0x448D 0x43FC 0x436C 0x42DF 0x4255 0x41CC 0x4146 0x40C2 0x4040];

sig = 0;
       index = 0;
       INDEX_MASK= 0x0000003F;
       if(src > 0)
          sig = clz(src) - 17;
       else
          sig = clz(-src) - 17;
       endif
       src = bitshift(src, sig);
       index = bitshift(src, -8);
       index = bitand(index, INDEX_MASK);
       %octave index starts from 1 not zero. therefore, add one.
       index++;
       out = RecipTable(index);
    %   printf('index=%f, out=%f\n', index, out);
       for l = 1 : 2
          val = bitshift( src * out ,-15);
          val = 0x7FFF - val;
          out = bitshift( out * val ,-14);
       end
       dst=out;
       ret2 = out;
       ret = sig +1;
